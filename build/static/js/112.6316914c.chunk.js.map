{"version":3,"file":"static/js/112.6316914c.chunk.js","mappings":"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","sources":["pages/auth/jwt/login.js","components/hook-form/rhf-text-field.js","components/hook-form/form-provider.js","sections/auth/jwt/jwt-login-view.js","sections/auth/jwt/jwt-register-view.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// sections\nimport { JwtLoginView } from 'src/sections/auth/jwt';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Jwt: Login</title>\n      </Helmet>\n\n      <JwtLoginView />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport TextField from '@mui/material/TextField';\n\n// ----------------------------------------------------------------------\n\nexport default function RHFTextField({ name, helperText, type, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          type={type}\n          value={type === 'number' && field.value === 0 ? '' : field.value}\n          onChange={(event) => {\n            if (type === 'number') {\n              field.onChange(Number(event.target.value));\n            } else {\n              field.onChange(event.target.value);\n            }\n          }}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n\nRHFTextField.propTypes = {\n  helperText: PropTypes.object,\n  name: PropTypes.string,\n  type: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { RouterLink } from 'src/routes/components';\nimport { useSearchParams, useRouter } from 'src/routes/hook';\n// config\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// auth\nimport { useAuthContext } from 'src/auth/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport FormProvider from 'src/components/hook-form';\nimport { TextField } from '@mui/material';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { decryptToken, encryptToken } from 'src/utils/common';\nimport { constants } from 'src/utils/constant';\nimport { useSnackbar } from 'src/components/snackbar'\nimport { jwtDecode } from 'src/auth/context/jwt/utils';\n\n// ----------------------------------------------------------------------\n\nexport default function JwtLoginView() {\n  const { login } = useAuthContext();\n  const router = useRouter();\n\n  const [errorMsg, setErrorMsg] = useState('');\n  const searchParams = useSearchParams();\n\n\n  // State for login state\n  const [loginState, setLoginState] = useState({\n    email: 'adminuser@test.in',\n    password: 'defaultPassword',\n    emailErr: false,\n    passErr: false\n  });\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const password = useBoolean();\n\n  const handleLogin = async () => {\n\n    const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n    if (loginState.email.length === 0 || !re.test(loginState.email)) {\n      setLoginState((prev) => ({ ...prev, emailErr: true }));\n      return;\n    }\n    setLoginState((prev) => ({ ...prev, emailErr: false }));\n\n    if (loginState.password.length === 0) {\n      setLoginState((prev) => ({ ...prev, passErr: true }));\n      return;\n    };\n\n    setLoginState((prev) => ({ ...prev, passErr: false }));\n\n    try {\n      setIsSubmitting(true);\n\n\n      // const apiResponse = await axios.post(endpoints.auth.login, {\n      //   email: loginState.email,\n      //   password: loginState.password,\n      // });\n      setIsSubmitting(false);\n      await login?.(loginState.email, loginState.password);\n\n      // if (apiResponse) {\n\n\n\n      // SET TOKEN\n      // const encryptedToken = encryptToken(apiResponse.data.data.token);\n      // localStorage.setItem(constants.keyUserToken, encryptedToken);\n\n      // SET AXIOS HEADER\n      // axios.defaults.headers.common.Authorization = `Bearer ${apiResponse.data.data.token}`;\n      // setIsSubmitting(false);\n\n      // Go TO DASHBOARD\n      // router.push('/dashboard');\n\n      // };\n\n    } catch (error) {\n      setIsSubmitting(false);\n      enqueueSnackbar(error.error, { variant: \"error\" })\n    }\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(constants.keyUserToken);\n    if (token) {\n      const decrypted = decryptToken(token);\n\n      if (decrypted) {\n\n        const decodedToken = jwtDecode(decrypted);\n        const currentTimestamp = Math.floor(Date.now() / 1000);\n\n        if (decodedToken.exp && decodedToken.exp < currentTimestamp) {\n\n          // Token is expired, clear token and redirect to login page\n          localStorage.clear();\n\n          // Display a message\n          alert(\"Your session has expired. Please log in again.\");\n\n          // Redirect to '/login';\n          window.location.href = '/';\n\n        } else {\n          router.push('/dashboard');\n        }\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const renderHead = (\n    <Stack spacing={2} sx={{ mb: 5 }}>\n      <Typography variant=\"h4\">Sign in to Accounting Software</Typography>\n\n      {/* <Stack direction=\"row\" spacing={0.5}>\n        <Typography variant=\"body2\">New user?</Typography>\n\n        <Link component={RouterLink} href={paths.auth.jwt.register} variant=\"subtitle2\">\n          Create an account\n        </Link>\n      </Stack> */}\n    </Stack>\n  );\n\n  const renderForm = (\n    <Stack spacing={2.5}>\n      {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\n\n      <TextField\n        name=\"email\"\n        label=\"Email address\"\n        value={loginState.email}\n        onChange={(e) => {\n          setLoginState((prev) => ({ ...prev, email: e.target.value, emailErr: false }));\n        }}\n        error={loginState.emailErr}\n        helperText={loginState.emailErr ? 'Please enter valid email!' : null}\n      />\n\n      <TextField\n        name=\"password\"\n        label=\"Password\"\n        type={password.value ? 'text' : 'password'}\n        value={loginState.password}\n        onChange={(e) => {\n          setLoginState((prev) => ({ ...prev, password: e.target.value, passErr: false }))\n        }}\n        error={loginState.passErr}\n        helperText={loginState.passErr ? 'Please enter valid password!' : null}\n\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={password.onToggle} edge=\"end\">\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        variant=\"contained\"\n        loading={isSubmitting}\n        onClick={handleLogin}\n      >\n        Login\n      </LoadingButton>\n    </Stack>\n  );\n\n  return (\n    <FormProvider>\n      {renderHead}\n\n      {/* <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Use email : <strong>demo@minimals.cc</strong> / password :<strong> demo1234</strong>\n      </Alert> */}\n\n      {renderForm}\n    </FormProvider>\n  );\n}\n","import * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { RouterLink } from 'src/routes/components';\nimport { useSearchParams, useRouter } from 'src/routes/hook';\n// config\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\n// auth\nimport { useAuthContext } from 'src/auth/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function JwtRegisterView() {\n  const { register } = useAuthContext();\n\n  const router = useRouter();\n\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const searchParams = useSearchParams();\n\n  const returnTo = searchParams.get('returnTo');\n\n  const password = useBoolean();\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().required('First name required'),\n    lastName: Yup.string().required('Last name required'),\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const defaultValues = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(RegisterSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await register?.(data.email, data.password, data.firstName, data.lastName);\n\n      router.push(returnTo || PATH_AFTER_LOGIN);\n    } catch (error) {\n      console.error(error);\n      reset();\n      setErrorMsg(typeof error === 'string' ? error : error.message);\n    }\n  });\n\n  const renderHead = (\n    <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\n      <Typography variant=\"h4\">Get started absolutely free</Typography>\n\n      <Stack direction=\"row\" spacing={0.5}>\n        <Typography variant=\"body2\"> Already have an account? </Typography>\n\n        <Link href={paths.auth.jwt.login} component={RouterLink} variant=\"subtitle2\">\n          Sign in\n        </Link>\n      </Stack>\n    </Stack>\n  );\n\n  const renderTerms = (\n    <Typography\n      component=\"div\"\n      sx={{ color: 'text.secondary', mt: 2.5, typography: 'caption', textAlign: 'center' }}\n    >\n      {'By signing up, I agree to '}\n      <Link underline=\"always\" color=\"text.primary\">\n        Terms of Service\n      </Link>\n      {' and '}\n      <Link underline=\"always\" color=\"text.primary\">\n        Privacy Policy\n      </Link>\n      .\n    </Typography>\n  );\n\n  const renderForm = (\n    <FormProvider methods={methods} onSubmit={onSubmit}>\n      <Stack spacing={2.5}>\n        {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\n\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n          <RHFTextField name=\"firstName\" label=\"First name\" />\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\n        </Stack>\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={password.value ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={password.onToggle} edge=\"end\">\n                  <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <LoadingButton\n          fullWidth\n          color=\"inherit\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Create account\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n\n  return (\n    <>\n      {renderHead}\n\n      {renderForm}\n\n      {renderTerms}\n    </>\n  );\n}\n"],"names":["LoginPage","_jsxs","_Fragment","children","_jsx","Helmet","JwtLoginView","RHFTextField","_ref","name","helperText","type","other","_objectWithoutProperties","_excluded","control","useFormContext","Controller","render","_ref2","field","error","fieldState","TextField","_objectSpread","fullWidth","value","onChange","event","Number","target","message","FormProvider","onSubmit","methods","Form","login","useAuthContext","router","useRouter","_useState","useState","_useState2","_slicedToArray","errorMsg","_useState3","useSearchParams","email","password","emailErr","passErr","_useState4","loginState","setLoginState","enqueueSnackbar","useSnackbar","_useState5","_useState6","isSubmitting","setIsSubmitting","useBoolean","handleLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","re","wrap","_context","prev","next","length","test","abrupt","t0","variant","stop","apply","arguments","useEffect","token","localStorage","getItem","constants","decrypted","decryptToken","decodedToken","jwtDecode","currentTimestamp","Math","floor","Date","now","exp","clear","alert","window","location","href","push","renderHead","Stack","spacing","sx","mb","Typography","renderForm","Alert","severity","label","e","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","LoadingButton","color","size","loading","JwtRegisterView","register","setErrorMsg","returnTo","get","RegisterSchema","Yup","shape","firstName","required","lastName","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","formState","data","PATH_AFTER_LOGIN","console","_x","direction","Link","paths","component","RouterLink","renderTerms","mt","typography","textAlign","underline","xs","sm"],"sourceRoot":""}