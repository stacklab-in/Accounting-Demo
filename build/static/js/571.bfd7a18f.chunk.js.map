{"version":3,"file":"static/js/571.bfd7a18f.chunk.js","mappings":"mvBA2BMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAASC,EAAAA,GAAAA,gBACTC,aAAc,OACdC,OAAQ,MACRC,UAAW,OACXC,UAAW,GACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,IAAK,OACLC,EAAG,GAECC,EAAwB,CAC5BhB,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,QACPC,QAASC,EAAAA,GAAAA,gBACTC,aAAc,OACdC,OAAQ,OACRE,UAAW,GACXK,EAAG,GAGCE,EAAmB,CACvBC,SAAU,KACVC,aAAc,GACdC,SAAU,KACVC,YAAa,KACbC,eAAgB,KAChBC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,YAAa,EACbC,gBAAiB,EACjBC,YAAa,GACbC,cAAe,GACfC,KAAM,aAGFC,EAAqB,CACzBC,SAAU,iBACVC,QAAS,KACTC,SAAU,GACVC,UAAW,KACXC,SAAU,KACVC,aAAc,MAGVC,EAA4B,CAChCC,aAAc,GACdC,KAAM,GACNC,QAAS,EACThB,YAAa,EACbG,YAAa,GACbE,KAAM,GACNY,YAAaC,IAAM,IAAIC,OAGV,SAASC,IAAa,IAADC,EAAAC,EAC5BC,GAAWC,EAAAA,EAAAA,MACTC,GAAoBC,EAAAA,EAAAA,MAApBD,gBACRE,GAA0BC,EAAAA,EAAAA,WAAS,iBAAM,CACvCV,IAAM,cACNA,IAAM,cACP,IAACW,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAHKI,EAAKF,EAAA,GAAEG,GAAQH,EAAA,GAOtBI,IAAwBL,EAAAA,EAAAA,WAAS,GAAMM,IAAAJ,EAAAA,EAAAA,GAAAG,GAAA,GAAhCE,GAAID,GAAA,GAAEE,GAAOF,GAAA,GAUdG,GAAuB,WAC3BC,GAAS9C,GACT+C,GAAejC,GACfgC,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE/C,SAAU,MAAI,GAC/C,EAEAiD,IAAkCd,EAAAA,EAAAA,UAAS,IAAGe,IAAAb,EAAAA,EAAAA,GAAAY,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAkClB,EAAAA,EAAAA,UAAS,IAAGmB,IAAAjB,EAAAA,EAAAA,GAAAgB,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAoCtB,EAAAA,EAAAA,UAAS,IAAGuB,IAAArB,EAAAA,EAAAA,GAAAoB,GAAA,GAAzCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAgC1B,EAAAA,EAAAA,UAAS,IAAG2B,IAAAzB,EAAAA,EAAAA,GAAAwB,GAAA,GAArCxD,GAAQyD,GAAA,GAAEC,GAAWD,GAAA,GAC5BE,IAA4B7B,EAAAA,EAAAA,UAAS,IAAG8B,IAAA5B,EAAAA,EAAAA,GAAA2B,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAA0BjC,EAAAA,EAAAA,UAASpC,GAAiBsE,IAAAhC,EAAAA,EAAAA,GAAA+B,GAAA,GAA7CE,GAAKD,GAAA,GAAExB,GAAQwB,GAAA,GAEtBE,IAAsCpC,EAAAA,EAAAA,UAAStB,GAAmB2D,IAAAnC,EAAAA,EAAAA,GAAAkC,GAAA,GAA3DE,GAAWD,GAAA,GAAE1B,GAAc0B,GAAA,GAClCE,IAA4CvC,EAAAA,EAAAA,WAAS,GAAMwC,IAAAtC,EAAAA,EAAAA,GAAAqC,GAAA,GAApDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAAkC3C,EAAAA,EAAAA,UAAS,IAAG4C,IAAA1C,EAAAA,EAAAA,GAAAyC,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAG9BG,IAAgC/C,EAAAA,EAAAA,UAAS,MAAKgD,IAAA9C,EAAAA,EAAAA,GAAA6C,GAAA,GAAvCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GACtBG,GAAWC,QAAQH,IAEzBI,IAAgCrD,EAAAA,EAAAA,UAAS,CAAC,GAAEsD,IAAApD,EAAAA,EAAAA,GAAAmD,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAK5BG,IAAoDzD,EAAAA,EAAAA,WAAS,GAAM0D,IAAAxD,EAAAA,EAAAA,GAAAuD,GAAA,GAA5DE,GAAkBD,GAAA,GAAEE,GAAqBF,GAAA,GAChDG,IAA0C7D,EAAAA,EAAAA,UAASf,GAA0B6E,IAAA5D,EAAAA,EAAAA,GAAA2D,GAAA,GAAtEE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GA6ChCG,GAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAA/D,KAAA+D,EAAAC,MAAA,OAI6B,OAJ7BD,EAAA/D,KAAA,EAGb2D,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GAAeI,EAAAC,KAAA,EACzBK,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,SAAAA,KAAyB,CAAC,EAAG,CAC7DC,QAAS,CACPC,cAAc,UAADC,OAAYb,MAE1B,KAAD,GAJIC,EAAQE,EAAAW,OAMZrE,GAAawD,EAASc,KAAKA,MAC5BZ,EAAAC,KAAA,gBAAAD,EAAA/D,KAAA,EAAA+D,EAAAa,GAAAb,EAAA,SAED9E,EAAgB,6BAA8B,CAAE4F,QAAS,UAAW,yBAAAd,EAAAe,OAAA,GAAApB,EAAA,kBAEvE,kBAhBmB,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KAmBdC,GAAkB,eAAAC,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0B,IAAA,IAAAxB,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAsB,GAAA,cAAAA,EAAApF,KAAAoF,EAAApB,MAAA,OAGyB,OAHzBoB,EAAApF,KAAA,EAEjB2D,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GAAeyB,EAAApB,KAAA,EACzBK,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,SAAAA,KAAyB,CAAC,EAAG,CAC7DC,QAAS,CACPC,cAAc,UAADC,OAAYb,MAE1B,KAAD,GAJIC,EAAQuB,EAAAV,OAMZjE,GAAaoD,EAASc,KAAKA,MAC5BS,EAAApB,KAAA,gBAAAoB,EAAApF,KAAA,EAAAoF,EAAAR,GAAAQ,EAAA,SAEDnG,EAAgB,6BAA8B,CAAE4F,QAAS,UAAW,yBAAAO,EAAAN,OAAA,GAAAK,EAAA,kBAEvE,kBAfuB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAiBlBK,GAAa,eAAAC,GAAA/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8B,IAAA,IAAA5B,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAA0B,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAxB,MAAA,OAI8B,OAJ9BwB,EAAAxF,KAAA,EAGZ2D,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GAAe6B,EAAAxB,KAAA,EACzBK,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,QAAAA,KAAwB,CAAC,EAAG,CAC5DC,QAAS,CACPC,cAAc,UAADC,OAAYb,MAE1B,KAAD,GAJIC,EAAQ2B,EAAAd,OAMZ1D,GAAY6C,EAASc,KAAKA,MAC3Ba,EAAAxB,KAAA,gBAAAwB,EAAAxF,KAAA,EAAAwF,EAAAZ,GAAAY,EAAA,SAEDvG,EAAgB,4BAA6B,CAAE4F,QAAS,UAAW,yBAAAW,EAAAV,OAAA,GAAAS,EAAA,kBAEtE,kBAhBkB,OAAAD,EAAAP,MAAA,KAAAC,UAAA,KAmBbS,GAAqB,eAAAC,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkC,IAAA,IAAAhC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAA8B,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA5B,MAAA,OAIsB,OAJtB4B,EAAA5F,KAAA,EAGpB2D,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GAAeiC,EAAA5B,KAAA,EACzBK,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,QAAAA,SAAAA,KAAiC,CAAC,EAAG,CACrEC,QAAS,CACPC,cAAc,UAADC,OAAYb,MAE1B,KAAD,GAJIC,EAAQ+B,EAAAlB,OAMZ7D,GAAcgD,EAASc,KAAKA,MAC7BiB,EAAA5B,KAAA,gBAAA4B,EAAA5F,KAAA,EAAA4F,EAAAhB,GAAAgB,EAAA,SAED3G,EAAgB,8BAA+B,CAAE4F,QAAS,UAAW,yBAAAe,EAAAd,OAAA,GAAAa,EAAA,kBAExE,kBAhB0B,OAAAD,EAAAX,MAAA,KAAAC,UAAA,KAmBrBa,GAAW,eAAAC,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsC,IAAA,IAAApC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAkC,GAAA,cAAAA,EAAAhG,KAAAgG,EAAAhC,MAAA,OAIgC,OAJhCgC,EAAAhG,KAAA,EAGV2D,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GAAeqC,EAAAhC,KAAA,EACzBK,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,MAAAA,KAAsB,CAAE2B,OAAQ,CAAC,SAAW,CAC5E1B,QAAS,CACPC,cAAc,UAADC,OAAYb,MAE1B,KAAD,GAJIC,EAAQmC,EAAAtB,OAMZtD,GAAUyC,EAASc,KAAKA,MACzBqB,EAAAhC,KAAA,gBAAAgC,EAAAhG,KAAA,EAAAgG,EAAApB,GAAAoB,EAAA,SAED/G,EAAgB,0BAA2B,CAAE4F,QAAS,UAAW,yBAAAmB,EAAAlB,OAAA,GAAAiB,EAAA,kBAEpE,kBAhBgB,OAAAD,EAAAf,MAAA,KAAAC,UAAA,KAmBXkB,GAAU,eAAAC,GAAA5C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2C,IAAA,IAAAzC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAuC,GAAA,cAAAA,EAAArG,KAAAqG,EAAArC,MAAA,OAIiC,OAJjCqC,EAAArG,KAAA,EAGT2D,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GAAe0C,EAAArC,KAAA,EACzBK,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,MAAAA,KAAsB,CAAC,EAAG,CAC1DC,QAAS,CACPC,cAAc,UAADC,OAAYb,MAE1B,KAAD,GAJIC,EAAQwC,EAAA3B,QAMZ4B,QAAQC,IAAI,WACZzE,IAAkB,GAClBI,GAAa2B,EAASc,KAAKA,OAC5B0B,EAAArC,KAAA,gBAAAqC,EAAArG,KAAA,EAAAqG,EAAAzB,GAAAyB,EAAA,SAEDpH,EAAgB,gCAAiC,CAAE4F,QAAS,UAC5D/C,IAAkB,GAAO,yBAAAuE,EAAAvB,OAAA,GAAAsB,EAAA,kBAE5B,kBAnBe,OAAAD,EAAApB,MAAA,KAAAC,UAAA,MAsBhBwB,EAAAA,EAAAA,YAAU,WACR1E,IAAkB,GAClBoE,KACA7C,KACA4B,KACAI,KACAI,KACAI,IAGF,GAAG,IAGH,IAAMY,GAAU,CACd,CACElI,KAAM,gBACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIC,WAAWrI,IAAI,GAEtC,CACEA,KAAM,eACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIrJ,SAASuJ,OAAS,EAAC,GAAApC,OAAMkC,EAAIrJ,SAAS,GAAGiB,KAAI,QAAAkG,OAAOkC,EAAIrJ,SAASuJ,OAAS,EAAC,SAAUF,EAAIrJ,SAAS,GAAGiB,IAAI,EAC9HpC,MAAO,SAET,CACEoC,KAAM,SACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIlJ,YAAYqJ,QAAQ,EAAE,EAC3CC,OAAQ,QAEV,CACExI,KAAM,eACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIK,SAAS,GAAGC,UAAUtJ,WAAW,EACtDoJ,OAAQ,QAEV,CACExI,KAAM,iBACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIK,SAAS,GAAGC,UAAUrJ,aAAa,EACxDmJ,OAAQ,QAEV,CACExI,KAAM,iBACNpC,MAAO,QACP4K,OAAQ,OACRL,SAAU,SAAAC,GAAG,OAAIA,EAAIO,aAAa,GAEpC,CACE3I,KAAM,eACNpC,MAAO,QACPuK,SAAU,SAAAC,GAAG,OAAIQ,EAAAA,EAAAA,IAAWR,EAAIS,UAAU,EAC1CL,OAAQ,QAEV,CACExI,KAAM,UACNpC,MAAO,QACPkL,KAAM,SAACV,GAAG,OACRW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAS,SAACC,GAChBtF,GAAYsF,EAAMC,eAClBjF,GAAY+D,EACd,EAAG7K,MAAO,CAAEO,MAAOA,EAAAA,GAAAA,cAAsBwI,QAAQ,WAAWiD,SAASL,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,IAAIP,SAAC,YAC5FF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CACHC,GAAG,aACH5F,SAAUA,GACV1C,KAAM4C,GACN2F,QAAS,WACP5F,GAAY,MACZM,GAAY,CAAC,EACf,EACAuF,cAAe,CACb,kBAAmB,gBACnBX,SAAA,EAEFC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACT,QAAS,WAAQ,EAAEH,SAAC,UAC9BC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACT,QAAS,WAAQ,EAAEH,SAAC,UAC9BC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACT,QAAS,WAAQ,EAAEH,SAAC,oBAC9BC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACT,QAAS,WAAQ,EAAEH,SAAC,sBAE5B7E,GAAS0F,gBAAkB,IAC3BZ,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACT,QAAS,kBAzO7BrF,GAAY,MACZU,IAAsB,GACtBI,IAAiB,SAACpD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBD,GAAI,IAAEzB,KAAMoE,GAASiE,WAAWrI,KACnCC,QAASmE,GAAS0F,gBAClB/J,aAAcqE,GAAS2F,KAAG,SAE5B1F,GAAY,CAAC,EAkOoD,EAAC4E,SAAC,wBAG5D,IAYHe,GAAsB,SAACC,EAAOC,EAAOC,GAE3B,aAAVD,IACEC,EAAa,GACfA,EAAa,EACbzJ,EAAgB,gDAAiD,CAAE4F,QAAS,WACnE6D,EAAa,MACtBA,EAAa,IACbzJ,EAAgB,gDAAiD,CAAE4F,QAAS,YAalE,aAAV4D,GAEEC,EAAanH,GAAMjE,SAASkL,GAAOxK,QAAQC,WAC7CyK,EAAanH,GAAMjE,SAASkL,GAAOxK,QAAQC,SAC3CgB,EAAgB,kBAADwF,OAAmBlD,GAAMjE,SAASkL,GAAOxK,QAAQC,SAAQ,qBAAqB,CAAE4G,QAAS,WAM5G,IAAM8D,GAAeC,EAAAA,EAAAA,GAAOrH,GAAMjE,UAG5BU,GAAOiC,EAAAA,EAAAA,GAAA,GAAQ0I,EAAgBH,IAGrCxK,EAAQyK,GAASC,EAGjBC,EAAgBH,GAASxK,EAEzBsI,QAAQC,IAAI,cAAeoC,EAAgBH,IAI3C1I,IAAS,SAAA+I,GAAS,OAAA5I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb4I,GAAS,IACZvL,SAAUqL,GAAe,GAE7B,EAEMG,GAAiB,CACrB,CACEvK,KAAM,eACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAI3I,QAAQO,IAAI,GAGnC,CACEA,KAAM,WACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAI1I,QAAQ,EAE7BoJ,KAAM,SAACV,EAAK6B,GAAK,OACff,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRC,KAAK,SACLC,OAAQ,SAACC,GAEP,IAAMP,GAAeC,EAAAA,EAAAA,GAAOrH,GAAMjE,UAG5BU,GAAOiC,EAAAA,EAAAA,GAAA,GAAQ0I,EAAgBH,IAET,IAAxB7B,EAAI1I,SAAS4I,SACf5H,EAAgB,2BAA4B,CAAE4F,QAAS,UACvD7G,EAAQC,SAAW,IAEnB0K,EAAgBH,GAASxK,EAGzB8B,IAAS,SAAA+I,GAAS,OAAA5I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb4I,GAAS,IACZvL,SAAUqL,GAAe,IAG/B,EACAQ,SAAU,SAACD,GAAC,OAAKX,GAAoBC,EAAO,WAAYU,EAAEE,OAAO7J,MAAM,EACvEA,MAAOoH,EAAI1I,SAAUoL,KAAK,SAAU,EAExCtC,OAAQ,QAEV,CACExI,KAAM,aACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIvI,YAAY,EACjCiJ,KAAM,SAACV,EAAK6B,GAAK,OACff,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRC,KAAK,SACLC,OAAQ,WAEN,IAAMN,GAAeC,EAAAA,EAAAA,GAAOrH,GAAMjE,UAG5BU,GAAOiC,EAAAA,EAAAA,GAAA,GAAQ0I,EAAgBH,KAGL,IAA5B7B,EAAIvI,aAAayI,QAAgB7I,EAAQA,QAAQsL,cAAgBC,SAAS5C,EAAIvI,aAAc,OAC9Fa,EAAgB,gEAADwF,OAAiE+E,GAAOjI,GAAMjE,SAASkL,GAAOxK,QAAQsL,gBAAkB,CAAEzE,QAAS,UAElJ7G,EAAQI,aAAeqL,OAAOzL,EAAQA,QAAQsL,eAG9CX,EAAgBH,GAASxK,EAGzB8B,IAAS,SAAA+I,GAAS,OAAA5I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb4I,GAAS,IACZvL,SAAUqL,GAAe,IAG/B,EACAQ,SAAU,SAACD,GAAC,OAAKX,GAAoBC,EAAO,eAAgBU,EAAEE,OAAO7J,MAAM,EAC3EA,MAAOoH,EAAIvI,aACXiL,KAAK,SAAU,EAEnBtC,OAAQ,QAEV,CACExI,KAAM,YACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAI3I,QAAQ0L,QAAQ,EACrC3C,OAAQ,QAEV,CACExI,KAAM,WACNmI,SAAU,SAAAC,GAAG,OAAIA,EAAIxI,QAAQ,EAC7BkJ,KAAM,SAACV,EAAK6B,GAAK,OACff,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACxJ,MAAOoH,EAAIxI,SACpBkL,KAAK,QACLL,KAAK,SACLC,OAAQ,WACN,GAA4B,IAAxBtC,EAAIxI,SAAS0I,OAAc,CAE7B,IAAM8B,GAAeC,EAAAA,EAAAA,GAAOrH,GAAMjE,UAG5BU,GAAOiC,EAAAA,EAAAA,GAAA,GAAQ0I,EAAgBH,IAGrCxK,EAAQG,SAAW,IAGnBwK,EAAgBH,GAASxK,EAGzB8B,IAAS,SAAA+I,GAAS,OAAA5I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACb4I,GAAS,IACZvL,SAAUqL,GAAe,GAE7B,CACF,EACAQ,SAAU,SAAAD,GAAC,OAAIX,GAAoBC,EAAO,WAAYU,EAAEE,OAAO7J,MAAM,EACrEoK,WAAY,CACVC,cACEnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAc,CAAC9N,SAAS,MAAKyL,UAC5BC,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,CAACC,SAAS,cAGvB,EAEThD,OAAQ,QAEV,CACExI,KAAM,aACNmI,SAAU,SAAAC,GAQR,OAPiB4C,SAAS5C,EAAI1I,SAAW0I,EAAI1I,SAAW,EAAG,IACtCsL,SAAS5C,EAAIvI,aAAeuI,EAAIvI,aAAe,EAAG,GAOzE,EACA2I,OAAQ,QAEV,CACExI,KAAM,UACN8I,KAAM,SAACV,EAAK6B,GAAK,OACff,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAACrC,QAAS,kBAjMC,SAAChB,EAAK6B,GAChClC,QAAQC,IAAI,uBACZ,IAAM0D,GAAWrB,EAAAA,EAAAA,GAAOrH,GAAMjE,UAC9B2M,EAAYC,OAAO1B,EAAO,GAC1B1I,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE1C,SAAU2M,GAAW,GACtD,CA4LiCE,CAAoBxD,EAAK6B,EAAM,EAAEnM,MAAM,QAAQwI,QAAQ,WAAU2C,UAC1FC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,KACA,EAEfrD,OAAQ,SA+CJyC,GAAW,IAAIa,KAAKC,aAAa,QAAS,CAChDxO,MAAO,WACPyO,SAAU,QAFJf,OA8CR,IAoCM9L,GAAkB6D,GAAMjE,SAASkN,QAAO,SAACC,EAAOzM,GACpD,IAAMG,EA5CR,SAA2BH,GAGzB,OAFoBuL,SAAyC,IAAhCvL,EAAQI,aAAayI,OAAe,EAAI7I,EAAQI,aAAc,IAAMmL,SAAqC,IAA5BvL,EAAQC,SAAS4I,OAAe,EAAI7I,EAAQC,SAAU,KAC1HsL,SAAqC,IAA5BvL,EAAQG,SAAS0I,OAAe,EAAI7I,EAAQG,SAAU,IAAM,IAE7G,CAwCmBuM,CAAkB1M,GACnC,OAAOyM,EAAQtM,CACjB,GAAG,GAEGwM,GAAwBpJ,GAAMjE,SAASkN,QAAO,SAACC,EAAOzM,GAQ1D,OAAOyM,EAPclB,SAAyC,IAAhCvL,EAAQI,aAAayI,OAAe,EAAI7I,EAAQI,aAAc,IAC3EmL,SAAqC,IAA5BvL,EAAQC,SAAS4I,OAAe,EAAI7I,EAAQC,SAAU,GAOlF,GAAG,GAGC2M,GAAgB,EAChBC,OAAOC,KAAKvJ,GAAMhE,OAAOsJ,OAAS,IAElC+D,GADuB,eAArBrJ,GAAMhE,MAAMyL,KACG2B,GAAwBpJ,GAAMhE,MAAMwN,UAAa,IAElDxJ,GAAMhE,MAAMwN,WAIhC,IAAMtN,GAAckN,IAAyBjN,GAAkBkN,IAE/D,OACEtD,EAAAA,EAAAA,MAAC0D,EAAAA,EAAS,CAACC,UAAUlM,EAASmM,cAAuB,KAAK1D,SAAA,EACxDC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACtG,QAAQ,KAAI2C,SAAC,aACzBF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBwO,UAAW,QAAS5D,SAAA,EACxGF,EAAAA,EAAAA,MAAC+D,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAE/D,SAAA,EAChCC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAI,CAACC,MAAM,yBAAoB5G,QAAQ,YAAY6G,GAAI,CAAEC,gBAAiB,cAC3ElE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAI,CAACC,MAAM,uBAAkB5G,QAAQ,YAAY6G,GAAI,CAAEC,gBAAiB,cACzElE,EAAAA,EAAAA,KAAC+D,EAAAA,EAAI,CAACC,MAAM,2BAAsB5G,QAAQ,YAAY6G,GAAI,CAAEC,gBAAiB,iBAG/ElE,EAAAA,EAAAA,KAAC4D,EAAAA,EAAK,CAAA7D,UACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC7C,QAAQ,YAAYxI,MAAM,UAAUuP,WAAWnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,IAAKlE,QAtoBzD,WACjB7H,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE5C,YAAasB,IAAM,IAAIC,OAAO,IAC7DiB,IAAQ,EACV,EAmoBgG4H,SAAC,6BAQ7FF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEsP,UAAW,QAAS5D,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,MAAOmP,WAAY,SAAUjP,IAAK,QAAS2K,SAAA,EACvFC,EAAAA,EAAAA,KAAA,OAAK3L,MAAO,CAAEY,QAAS,OAAQ0O,UAAW,OAAQ5D,UAChDC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRgD,YAAY,SACZ1C,KAAK,QACLM,WAAY,CACVqC,gBACEvE,EAAAA,EAAAA,KAACoC,EAAAA,EAAc,CAAC9N,SAAS,QAAOyL,UAC9BC,EAAAA,EAAAA,KAACwE,EAAAA,EAAU,YAMrBxE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACyE,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAa5E,UAC9CC,EAAAA,EAAAA,KAAC4E,EAAAA,EAAa,CACZC,WAAY,CAAC,6BAA6B9E,UAE1CC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAyB,CACxBlD,KAAK,QACLoC,MAAM,aACNlM,MAAOA,EACP4J,SAAU,SAACqD,GAAQ,OAAKhN,GAASgN,EAAS,cAQpD/E,EAAAA,EAAAA,KAAA,OAAK3L,MAAO,CAAEsP,UAAW,QAAS5D,UAChCC,EAAAA,EAAAA,KAACgF,EAAAA,GAAS,CACRhG,QAASA,GACT9B,KAAM1C,GACNyK,YAAU,EACVC,gBAAiB9K,WAcvB4F,EAAAA,EAAAA,KAACmF,EAAAA,EAAK,CACJjN,KAAMA,GACN,kBAAgB,oBAChB,mBAAiB,0BAAyB6H,UAE1CF,EAAAA,EAAAA,MAACuF,EAAAA,EAAG,CAACnB,GAAI5P,EAAM0L,SAAA,EAGbF,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAW,EAAGtB,GAAI,CAAEC,gBAAiB,QAASsB,QAAS,OAAQ3Q,aAAc,OAAQI,QAAS,OAAQE,eAAgB,gBAAiBC,IAAK,QAAS2K,SAAA,EAEnKC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAE3F,UACfC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAY,CACX7N,MAAOgC,GAAMtE,SACboQ,QAASjN,GACTkN,eAAgB,SAACC,GAAI,OAAKA,EAAKhP,KAAOgP,EAAKhP,KAAOgP,CAAI,EACtDC,WAAS,EACTrE,SAAU,SAACvB,EAAO4E,GAChB1M,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE/C,SAAUuP,GAAY,KAAMtP,aAAcsP,EAAWA,EAAStP,aAAauQ,MAAM,GAAK,IAAE,GAEzH,EACAC,cAAe,SAAC9F,EAAO+F,GACrB7N,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE/C,SAAU0Q,GAAa,GACxD,EACAC,YAAa,SAACC,GAAM,OAClBpG,EAAAA,EAAAA,KAACsB,EAAAA,GAAS9I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK4N,GAAM,IAAEpC,MAAM,mBAAmB+B,WAAS,IAAG,EAE9DM,UAAQ,OAGZrG,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAE3F,UACfC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRC,KAAK,SACLyC,MAAM,gBACN9B,WAAY,CACVqC,gBACE1E,EAAAA,EAAAA,MAACuC,EAAAA,EAAc,CAAC9N,SAAS,QAAOyL,SAAA,EAC9BC,EAAAA,EAAAA,KAACsG,EAAAA,EAAS,IAAG,WAInBxO,MAAOgC,GAAMrE,aACbsQ,WAAS,EACTrE,SAAU,SAACvB,GAELA,EAAMwB,OAAO7J,MAAMsH,OAAS,IAGhC/G,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE9C,aAAc0K,EAAMwB,OAAO7J,OAAK,GACjE,OAIJkI,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAE3F,UACfC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAY,CACX7N,MAAOgC,GAAMpE,SACbkQ,QAAS7M,GACT8M,eAAgB,SAACC,GAAI,OAAKA,EAAKhP,IAAI,EACnCiP,WAAS,EACTrE,SAAU,SAACvB,EAAO4E,GAChB1M,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE7C,SAAUqP,GAAQ,GACnD,EACAoB,YAAa,SAACC,GAAM,OAClBpG,EAAAA,EAAAA,KAACsB,EAAAA,GAAS9I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK4N,GAAM,IAAEpC,MAAM,YAAY+B,WAAS,IAAG,OAK3DlG,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACC,WAAS,EAACrB,GAAI,CAAEhP,QAAS,OAAQG,IAAK,SAAU2K,SAAA,EACpDC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAE3F,UACfC,EAAAA,EAAAA,KAACyE,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAa5E,UAC9CC,EAAAA,EAAAA,KAACuG,EAAAA,EAAU,CAETvC,MAAM,eACNlM,MAAOgC,GAAMnE,YACb+L,SAAU,SAACqD,GACT1M,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE5C,YAAaoP,GAAQ,GACtD,EACAhD,OAAO,aACPyE,UAAW,CAAEC,UAAW,CAAEV,WAAW,WAK3C/F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAE3F,UACfC,EAAAA,EAAAA,KAACyE,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAa5E,UAC9CC,EAAAA,EAAAA,KAACuG,EAAAA,EAAU,CACTvC,MAAM,mBACNjC,OAAO,aACPjK,MAAOgC,GAAMlE,eACb8Q,QAAS5M,GAAMnE,YACf+L,SAAU,SAACqD,GACT1M,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE3C,eAAgBmP,GAAQ,GACzD,EACAyB,UAAW,CAAEC,UAAW,CAAEV,WAAW,iBAS/ClG,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACC,WAAS,EAACrB,GAAI,CAAEC,gBAAiB,QAASsB,QAAS,OAAQ3Q,aAAc,OAAQI,QAAS,OAAQE,eAAgB,iBAAmBkP,WAAW,SAAQtE,SAAA,EAC5JF,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIiB,GAAI,EAAG1R,QAAQ,OAAM8K,SAAA,EACtCF,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAAC3C,GAAI,CAAEvP,MAAO,OAAQqL,SAAA,EAChCC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,2BAA0BT,SAAC,oBAC1CF,EAAAA,EAAAA,MAACiH,EAAAA,EAAM,CACLC,QAAQ,2BACRvG,GAAG,qBACHwD,MAAM,iBACNlM,MAAOmC,GAAY3D,SACnBoL,SAAU,SAACD,GACTnJ,IAAe,SAACC,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEjC,SAAUmL,EAAEE,OAAO7J,MAAOvB,QAAS,KAAMC,SAAU,MAAI,GAC9F,EAAEuJ,SAAA,EAEFC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAC7I,MAAM,iBAAgBiI,SAAC,mBAE/B5G,GAAW6N,KAAI,SAACC,EAAOlG,GAAK,OAC1Bf,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAa7I,MAAOmP,EAAMnQ,KAAKiJ,SAAEkH,EAAMnQ,MAAjCiK,EAAiD,WAOxEf,EAAAA,EAAAA,KAAC2F,EAAAA,EAAY,CACXC,QAAS/P,GAASqR,QAAO,SAAC3Q,GACxB,OAAI0D,GAAY3D,UAAqC,mBAAzB2D,GAAY3D,UAC/BC,EAAQD,SAASQ,OAASmD,GAAY3D,QAGjD,IACAwB,MAA2B,QAAtBV,EAAa,OAAX6C,SAAW,IAAXA,QAAW,EAAXA,GAAa1D,eAAO,IAAAa,EAAAA,EAAI,KAC/BsK,SAAU,SAACvB,EAAO4E,GAEdzM,GADEyM,EACa,SAACxM,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEhC,QAASwO,GAAQ,EAEvC,SAACxM,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEhC,QAAS,MAAI,EAEtD,EACAsP,eAAgB,SAACsB,GAAM,OAAW,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQrQ,IAAI,EACxCiP,WAAS,EACTI,YAAa,SAACC,GAAM,OAClBpG,EAAAA,EAAAA,KAACsB,EAAAA,GAAS9I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK4N,GAAM,IAAEpC,MAAM,kBAAkB+B,WAAS,IAAG,QAKjE/F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIiB,GAAI,EAAE5G,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACR0C,MAAM,WACNzC,KAAK,SACLG,SAAU,SAACD,GAAC,OAAKnJ,IAAe,SAACC,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAE/B,SAAUiL,EAAEE,OAAO7J,OAAK,GAAI,EAClFA,MAAOmC,GAAYzD,cAGvBwJ,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIiB,GAAI,EAAE5G,UACvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLkE,WAAWnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAO,IACnBgD,SAC0B,OAAxBnN,GAAY1D,SACgB,OAAzB0D,GAAYzD,UACfyD,GAAYzD,UAAY,EAE1B4G,QAAQ,YACRxI,MAAM,UACNsL,QArVY,WAExB,GAAIpG,GAAMjE,SAASwR,MAAK,SAAC9Q,GAAO,OAAKA,EAAQA,QAAQO,OAASmD,GAAY1D,QAAQO,IAAI,IACpFU,EAAgB,yBAA0B,CAAE4F,QAAS,cADvD,CAMA,IAAMkK,EAAkBzR,GAASwR,MAAK,SAAC9Q,GAAO,OAAKA,EAAQO,OAASmD,GAAY1D,QAAQO,IAAI,IAC5F,GAAIwQ,GAAmBA,EAAgB9Q,SAAWyD,GAAYzD,SAC5DgB,EAAgB,kCAAmC,CAAE4F,QAAS,cADhE,CAMA,IAAMmK,EAAe,CACnBhR,QAAS0D,GAAY1D,QACrBI,aAAcsD,GAAY1D,QAAQI,aAClCH,SAAUyD,GAAYzD,SACtBF,SAAU2D,GAAY3D,SACtBI,SAAU,GAIZ2B,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IACP1C,SAAS,GAADmH,QAAAmE,EAAAA,EAAAA,GAAM5I,EAAK1C,UAAQ,CAAE0R,KAAa,IAG5C1I,QAAQC,IAAI7E,IACZ3B,GAAejC,EAlBf,CAPA,CA0BF,EAuTc0P,WAAS,EAAAhG,SACV,sBAQHjG,GAAMjE,SAASuJ,OAAS,IAExBS,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACC,WAAS,EAACrB,GAAI,CAAEC,gBAAiB,QAASsB,QAAS,OAAQ3Q,aAAc,QAAWwP,WAAW,SAAQtE,SAAA,EAC3GC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAACgF,EAAAA,GAAS,CACRhG,QAASqC,GACTnE,KAAMpD,GAAMjE,cAGhBmK,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIzQ,QAAQ,OAAOE,eAAe,WAAW8O,GAAI,CAAEuD,GAAI,GAAIzH,UACxEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,iCAILC,EAAAA,EAAAA,KAAA,OAAK3L,MAAO,CAAEoT,WAAY,OAAQ1H,SAEM,IAApCqD,OAAOC,KAAKvJ,GAAMhE,OAAOsJ,QAEvBS,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAACb,WAAS,EAACnE,KAAK,QAAO7B,SAAA,EACjCC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,2BAA0BT,SAAC,kBAC1CC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CACLC,QAAQ,2BACRvG,GAAG,qBACHwD,MAAM,eACNlM,MAAkB,QAAbT,EAAEyC,GAAMhE,aAAK,IAAAuB,EAAAA,EAAI,GACtBqK,SAAU,SAACD,GAAC,OAAKpJ,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEzC,MAAO2L,EAAEE,OAAO7J,OAAK,GAAI,EAACiI,SAEzErG,GAAOsN,KAAI,SAAClR,EAAO4R,GAAC,OACnB1H,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAS7I,MAAOhC,EAAMiK,SAAEjK,EAAM6R,MAAxBD,EAAwC,UAM7D7H,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,UAAW6K,SAAA,EACvDC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAI,CAAC3G,QAAQ,YAAYxI,MAAM,UAAUoP,MAAK,mBAAAhH,OAAqBlD,GAAMhE,MAAM6R,MAAQC,SAAU,WAAQvP,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEzC,MAAO,CAAC,GAAC,GAAK,KACvJkK,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACtG,QAAQ,UAAUyK,cAAY,EAAA9H,SAEjB,eAArBjG,GAAMhE,MAAMyL,KAAqB,GAAAvE,OAC5BlD,GAAMhE,MAAMwN,UAAS,YAAAtG,OACrB+E,GAAOjI,GAAMhE,MAAMwN,WAAU,wBAYtDtD,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACC,WAAS,EAACrQ,QAAQ,OAAOE,eAAe,WAAU4K,UACtDC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIiB,GAAI,EAAGmB,GAAI,EAAG7D,GAAI,CAAEC,gBAAiB,QAASsB,QAAS,OAAQ3Q,aAAc,QAAUkL,UACxGF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,UAAW6K,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQE,eAAgB,iBAAkB4K,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,sBACLC,EAAAA,EAAAA,KAAA,OAAAD,SAC4B,IAA1BjG,GAAMjE,SAASuJ,OACb2C,GAAO,GACPA,GAAO9L,SAKyB,IAApCmN,OAAOC,KAAKvJ,GAAMhE,OAAOsJ,QACvBS,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQE,eAAgB,iBAAkB4K,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oBACLC,EAAAA,EAAAA,KAAA,OAAAD,SACEgC,GAAOoB,SAGT,MAGNtD,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQE,eAAgB,iBAAkB4K,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,kBACLC,EAAAA,EAAAA,KAAA,OAAAD,SAC4B,IAA1BjG,GAAMjE,SAASuJ,OACb2C,GAAO,GACPA,GAAOmB,iBAMnBlD,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACC,WAAS,EAACrQ,QAAQ,OAAOE,eAAe,WAAU4K,UACtDF,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIiB,GAAI,EAAGmB,GAAI,EAAG7D,GAAI,CAAEC,gBAAiB,QAASsB,QAAS,OAAQ3Q,aAAc,OAAQI,QAAS,OAAQC,cAAe,SAAUE,IAAK,QAAS2K,SAAA,EAC9JF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,MAAOE,IAAK,QAAS2K,SAAA,EAiBjEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRyE,WAAS,EACTnE,KAAK,QACLoC,MAAM,eACNxC,OAAQ,SAACC,GACHA,EAAEE,OAAO7J,MAAQoL,KACnB1L,EAAgB,qDAAsD,CAAE4F,QAAS,UACjF/E,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAExC,YAAamN,IAAqB,IAErE,EACApL,MAAOgC,GAAM/D,YACb2L,SAAU,SAACD,GAAC,OAAKpJ,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAExC,YAAa0L,EAAEE,OAAO7J,OAAK,GAAI,KAGjF+H,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAACb,WAAS,EAACnE,KAAK,QAAO7B,SAAA,EACjCC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,2BAA0BT,SAAC,2BAC1CC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CACLC,QAAQ,2BACRvG,GAAG,qBACHwD,MAAM,wBACNlM,MAAOgC,GAAM3D,cACbuL,SAAU,SAACD,GAAC,OAAKpJ,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEpC,cAAesL,EAAEE,OAAO7J,OAAK,GAAI,EAACiI,SAGhFgI,EAAAA,GAAAA,cAAAA,KAAyB,SAAC5R,EAAe4K,GAAK,OAC5Cf,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAa7I,MAAO3B,EAAc4J,SAAE5J,GAA9B4K,EAAuD,aAMhFlB,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,MAAOE,IAAK,QAAS2K,SAAA,EACjEF,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAACb,WAAS,EAACnE,KAAK,QAAO7B,SAAA,EACjCC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,2BAA0BT,SAAC,yBAC1CC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CACLC,QAAQ,2BACRvG,GAAG,qBACHwD,MAAM,sBACNlM,MAAOgC,GAAM5D,YACbwL,SAAU,SAACD,GAAC,OAAKpJ,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAErC,YAAauL,EAAEE,OAAO7J,OAAK,GAAI,EAACiI,SAG9EgI,EAAAA,GAAAA,YAAAA,KAAuB,SAAC7R,EAAa6K,GAAK,OACxCf,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAa7I,MAAO5B,EAAY6J,SAAE7J,GAA5B6K,EAAmD,UAO1ElB,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAACb,WAAS,EAACnE,KAAK,QAAO7B,SAAA,EACjCC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,2BAA0BT,SAAC,iBAC1CC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CACLC,QAAQ,2BACRvG,GAAG,qBACHwD,MAAM,cACNlM,MAAOgC,GAAM1D,KACbsL,SAAU,SAACD,GAAC,OAAKpJ,IAAS,SAACE,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEnC,KAAMqL,EAAEE,OAAO7J,OAAK,GAAI,EACxEsP,SAAgC,SAAtBtN,GAAM5D,YAAuB6J,UAIvCC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAC7I,MAAOgC,GAAM1D,KAAK2J,SAAC,sBAUvCC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACC,WAAS,EAAAvF,UACbF,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIiB,GAAI,GAAImB,GAAI,GAAI7D,GAAI,CAAEC,gBAAiB,QAAS7O,EAAG,OAAQR,aAAc,QAAUI,QAAQ,OAAOE,eAAe,gBAAgBkP,WAAW,SAAQtE,SAAA,EACrKF,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQC,cAAe,MAAOC,eAAgB,eAAgBC,IAAK,QAAS2K,SAAA,EACjGC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,cACLC,EAAAA,EAAAA,KAAA,OAAAD,SAC4B,IAA1BjG,GAAMjE,SAASuJ,OACb2C,GAAO,GACPA,GAAO/L,UAGb6J,EAAAA,EAAAA,MAAA,OAAKxL,MAAO,CAAEY,QAAS,OAAQG,IAAK,QAAS2K,SAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC7C,QAAQ,YACd8C,QApfa,WAE3B,IAAM8H,GAAYxP,EAAAA,EAAAA,GAAA,GAAQsB,IAE1BkO,EAAatR,SAAW,CAAC,EACzBsR,EAAatR,SAAST,gBAAkBA,GACpCmN,OAAOC,KAAKvJ,GAAMhE,OAAOsJ,OAAS,IACpC4I,EAAatR,SAASZ,MAAQ,CAAC,EAC/BkS,EAAatR,SAASZ,MAAMY,SAAWyM,GACvC6E,EAAatR,SAASZ,MAAM0K,GAAK1G,GAAMhE,MAAM+K,KAG/CmH,EAAaC,cAAgBhS,GAAkBkN,GAC/C6E,EAAahS,YAAcA,GAC3BgS,EAAapS,eAAiBqB,IAAM+Q,EAAapS,gBAAgBmM,OAAO,cAGxE,IAAM7F,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GACjCU,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,MAAAA,IAAqBmL,EAC9B,CACElL,QAAS,CACPC,cAAc,UAADC,OAAYb,MAG5B+L,MAAK,SAACC,GACL3Q,EAAgB,oCAAqC,CAAE4F,QAAS,YAChEjF,IAAQ,GACRC,KACAqG,IACF,IAAG2J,OAAM,SAACC,GACR7Q,EAAgB6Q,EAAIC,OAASD,EAAIA,IAAK,CAAEjL,QAAS,SACnD,GAEJ,EAmdgBxI,MAAM,UAAUwS,UACbtN,GAAMtE,WACNsE,GAAMrE,eACNqE,GAAMpE,WACNoE,GAAMlE,gBACmB,IAA1BkE,GAAMjE,SAASuJ,SACdtF,GAAM/D,cACN+D,GAAM5D,cACN4D,GAAM3D,eACe,IAAtB2D,GAAM1D,KAAKgJ,OACZW,SAAE,UACLC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAC7C,QAAQ,YAAYxI,MAAM,QAAQsL,QAvjCpC,WAClB/H,IAAQ,GACRC,IACF,EAojC6E2H,SAAC,yBAY1EC,EAAAA,EAAAA,KAACmF,EAAAA,EAAK,CAAC3E,GAAG,eACRtI,KAAMoD,GACN,kBAAgB,oBAChB,mBAAiB,0BAAyByE,UAE1CC,EAAAA,EAAAA,KAACoF,EAAAA,EAAG,CAACnB,GAAI3O,EAAsByK,UAC7BF,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACC,WAAS,EAACrB,GAAI,CAAEhP,QAAS,OAAQC,cAAe,SAAUE,IAAK,QAAS2K,SAAA,EAC5EC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACtG,QAAQ,KAAI2C,SAAC,wBAE3BC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACR0C,MAAM,OACNlM,MAAO4D,GAAc5E,KACrBsQ,UAAQ,EACRnD,GAAI,CAAEC,gBAAiB,QAASrP,aAAc,OAC9CkR,WAAS,OAGb/F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACR0C,MAAM,UACNlM,MAAO4D,GAAc3E,QACrBqQ,UAAQ,EACRnD,GAAI,CAAEC,gBAAiB,QAASrP,aAAc,OAC9CkR,WAAS,OAGb/F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACtG,QAAQ,KAAI2C,SAAC,uBAE3BC,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACR0C,MAAM,gBACNlM,MAAO4D,GAAc3F,YACrByL,OACE,WACM9F,GAAc3F,YAAc2F,GAAc3E,UAC5CS,EAAgB,gDAAiD,CAAE4F,QAAS,UAC5EzB,IAAiB,SAACpD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAExC,YAAa2F,GAAc3E,SAAO,IAE7E,EAEF2K,SAAU,SAACD,GAAC,OAAK9F,IAAiB,SAACpD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAExC,YAAa0L,EAAEE,OAAO7J,OAAK,GAAI,EACvFmM,GAAI,CAAEC,gBAAiB,QAASrP,aAAc,OAC9CkR,WAAS,OAIb/F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBC,EAAAA,EAAAA,KAACyE,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAa5E,UAC9CC,EAAAA,EAAAA,KAACuG,EAAAA,EAAU,CAETvC,MAAM,eACNlM,MAAO4D,GAAc1E,YACrBuR,QAAStR,IAAM,IAAIC,MACnBwK,SAAU,SAACqD,GACTpJ,IAAiB,SAACpD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEvB,YAAa+N,GAAQ,GAC9D,EACAd,GAAI,CAAEC,gBAAiB,QAASrP,aAAc,OAC9CkN,OAAO,aACPyE,UAAW,CAAEC,UAAW,CAAEV,WAAW,WAI3C/F,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBF,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAACb,WAAS,EAAAhG,SAAA,EACpBC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,sBAAqBT,SAAC,yBACrCC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CACLC,QAAQ,sBACRvG,GAAG,qBACHwD,MAAM,sBACNC,GAAI,CAAEC,gBAAiB,QAASrP,aAAc,OAC9CiD,MAAO4D,GAAcxF,YACrBwL,SAAU,SAACD,GAAC,OAAK9F,IAAiB,SAACpD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAErC,YAAauL,EAAEE,OAAO7J,OAAK,GAAI,EAACiI,SAGtFgI,EAAAA,GAAAA,YAAAA,KAAuB,SAAC7R,EAAa6K,GAAK,OACxCf,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAa7I,MAAO5B,EAAY6J,SAAE7J,GAA5B6K,EAAmD,WAO5C,SAA9BrF,GAAcxF,cACd8J,EAAAA,EAAAA,KAACqF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAG3F,UAChBF,EAAAA,EAAAA,MAAC+G,EAAAA,EAAW,CAACb,WAAS,EAAAhG,SAAA,EACpBC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,CAACrG,GAAG,cAAaT,SAAC,iBAC7BC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CACLC,QAAQ,cACRvG,GAAG,qBACHwD,MAAM,cACNlM,MAAO4D,GAActF,KACrB6N,GAAI,CAAEC,gBAAiB,QAASrP,aAAc,OAC9C6M,SAAU,SAACD,GAAC,OAAK9F,IAAiB,SAACpD,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAErC,YAAauL,EAAEE,OAAO7J,OAAK,GAAI,EAACiI,SAGtFgI,EAAAA,GAAAA,YAAAA,KAAuB,SAAC7R,EAAa6K,GAAK,OACxCf,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAa7I,MAAO5B,EAAY6J,SAAE7J,GAA5B6K,EAAmD,YAO9ElB,EAAAA,EAAAA,MAACwF,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIzB,GAAI,CAAEhP,QAAS,OAAQE,eAAgB,WAAYC,IAAK,QAAS2K,SAAA,EAClFC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL7C,QAAQ,YACRxI,MAAM,UACNsL,QAnoCc,WAC1B,IAAMsI,EAAuB,CAAC,EAE9BA,EAAqB3R,aAAe6E,GAAc7E,aAClD2R,EAAqBzS,YAAc2F,GAAc3F,YACjDyS,EAAqBxR,YAAc0E,GAAc1E,YACjDwR,EAAqBtS,YAAcwF,GAAcxF,YAC7CwF,GAActF,KAAKgJ,OAAS,IAC9BoJ,EAAqBpS,KAAOsF,GAActF,MAI5C,IAAM8F,EAAiBM,aAAaC,QAAQC,EAAAA,EAAAA,cACtCP,GAAcQ,EAAAA,EAAAA,IAAaT,GACjCU,EAAAA,GAAAA,KAAWC,EAAAA,GAAAA,MAAAA,cAA+B2L,EACxC,CACE1L,QAAS,CACPC,cAAc,UAADC,OAAYb,MAG5B+L,MAAK,SAACC,GACL3Q,EAAgB,6CAA8C,CAAE4F,QAAS,YACzE7B,IAAsB,GACtBI,GAAiB/E,GACjB6H,IACF,IAAG2J,OAAM,SAACC,GACR7Q,EAAgB6Q,EAAIC,MAAO,CAAElL,QAAS,SACxC,GAEJ,EAumCcgK,UACG1L,GAAc3F,cACd2F,GAAcxF,aACgB,SAA9BwF,GAAcxF,cAA2BwF,GAActF,KACzD2J,SACF,oBAGDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACL7C,QAAQ,YACRxI,MAAM,QACNsL,QAAS,WACP3E,IAAsB,GACtBI,GAAiB/E,EACnB,EAAEmJ,SACH,uBAWf,CCjzCe,SAAS0I,IACtB,OACE5I,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC0I,EAAAA,GAAM,CAAA3I,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,0BAGTC,EAAAA,EAAAA,KAAC2I,EAAO,MAGd,C,4BCbIC,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,4OACD,Q","sources":["sections/one/view.js","pages/dashboard/one.js","../node_modules/@mui/icons-material/Phone.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n// @mui\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { Button, Chip, Stack, Box, TextField, InputAdornment, Modal, Grid, IconButton, Autocomplete, Select, FormControl, InputLabel, MenuItem, Menu } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport dayjs from 'dayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { SingleInputDateRangeField } from '@mui/x-date-pickers-pro/SingleInputDateRangeField';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport DataTable from 'react-data-table-component';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PercentIcon from '@mui/icons-material/Percent';\nimport { color, common, decryptToken, formatDate } from 'src/utils/common';\nimport { constants } from 'src/utils/constant';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { useSnackbar } from 'src/components/snackbar';\nimport PhoneIcon from '@mui/icons-material/Phone';\n\n// ----------------------------------------------------------------------\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '75%',\n  bgcolor: color.modalbackground,\n  borderRadius: '10px',\n  height: \"90%\",\n  overflowY: 'auto',\n  boxShadow: 24,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  gap: '10px',\n  p: 2,\n};\nconst styleForRecordPayment = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '400px',\n  bgcolor: color.modalbackground,\n  borderRadius: '10px',\n  height: \"auto\",\n  boxShadow: 24,\n  p: 2,\n};\n\nconst initialSaleState = {\n  customer: null,\n  mobileNumber: '',\n  salesMan: null,\n  invoiceDate: null,\n  invoiceDueDate: null,\n  products: [],\n  offer: '',\n  amountToPay: '',\n  totalAmount: 0,\n  productDiscount: 0,\n  paymentMode: '',\n  paymentStatus: '',\n  bank: '123213123',\n};\n\nconst initialSaleProduct = {\n  category: 'All Categories',\n  product: null,\n  quantity: '',\n  netAmount: null,\n  discount: null,\n  sellingPrice: null,\n};\n\nconst initialRecordPaymentState = {\n  salesOrderId: '',\n  name: '',\n  balance: 0,\n  amountToPay: 0,\n  paymentMode: '',\n  bank: '',\n  paymentDate: dayjs(new Date()),\n};\n\nexport default function SalesView() {\n  const settings = useSettingsContext();\n  const { enqueueSnackbar } = useSnackbar();\n  const [value, setValue] = useState(() => [\n    dayjs('2022-04-17'),\n    dayjs('2022-04-21'),\n  ]);\n\n\n  // console.log(\"DB Date\", dayjs('2024-01-16T12:07:08.670+00:00'))\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setSales((prev) => ({ ...prev, invoiceDate: dayjs(new Date()) }))\n    setOpen(true)\n  };\n  const handleClose = () => {\n    setOpen(false);\n    handleClearAllStates();\n  };\n\n  const handleClearAllStates = () => {\n    setSales(initialSaleState);\n    setSaleProduct(initialSaleProduct);\n    setSales((prev) => ({ ...prev, customer: null }));\n  };\n\n  const [customers, setCustomers] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [offers, setOffers] = useState([]);\n  const [sales, setSales] = useState(initialSaleState);\n\n  const [saleProduct, setSaleProduct] = useState(initialSaleProduct)\n  const [isSalesLoading, setIsSalesLoading] = useState(false)\n  const [salesList, setSalesList] = useState([])\n\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n\n\n  // RECORD PAYMENTS\n\n  const [recordPaymentModal, setRecordPaymentModal] = useState(false);\n  const [recordPayment, setRecordPayment] = useState(initialRecordPaymentState);\n\n\n  const handleOpenRecordPaymentModal = () => {\n    setAnchorEl(null);\n    setRecordPaymentModal(true);\n    setRecordPayment((prev) => ({\n      ...prev, name: tempData.customerId.name,\n      balance: tempData.remainingAmount,\n      salesOrderId: tempData._id\n    }));\n    setTempData({});\n  }\n\n  const handleRecordPayment = () => {\n    const recordPaymentPayload = {};\n\n    recordPaymentPayload.salesOrderId = recordPayment.salesOrderId;\n    recordPaymentPayload.amountToPay = recordPayment.amountToPay;\n    recordPaymentPayload.paymentDate = recordPayment.paymentDate;\n    recordPaymentPayload.paymentMode = recordPayment.paymentMode;\n    if (recordPayment.bank.length > 0) {\n      recordPaymentPayload.bank = recordPayment.bank;\n    };\n\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.recordPayment, recordPaymentPayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order payment recorded successfully!', { variant: 'success' });\n        setRecordPaymentModal(false);\n        setRecordPayment(initialRecordPaymentState);\n        fetchSales();\n      }).catch((err) => {\n        enqueueSnackbar(err.error, { variant: 'error' });\n      })\n\n  }\n\n  const fetchCustomers = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.customer.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setCustomers(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch customers!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchEmployeesData = async () => {\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.employee.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setEmployees(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch employees!', { variant: 'error' });\n    }\n  };\n\n  const fetchProducts = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.product.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setProducts(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch products!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchProductsCategory = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.product.category.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setCategories(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch Categories!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchOffers = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.offer.list, { status: ['LIVE'] }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setOffers(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch offers!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchSales = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.sales.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log('calling')\n        setIsSalesLoading(false);\n        setSalesList(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch sales orders!', { variant: 'error' });\n      setIsSalesLoading(false);\n    }\n  };\n\n\n  useEffect(() => {\n    setIsSalesLoading(true);\n    fetchSales();\n    fetchCustomers();\n    fetchEmployeesData();\n    fetchProducts();\n    fetchProductsCategory();\n    fetchOffers();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const columns = [\n    {\n      name: 'Customer Name',\n      selector: row => row.customerId.name,\n    },\n    {\n      name: 'Product Name',\n      selector: row => row.products.length > 1 ? `${row.products[0].name}, & ${row.products.length - 1} more` : row.products[0].name,\n      width: \"150px\"\n    },\n    {\n      name: 'Amount',\n      selector: row => row.totalAmount.toFixed(2),\n      center: 'true'\n    },\n    {\n      name: 'Payment Mode',\n      selector: row => row.payments[0].paymentID.paymentMode,\n      center: 'true'\n    },\n    {\n      name: 'Payment Status',\n      selector: row => row.payments[0].paymentID.paymentStatus,\n      center: 'true'\n    },\n    {\n      name: 'Invoice Number',\n      width: \"160px\",\n      center: 'true',\n      selector: row => row.invoiceNumber,\n    },\n    {\n      name: 'Last Updated',\n      width: \"220px\",\n      selector: row => formatDate(row.updatedAt),\n      center: 'true'\n    },\n    {\n      name: 'Actions',\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <Button onClick={(event) => {\n            setAnchorEl(event.currentTarget);\n            setTempData(row)\n          }} style={{ color: color.actionButton }} variant='outlined' endIcon={<ArrowDropDownIcon />}>Action</Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={() => { }}>Edit</MenuItem>\n            <MenuItem onClick={() => { }}>View</MenuItem>\n            <MenuItem onClick={() => { }}>Send via Email</MenuItem>\n            <MenuItem onClick={() => { }}>Send via Whatsapp</MenuItem>\n            {\n              tempData.remainingAmount > 0 &&\n              <MenuItem onClick={() => handleOpenRecordPaymentModal()}>Record Payment</MenuItem>\n            }\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n  const handleDeleteProduct = (row, index) => {\n    console.log('deleting product...')\n    const newProducts = [...sales.products];\n    newProducts.splice(index, 1);\n    setSales((prev) => ({ ...prev, products: newProducts }));\n  };\n\n  const handleProductChange = (index, field, fieldValue) => {\n\n    if (field === 'discount') {\n      if (fieldValue < 0) {\n        fieldValue = 0;\n        enqueueSnackbar(`Discount should be between 0 and 100 percent.`, { variant: 'error' })\n      } else if (fieldValue > 100) {\n        fieldValue = 100;\n        enqueueSnackbar(`Discount should be between 0 and 100 percent.`, { variant: 'error' })\n      }\n    };\n\n    // if (field === 'sellingPrice') {\n    //   if (fieldValue < sales.products[index].product.sellingPrice) {\n    //     fieldValue = sales.products[index].product.sellingPrice;\n    //     console.log(\"fieldValue\", fieldValue)\n    //     enqueueSnackbar(`The product price cannot be lower than its selling price of ${format(sales.products[index].product.sellingPrice)}!`, { variant: 'error' })\n    //   };\n    // };\n\n    // Check for quantity field as well\n    if (field === 'quantity') {\n\n      if (fieldValue > sales.products[index].product.quantity) {\n        fieldValue = sales.products[index].product.quantity;\n        enqueueSnackbar(`There are only ${sales.products[index].product.quantity} units available.`, { variant: 'error' })\n      };\n\n    };\n\n    // Create a copy of the products array\n    const updatedProducts = [...sales.products];\n\n    // Access the specific product by index\n    const product = { ...updatedProducts[index] };\n\n    // Update the field with the new value\n    product[field] = fieldValue;\n\n    // Update the products array with the modified product\n    updatedProducts[index] = product;\n\n    console.log(\"new Product\", updatedProducts[index]);\n\n\n    // Update the state immutably\n    setSales(prevSales => ({\n      ...prevSales,\n      products: updatedProducts\n    }));\n  };\n\n  const productColumns = [\n    {\n      name: 'Product Name',\n      selector: row => row.product.name,\n\n    },\n    {\n      name: 'Quantity',\n      selector: row => row.quantity,\n\n      cell: (row, index) => (\n        <TextField\n          type='number'\n          onBlur={(e) => {\n            // Create a copy of the products array\n            const updatedProducts = [...sales.products];\n\n            // Access the specific product by index\n            const product = { ...updatedProducts[index] };\n\n            if (row.quantity.length === 0) {\n              enqueueSnackbar(`Quantity cannot be empty`, { variant: 'error' });\n              product.quantity = '1';\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={(e) => handleProductChange(index, 'quantity', e.target.value)}\n          value={row.quantity} size='small' />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'Sell Price',\n      selector: row => row.sellingPrice,\n      cell: (row, index) => (\n        <TextField\n          type='number'\n          onBlur={() => {\n            // Create a copy of the products array\n            const updatedProducts = [...sales.products];\n\n            // Access the specific product by index\n            const product = { ...updatedProducts[index] };\n\n\n            if (row.sellingPrice.length === 0 || product.product.purchasePrice > parseInt(row.sellingPrice, 10)) {\n              enqueueSnackbar(`The product price cannot be lower than its purchase price of ${format(sales.products[index].product.purchasePrice)}`, { variant: 'error' })\n              // Update the field with the new value\n              product.sellingPrice = String(product.product.purchasePrice);\n\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={(e) => handleProductChange(index, 'sellingPrice', e.target.value)}\n          value={row.sellingPrice}\n          size='small' />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'GST Value',\n      selector: row => row.product.gstValue,\n      center: 'true'\n    },\n    {\n      name: 'Discount',\n      selector: row => row.discount,\n      cell: (row, index) => (\n        <TextField value={row.discount}\n          size='small'\n          type='number'\n          onBlur={() => {\n            if (row.discount.length === 0) {\n              // Create a copy of the products array\n              const updatedProducts = [...sales.products];\n\n              // Access the specific product by index\n              const product = { ...updatedProducts[index] };\n\n              // Update the field with the new value\n              product.discount = '0';\n\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={e => handleProductChange(index, 'discount', e.target.value)}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <PercentIcon fontSize='small' />\n              </InputAdornment>\n            ),\n          }} />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'Net Amount',\n      selector: row => {\n        const quantity = parseInt(row.quantity ? row.quantity : 0, 10);\n        const sellingPrice = parseInt(row.sellingPrice ? row.sellingPrice : 0, 10);\n        const netAmount = quantity * sellingPrice;\n        // console.log(\"🚀 ~ SalesView ~ netAmount:\", netAmount)\n        // const gstPercentage = parseFloat(row.product.gstValue ? row.product.gstValue : 0); // Assuming gstValue is a string representing percentage\n        // const gstAmount = (netAmount * gstPercentage) / 100;\n        // return netAmount + gstAmount;\n        return netAmount;\n      },\n      center: 'true'\n    },\n    {\n      name: 'Actions',\n      cell: (row, index) => (\n        <IconButton onClick={() => handleDeleteProduct(row, index)} color='error' variant='outlined'>\n          <DeleteIcon />\n        </IconButton>\n      ),\n      center: 'true'\n    },\n  ];\n\n  // const data = [\n  //   {\n  //     customerName: 'Disha Shaha',\n  //     productName: \"XXXXX\",\n  //     amount: \"XXX\",\n  //     mode: \"Cash\",\n  //     status: \"Paid\",\n  //     number: \"XXX\",\n  //     lastUpdated: \"28 Dec 2023\"\n\n  //   },\n  //   {\n  //     customerName: 'Disha Shaha',\n  //     productName: \"XXXXX\",\n  //     amount: \"XXX\",\n  //     mode: \"Cash\",\n  //     status: \"Paid\",\n  //     number: \"XXX\",\n  //     lastUpdated: \"28 Dec 2023\"\n\n  //   },\n  //   {\n  //     customerName: 'Disha Shaha',\n  //     productName: \"XXXXX\",\n  //     amount: \"XXX\",\n  //     mode: \"Cash\",\n  //     status: \"Paid\",\n  //     number: \"XXX\",\n  //     lastUpdated: \"28 Dec 2023\"\n\n  //   },\n  //   {\n  //     customerName: 'Disha Shaha',\n  //     productName: \"XXXXX\",\n  //     amount: \"XXX\",\n  //     mode: \"Cash\",\n  //     status: \"Paid\",\n  //     number: \"XXX\",\n  //     lastUpdated: \"28 Dec 2023\"\n\n  //   },\n  // ];\n\n  const { format } = new Intl.NumberFormat('hi-In', {\n    style: 'currency',\n    currency: 'INR'\n  });\n\n  const addProductToSales = () => {\n    // Check if the product is already added to sales\n    if (sales.products.find((product) => product.product.name === saleProduct.product.name)) {\n      enqueueSnackbar('Product already added!', { variant: 'error' });\n      return;\n    }\n\n    // Check if product quantity is available\n    const existingProduct = products.find((product) => product.name === saleProduct.product.name);\n    if (existingProduct && existingProduct.quantity < saleProduct.quantity) {\n      enqueueSnackbar('Product quantity not available!', { variant: 'error' });\n      return;\n    }\n\n    // Add product to sales\n    const productToAdd = {\n      product: saleProduct.product,\n      sellingPrice: saleProduct.product.sellingPrice,\n      quantity: saleProduct.quantity,\n      category: saleProduct.category,\n      discount: 0, // In percentage\n      // netAmount: saleProduct.product.sellingPrice * saleProduct.quantity\n    };\n\n    setSales((prev) => ({\n      ...prev,\n      products: [...prev.products, productToAdd]\n    }));\n\n    console.log(saleProduct);\n    setSaleProduct(initialSaleProduct);\n  };\n\n  // Function to calculate the discount\n  function calculateDiscount(product) {\n    const totalAmount = parseInt(product.sellingPrice.length === 0 ? 0 : product.sellingPrice, 10) * parseInt(product.quantity.length === 0 ? 0 : product.quantity, 10);\n    const discountAmount = totalAmount * (parseInt(product.discount.length === 0 ? 0 : product.discount, 10) / 100); // Assuming discount is in percentage\n    return discountAmount;\n  };\n\n\n  const handleSaveSalesOrder = () => {\n\n    const salesPayload = { ...sales };\n\n    salesPayload.discount = {};\n    salesPayload.discount.productDiscount = productDiscount;\n    if (Object.keys(sales.offer).length > 0) {\n      salesPayload.discount.offer = {};\n      salesPayload.discount.offer.discount = offerDiscount;\n      salesPayload.discount.offer.id = sales.offer._id;\n    };\n\n    salesPayload.totalDiscount = productDiscount + offerDiscount;\n    salesPayload.totalAmount = totalAmount;\n    salesPayload.invoiceDueDate = dayjs(salesPayload.invoiceDueDate).format('YYYY-MM-DD');\n\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.add, salesPayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order created successfully!', { variant: 'success' });\n        setOpen(false);\n        handleClearAllStates();\n        fetchSales();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.err, { variant: 'error' });\n      })\n\n  };\n\n  const productDiscount = sales.products.reduce((total, product) => {\n    const discount = calculateDiscount(product);\n    return total + discount;\n  }, 0)\n\n  const netTotalAmountWithGST = sales.products.reduce((total, product) => {\n    const sellingPrice = parseInt(product.sellingPrice.length === 0 ? 0 : product.sellingPrice, 10);\n    const quantity = parseInt(product.quantity.length === 0 ? 0 : product.quantity, 10);\n    // const gstPercentage = parseFloat(product.product.gstValue); // Assuming gstValue is a string representing percentage\n    const netAmount = sellingPrice * quantity;\n    // const gstAmount = (netAmount * gstPercentage) / 100;\n    // const totalAmountWithGST = netAmount + gstAmount;\n    const totalAmountWithGST = netAmount;\n    return total + totalAmountWithGST;\n  }, 0);\n\n\n  let offerDiscount = 0;\n  if (Object.keys(sales.offer).length > 0) {\n    if (sales.offer.type === 'PERCENTAGE') {\n      offerDiscount = (netTotalAmountWithGST * sales.offer.typeValue) / 100;\n    } else {\n      offerDiscount = sales.offer.typeValue;\n    }\n  }\n\n  const totalAmount = netTotalAmountWithGST - (productDiscount + offerDiscount);\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Sales </Typography>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\", marginTop: \"20px\" }}>\n        <Stack direction=\"row\" spacing={1}>\n          <Chip label=\"Total ₹ 13,500.00\" variant=\"contained\" sx={{ backgroundColor: '#CBF0FF' }} />\n          <Chip label=\"Paid ₹ 5,500.00\" variant=\"contained\" sx={{ backgroundColor: '#CBFFE0' }} />\n          <Chip label=\"Pending ₹ 10,000.00\" variant=\"contained\" sx={{ backgroundColor: '#FFF7CB' }} />\n        </Stack>\n\n        <Stack>\n          <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={handleOpen}>\n            CREATE SALES ORDER\n          </Button>\n\n\n        </Stack>\n      </div >\n\n      <div style={{ marginTop: \"20px\" }}>\n        <div style={{ display: \"flex\", flexDirection: 'row', alignItems: \"center\", gap: \"10px\" }}>\n          <div style={{ display: \"flex\", marginTop: \"8px\" }}>\n            <TextField\n              placeholder='Search'\n              size='small'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div>\n            <LocalizationProvider dateAdapter={AdapterDayjs} >\n              <DemoContainer\n                components={['SingleInputDateRangeField']}\n              >\n                <SingleInputDateRangeField\n                  size='small'\n                  label=\"Date Range\"\n                  value={value}\n                  onChange={(newValue) => setValue(newValue)}\n                />\n              </DemoContainer>\n            </LocalizationProvider>\n          </div>\n        </div>\n\n\n        <div style={{ marginTop: \"20px\" }}>\n          <DataTable\n            columns={columns}\n            data={salesList}\n            pagination\n            progressPending={isSalesLoading}\n          />\n        </div>\n      </div>\n\n      {/* <Button onClick={() => {\n        // window.location.href = `mailto:rsaiprasad4@gmail.com?subject=Shared Content&body=Hii hello`;\n        window.location.href = `https://wa.me/+919922466094?text=Hiii Sourav`;\n      }}>\n        Send Via Email\n      </Button> */}\n\n\n      {/* Sales Modal */}\n      <Modal\n        open={open}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n\n          {/* First Row */}\n          <Grid container columnGap={2} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: 'flex', justifyContent: 'space-between', gap: '10px' }}>\n\n            <Grid item xs={3} >\n              <Autocomplete\n                value={sales.customer}\n                options={customers}\n                getOptionLabel={(prop) => prop.name ? prop.name : prop}\n                fullWidth\n                onChange={(event, newValue) => {\n                  setSales((prev) => ({ ...prev, customer: newValue || null, mobileNumber: newValue ? newValue.mobileNumber.slice(3) : '' }));\n\n                }}\n                onInputChange={(event, newInputValue) => {\n                  setSales((prev) => ({ ...prev, customer: newInputValue }));\n                }}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Search Customers\" fullWidth />\n                )}\n                freeSolo\n              />\n            </Grid>\n            <Grid item xs={3} >\n              <TextField\n                type='number'\n                label='Mobile Number'\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <PhoneIcon /> +91\n                    </InputAdornment>\n                  )\n                }}\n                value={sales.mobileNumber}\n                fullWidth\n                onChange={(event) => {\n                  // Restricting pincode to 6 digits\n                  if (event.target.value.length > 10) {\n                    return;\n                  };\n                  setSales((prev) => ({ ...prev, mobileNumber: event.target.value }))\n                }}\n\n              />\n            </Grid>\n            <Grid item xs={3} >\n              <Autocomplete\n                value={sales.salesMan}\n                options={employees}\n                getOptionLabel={(prop) => prop.name}\n                fullWidth\n                onChange={(event, newValue) => {\n                  setSales((prev) => ({ ...prev, salesMan: newValue }))\n                }}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Sales Man\" fullWidth />\n                )}\n              />\n            </Grid>\n\n            <Grid container sx={{ display: 'flex', gap: '136px' }}>\n              <Grid item xs={3} >\n                <LocalizationProvider dateAdapter={AdapterDayjs} >\n                  <DatePicker\n\n                    label=\"Invoice Date\"\n                    value={sales.invoiceDate}\n                    onChange={(newValue) => {\n                      setSales((prev) => ({ ...prev, invoiceDate: newValue }))\n                    }}\n                    format=\"DD/MM/YYYY\"\n                    slotProps={{ textField: { fullWidth: true } }}\n                  />\n                </LocalizationProvider>\n              </Grid>\n\n              <Grid item xs={3} >\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DatePicker\n                    label=\"Invoice Due Date\"\n                    format=\"DD/MM/YYYY\"\n                    value={sales.invoiceDueDate}\n                    minDate={sales.invoiceDate}\n                    onChange={(newValue) => {\n                      setSales((prev) => ({ ...prev, invoiceDueDate: newValue }))\n                    }}\n                    slotProps={{ textField: { fullWidth: true } }}\n                  />\n                </LocalizationProvider>\n              </Grid>\n            </Grid>\n          </Grid>\n\n\n          {/* Second Row */}\n          <Grid container sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: \"flex\", justifyContent: 'space-between' }} alignItems='center'>\n            <Grid item xs={12} md={7} display='flex'>\n              <FormControl sx={{ width: \"35%\" }} >\n                <InputLabel id=\"demo-simple-select-label\">All Categories</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  label='All Categories'\n                  value={saleProduct.category}\n                  onChange={(e) => {\n                    setSaleProduct((prev) => ({ ...prev, category: e.target.value, product: null, quantity: null }))\n                  }}\n                >\n                  <MenuItem value='All Categories'>All Categories</MenuItem>\n                  {\n                    categories.map((catgy, index) => (\n                      <MenuItem key={index} value={catgy.name}>{catgy.name}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n\n\n              <Autocomplete\n                options={products.filter((product) => {\n                  if (saleProduct.category && saleProduct.category !== 'All Categories') {\n                    return product.category.name === saleProduct.category;\n                  }\n                  return true; // Include all products if no category selected or if 'All Categories' is selected\n                })}\n                value={saleProduct?.product ?? null}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    setSaleProduct((prev) => ({ ...prev, product: newValue }));\n                  } else {\n                    setSaleProduct((prev) => ({ ...prev, product: null }));\n                  }\n                }}\n                getOptionLabel={(option) => option?.name}\n                fullWidth\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Search Products\" fullWidth />\n                )}\n              />\n            </Grid>\n\n            <Grid item xs={12} md={2}>\n              <TextField\n                label='Quantity'\n                type='number'\n                onChange={(e) => setSaleProduct((prev) => ({ ...prev, quantity: e.target.value }))}\n                value={saleProduct.quantity}\n              />\n            </Grid>\n            <Grid item xs={12} md={2} >\n              <Button\n                startIcon={<AddIcon />}\n                disabled={\n                  saleProduct.product === null\n                  || saleProduct.quantity === null ||\n                  saleProduct.quantity <= 0\n                }\n                variant='contained'\n                color='primary'\n                onClick={addProductToSales}\n                fullWidth\n              >\n                ADD TO ORDER\n              </Button>\n            </Grid>\n          </Grid>\n\n\n          {\n            sales.products.length > 0 &&\n\n            <Grid container sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", }} alignItems='center'>\n              <Grid item xs={12}>\n                <DataTable\n                  columns={productColumns}\n                  data={sales.products}\n                />\n              </Grid>\n              <Grid item xs={12} display='flex' justifyContent='flex-end' sx={{ mt: 2 }}>\n                <div >\n                  <div>\n                    Apply Offer to all products\n                  </div>\n\n                  <div style={{ paddingTop: \"5px\" }}>\n                    {\n                      Object.keys(sales.offer).length === 0 ?\n\n                        <FormControl fullWidth size=\"small\">\n                          <InputLabel id=\"demo-simple-select-label\">Select Offer</InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            label='Select Offer'\n                            value={sales.offer ?? ''}\n                            onChange={(e) => setSales((prev) => ({ ...prev, offer: e.target.value }))}\n                          >\n                            {offers.map((offer, i) => (\n                              <MenuItem key={i} value={offer}>{offer.code}</MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n\n                        :\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <Chip variant='contained' color='primary' label={`Offer Applied : ${sales.offer.code}`} onDelete={() => { setSales((prev) => ({ ...prev, offer: {} })) }} />\n                          <Typography variant='caption' gutterBottom >\n                            {\n                              sales.offer.type === 'PERCENTAGE' ?\n                                `${sales.offer.typeValue}% Off` :\n                                `${format(sales.offer.typeValue)} Off`\n                            }\n                          </Typography>\n                        </div>\n                    }\n                  </div>\n\n                </div>\n              </Grid>\n            </Grid>\n          }\n\n          <Grid container display='flex' justifyContent='flex-end'>\n            <Grid item xs={12} md={6} lg={6} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", }}>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div>Product Discount</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(productDiscount)\n                  }</div>\n                </div>\n\n                {\n                  Object.keys(sales.offer).length !== 0 ?\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                      <div>Offer Discount</div>\n                      <div>{\n                        format(offerDiscount)\n                      }</div>\n                    </div>\n                    : null\n                }\n\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div>Total Amount</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(netTotalAmountWithGST)\n                  }</div>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container display='flex' justifyContent='flex-end'>\n            <Grid item xs={12} md={6} lg={6} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: 'flex', flexDirection: 'column', gap: '10px' }}>\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }} >\n                {/* <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Mode'\n                    value={sales.paymentMode}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      common.paymentMode.map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl> */}\n                <TextField\n                  fullWidth\n                  size='small'\n                  label=\"Enter Amount\"\n                  onBlur={(e) => {\n                    if (e.target.value > netTotalAmountWithGST) {\n                      enqueueSnackbar('Amount to pay cannot be greater than total amount!', { variant: 'error' });\n                      setSales((prev) => ({ ...prev, amountToPay: netTotalAmountWithGST }));\n                    };\n                  }}\n                  value={sales.amountToPay}\n                  onChange={(e) => setSales((prev) => ({ ...prev, amountToPay: e.target.value }))}\n                />\n\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Status</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Status'\n                    value={sales.paymentStatus}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentStatus: e.target.value }))}\n                  >\n                    {\n                      common.paymentStatus.map((paymentStatus, index) => (\n                        <MenuItem key={index} value={paymentStatus}>{paymentStatus}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }} >\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Mode'\n                    value={sales.paymentMode}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      common.paymentMode.map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n\n\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Bank</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Bank'\n                    value={sales.bank}\n                    onChange={(e) => setSales((prev) => ({ ...prev, bank: e.target.value }))}\n                    disabled={sales.paymentMode === 'CASH'}\n                  >\n                    {/* {\n                      common.paymentStatus.map((paymentStatus, index) => ( */}\n                    <MenuItem value={sales.bank}>SBI</MenuItem>\n                    {/* ))\n                    } */}\n                  </Select>\n                </FormControl>\n              </div>\n            </Grid>\n\n          </Grid>\n\n          <Grid container  >\n            <Grid item xs={12} md={12} lg={12} sx={{ backgroundColor: \"white\", p: \"15px\", borderRadius: \"10px\" }} display='flex' justifyContent='space-between' alignItems='center'>\n              <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '20px' }}>\n                <div>Total  :</div>\n                <div>{\n                  sales.products.length === 0 ?\n                    format(0) :\n                    format(totalAmount)\n                }</div>\n              </div>\n              <div style={{ display: 'flex', gap: '10px' }}>\n                <Button variant='contained'\n                  onClick={handleSaveSalesOrder}\n                  color='primary' disabled={\n                    !sales.customer ||\n                    !sales.mobileNumber ||\n                    !sales.salesMan ||\n                    !sales.invoiceDueDate ||\n                    sales.products.length === 0 ||\n                    !sales.amountToPay ||\n                    !sales.paymentMode ||\n                    !sales.paymentStatus ||\n                    sales.bank.length === 0\n                  } >SAVE</Button>\n                <Button variant='contained' color='error' onClick={handleClose}>CANCEL</Button>\n              </div>\n            </Grid>\n          </Grid>\n\n        </Box>\n      </Modal>\n\n\n\n\n      {/* RECORD PAYMENT MODAL  */}\n      <Modal id=\"paymentModal\"\n        open={recordPaymentModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={styleForRecordPayment}>\n          <Grid container sx={{ display: 'flex', flexDirection: 'column', gap: '10px' }} >\n            <Grid item xs={12}>\n              <Typography variant='h6'>Customer Details</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Name'\n                value={recordPayment.name}\n                disabled\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Balance'\n                value={recordPayment.balance}\n                disabled\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6'>Payment Details</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Amount To Pay'\n                value={recordPayment.amountToPay}\n                onBlur={\n                  () => {\n                    if (recordPayment.amountToPay > recordPayment.balance) {\n                      enqueueSnackbar('Amount to pay cannot be greater than balance!', { variant: 'error' });\n                      setRecordPayment((prev) => ({ ...prev, amountToPay: recordPayment.balance }));\n                    }\n                  }\n                }\n                onChange={(e) => setRecordPayment((prev) => ({ ...prev, amountToPay: e.target.value }))}\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12} >\n              <LocalizationProvider dateAdapter={AdapterDayjs} >\n                <DatePicker\n\n                  label=\"Payment Date\"\n                  value={recordPayment.paymentDate}\n                  maxDate={dayjs(new Date())}\n                  onChange={(newValue) => {\n                    setRecordPayment((prev) => ({ ...prev, paymentDate: newValue }))\n                  }}\n                  sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                  format=\"DD/MM/YYYY\"\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth >\n                <InputLabel id=\"record-payment-mode\">Select Payment Mode</InputLabel>\n                <Select\n                  labelId=\"record-payment-mode\"\n                  id=\"demo-simple-select\"\n                  label='Select Payment Mode'\n                  sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                  value={recordPayment.paymentMode}\n                  onChange={(e) => setRecordPayment((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                >\n                  {\n                    common.paymentMode.map((paymentMode, index) => (\n                      <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {\n              recordPayment.paymentMode !== 'CASH' &&\n              <Grid item xs={12}>\n                <FormControl fullWidth >\n                  <InputLabel id=\"select-bank\">Select Bank</InputLabel>\n                  <Select\n                    labelId=\"select-bank\"\n                    id=\"demo-simple-select\"\n                    label='Select Bank'\n                    value={recordPayment.bank}\n                    sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                    onChange={(e) => setRecordPayment((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      common.paymentMode.map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </Grid>\n            }\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleRecordPayment}\n                disabled={\n                  !recordPayment.amountToPay ||\n                  !recordPayment.paymentMode ||\n                  (recordPayment.paymentMode !== 'CASH' && !recordPayment.bank)\n                }\n              >\n                Update Payment\n              </Button>\n              <Button\n                variant='contained'\n                color='error'\n                onClick={() => {\n                  setRecordPaymentModal(false);\n                  setRecordPayment(initialRecordPaymentState);\n                }}\n              >\n                Cancel\n              </Button>\n\n            </Grid>\n\n          </Grid>\n        </Box>\n      </Modal>\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/one/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard : Sales</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'Phone');"],"names":["style","position","top","left","transform","width","bgcolor","color","borderRadius","height","overflowY","boxShadow","display","flexDirection","justifyContent","gap","p","styleForRecordPayment","initialSaleState","customer","mobileNumber","salesMan","invoiceDate","invoiceDueDate","products","offer","amountToPay","totalAmount","productDiscount","paymentMode","paymentStatus","bank","initialSaleProduct","category","product","quantity","netAmount","discount","sellingPrice","initialRecordPaymentState","salesOrderId","name","balance","paymentDate","dayjs","Date","SalesView","_saleProduct$product","_sales$offer","settings","useSettingsContext","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","open","setOpen","handleClearAllStates","setSales","setSaleProduct","prev","_objectSpread","_useState5","_useState6","customers","setCustomers","_useState7","_useState8","employees","setEmployees","_useState9","_useState10","categories","setCategories","_useState11","_useState12","setProducts","_useState13","_useState14","offers","setOffers","_useState15","_useState16","sales","_useState17","_useState18","saleProduct","_useState19","_useState20","isSalesLoading","setIsSalesLoading","_useState21","_useState22","salesList","setSalesList","_useState23","_useState24","anchorEl","setAnchorEl","openMenu","Boolean","_useState25","_useState26","tempData","setTempData","_useState27","_useState28","recordPaymentModal","setRecordPaymentModal","_useState29","_useState30","recordPayment","setRecordPayment","fetchCustomers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","data","t0","variant","stop","apply","arguments","fetchEmployeesData","_ref2","_callee2","_context2","fetchProducts","_ref3","_callee3","_context3","fetchProductsCategory","_ref4","_callee4","_context4","fetchOffers","_ref5","_callee5","_context5","status","fetchSales","_ref6","_callee6","_context6","console","log","useEffect","columns","selector","row","customerId","length","toFixed","center","payments","paymentID","invoiceNumber","formatDate","updatedAt","cell","_jsxs","_Fragment","children","_jsx","Button","onClick","event","currentTarget","endIcon","ArrowDropDownIcon","Menu","id","onClose","MenuListProps","MenuItem","remainingAmount","_id","handleProductChange","index","field","fieldValue","updatedProducts","_toConsumableArray","prevSales","productColumns","TextField","type","onBlur","e","onChange","target","size","purchasePrice","parseInt","format","String","gstValue","InputProps","endAdornment","InputAdornment","PercentIcon","fontSize","IconButton","newProducts","splice","handleDeleteProduct","DeleteIcon","Intl","NumberFormat","currency","reduce","total","calculateDiscount","netTotalAmountWithGST","offerDiscount","Object","keys","typeValue","Container","maxWidth","themeStretch","Typography","marginTop","Stack","direction","spacing","Chip","label","sx","backgroundColor","startIcon","AddIcon","alignItems","placeholder","startAdornment","SearchIcon","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","SingleInputDateRangeField","newValue","DataTable","pagination","progressPending","Modal","Box","Grid","container","columnGap","padding","item","xs","Autocomplete","options","getOptionLabel","prop","fullWidth","slice","onInputChange","newInputValue","renderInput","params","freeSolo","PhoneIcon","DatePicker","slotProps","textField","minDate","md","FormControl","InputLabel","Select","labelId","map","catgy","filter","option","disabled","find","existingProduct","productToAdd","mt","paddingTop","i","code","onDelete","gutterBottom","lg","common","salesPayload","totalDiscount","then","res","catch","err","error","maxDate","recordPaymentPayload","Page","Helmet","OneView","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}