{"version":3,"file":"static/js/571.535c8f5d.chunk.js","mappings":"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","sources":["sections/one/view.js","pages/dashboard/one.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Percent.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/x-date-pickers/internals/demo/DemoContainer.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\n// @mui\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { Button, Chip, Stack, Box, TextField, InputAdornment, Modal, Grid, IconButton, Autocomplete, Select, FormControl, InputLabel, MenuItem, Menu, Dialog, DialogActions, DialogTitle, DialogContent, ListItemText } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport dayjs from 'dayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { SingleInputDateRangeField } from '@mui/x-date-pickers-pro/SingleInputDateRangeField';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport DataTable from 'react-data-table-component';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PercentIcon from '@mui/icons-material/Percent';\nimport { color, common, decryptToken, formatDate, formatObj } from 'src/utils/common';\nimport { constants } from 'src/utils/constant';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { useSnackbar } from 'src/components/snackbar';\n\n// ----------------------------------------------------------------------\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '75%',\n  bgcolor: color.modalbackground,\n  borderRadius: '10px',\n  height: \"90%\",\n  overflowY: 'auto',\n  boxShadow: 24,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  gap: '10px',\n  p: 2,\n};\nconst styleForRecordPayment = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '400px',\n  bgcolor: color.modalbackground,\n  borderRadius: '10px',\n  height: \"auto\",\n  boxShadow: 24,\n  p: 2,\n};\n\nconst initialSaleState = {\n  customer: '',\n  mobileNumber: '',\n  salesMan: null,\n  invoiceDate: null,\n  invoiceDueDate: null,\n  products: [],\n  offer: '',\n  amountToPay: '',\n  totalAmount: 0,\n  productDiscount: 0,\n  paymentMode: '',\n  paymentStatus: '',\n  bank: '',\n};\n\nconst initialSaleProduct = {\n  category: 'All Categories',\n  product: null,\n  quantity: '',\n  netAmount: null,\n  discount: null,\n  sellingPrice: null,\n};\n\nconst initialRecordPaymentState = {\n  salesOrderId: '',\n  name: '',\n  balance: 0,\n  amountToPay: 0,\n  paymentMode: '',\n  bank: '',\n  paymentDate: dayjs(new Date()),\n};\n\nexport default function SalesView() {\n  const settings = useSettingsContext();\n  // Create a ref for the Autocomplete component\n  const autocompleteRef = useRef(null);\n  // State to store the index of the last added product\n  const [discount, setDiscount] = useState(0);\n  const [previouslyPaidAmount, setPreviouslyPaidAmount] = useState(0);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [value, setValue] = useState(() => [\n    dayjs('2022-04-17'),\n    dayjs('2022-04-21'),\n  ]);\n\n\n  // console.log(\"DB Date\", dayjs('2024-01-16T12:07:08.670+00:00'))\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setSales((prev) => ({ ...prev, invoiceDate: dayjs(new Date()) }))\n    setOpen(true);\n    setEditSales(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setEditSales(false);\n    handleClearAllStates();\n  };\n\n  const handleClearAllStates = () => {\n    setSales(initialSaleState);\n    setSaleProduct(initialSaleProduct);\n    setSales((prev) => ({ ...prev, customer: null }));\n    setDiscount(0);\n    setPreviouslyPaidAmount(0);\n  };\n\n  // For Delete Customer\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const [customers, setCustomers] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [banks, setBanks] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [offers, setOffers] = useState([]);\n  const [sales, setSales] = useState(initialSaleState);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [saleProduct, setSaleProduct] = useState(initialSaleProduct)\n  const [isSalesLoading, setIsSalesLoading] = useState(false)\n  const [salesList, setSalesList] = useState([])\n  const [salesSummary, setSaleSummary] = useState({\n    totalSalesAmount: 0,\n    totalPaidAmount: 0,\n    pendingAmount: 0\n  })\n\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n\n\n  // RECORD PAYMENTS\n\n  const [recordPaymentModal, setRecordPaymentModal] = useState(false);\n  const [recordPayment, setRecordPayment] = useState(initialRecordPaymentState);\n  const [editSales, setEditSales] = useState(false);\n\n\n  const handleOpenRecordPaymentModal = () => {\n    setAnchorEl(null);\n    setRecordPaymentModal(true);\n    setRecordPayment((prev) => ({\n      ...prev, name: tempData.customerId.name,\n      balance: tempData.remainingAmount,\n      salesOrderId: tempData._id\n    }));\n    setTempData({});\n  }\n\n  const handleRecordPayment = () => {\n    const recordPaymentPayload = {};\n\n    recordPaymentPayload.salesOrderId = recordPayment.salesOrderId;\n    recordPaymentPayload.amountToPay = recordPayment.amountToPay;\n    recordPaymentPayload.paymentDate = recordPayment.paymentDate;\n    recordPaymentPayload.paymentMode = recordPayment.paymentMode;\n    if (recordPayment.bank.length > 0) {\n      recordPaymentPayload.bank = recordPayment.bank;\n    };\n\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.recordPayment, recordPaymentPayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order payment recorded successfully!', { variant: 'success' });\n        setRecordPaymentModal(false);\n        setRecordPayment(initialRecordPaymentState);\n        fetchSales();\n        fetchSaleSummary();\n      }).catch((err) => {\n        enqueueSnackbar(err.error, { variant: 'error' });\n      })\n\n  }\n\n  const fetchCustomers = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.customer.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setCustomers(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch customers!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchEmployeesData = async () => {\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.employee.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setEmployees(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch employees!', { variant: 'error' });\n    }\n  };\n\n  const fetchProducts = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.product.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setProducts(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch products!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchProductsCategory = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.product.category.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setCategories(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch Categories!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchOffers = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.offer.list, { status: ['LIVE'] }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setOffers(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch offers!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchSales = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.sales.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setIsSalesLoading(false);\n        setSalesList(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch sales orders!', { variant: 'error' });\n      setIsSalesLoading(false);\n    }\n  };\n\n  const fetchBanks = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.bank.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setBanks(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch bank accounts!', { variant: 'error' });\n    }\n  };\n\n  const fetchSaleSummary = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.get(endpoints.sales.summary, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setSaleSummary({\n          totalSalesAmount: response.data.data.totalSalesAmount,\n          totalPaidAmount: response.data.data.totalPaidAmount,\n          pendingAmount: response.data.data.pendingAmount\n        })\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch bank accounts!', { variant: 'error' });\n    }\n  };\n\n  useEffect(() => {\n    setIsSalesLoading(true);\n    fetchSales();\n    fetchSaleSummary();\n    fetchCustomers();\n    fetchEmployeesData();\n    fetchProducts();\n    // fetchProductsCategory();\n    fetchOffers();\n    fetchBanks();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const columns = [\n    {\n      name: 'Customer Name',\n      selector: row => row.customerId.name,\n      sortable: 'true',\n      width: '160px',\n    },\n    {\n      name: 'Sales Man Name',\n      selector: row => row.salesManId.name,\n      sortable: 'true',\n      width: '160px',\n    },\n    {\n      name: 'Product Name',\n      selector: row => row.products.length > 1 ? `${row.products[0].name}, & ${row.products.length - 1} more` : row.products[0].name,\n    },\n    {\n      name: 'Amount',\n      selector: row => row.totalAmount.toFixed(2),\n      sortable: 'true',\n    },\n    {\n      name: 'Payment Mode',\n      selector: row => row.payments[0].paymentID.paymentMode,\n      sortable: 'true',\n    },\n    {\n      name: 'Payment Status',\n      selector: row => row.paymentStatus,\n      sortable: 'true',\n    },\n    {\n      name: 'Invoice Number',\n      selector: row => row.invoiceNumber,\n    },\n    {\n      name: 'Voucher Amount',\n      width: \"120px\",\n      selector: row => row.discount.amount === 0 ? 'N/A' : row.discount.amount.toFixed(2),\n    },\n    {\n      name: 'Last Updated',\n      width: \"220px\",\n      selector: row => formatDate(row.updatedAt),\n      sortable: 'true'\n    },\n    {\n      name: 'Actions',\n      width: \"130px\",\n      cell: (row) => (\n        <>\n          <Button onClick={(event) => {\n            setAnchorEl(event.currentTarget);\n            setTempData(row)\n          }} style={{ color: color.actionButton }} variant='outlined' endIcon={<ArrowDropDownIcon />}>Action</Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={handleEdit}>Edit</MenuItem>\n            <MenuItem onClick={() => { }}>Send via Email</MenuItem>\n            <MenuItem onClick={() => { }}>Send via Whatsapp</MenuItem>\n            <MenuItem onClick={() => {\n              setOpenDialog(true);\n              setAnchorEl(null);\n            }}>Delete</MenuItem>\n            {\n              tempData.remainingAmount > 0 &&\n              <MenuItem onClick={() => handleOpenRecordPaymentModal()}>Record Payment</MenuItem>\n            }\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n  const handleDeleteProduct = (row, index) => {\n    console.log('deleting product...', editSales);\n    if (editSales) {\n      setSales((prev) => ({ ...prev, offer: {} }))\n    }\n    const newProducts = [...sales.products];\n    newProducts.splice(index, 1);\n    setSales((prev) => ({ ...prev, products: newProducts }));\n  };\n\n  const handleProductChange = (index, field, fieldValue) => {\n\n    if (field === 'discount') {\n      if (fieldValue < 0) {\n        fieldValue = 0;\n        enqueueSnackbar(`Discount should be between 0 and 100 percent.`, { variant: 'error' })\n      } else if (fieldValue > 100) {\n        fieldValue = 100;\n        enqueueSnackbar(`Discount should be between 0 and 100 percent.`, { variant: 'error' })\n      }\n    };\n\n    // if (field === 'sellingPrice') {\n    //   if (fieldValue < sales.products[index].product.sellingPrice) {\n    //     fieldValue = sales.products[index].product.sellingPrice;\n    //     console.log(\"fieldValue\", fieldValue)\n    //     enqueueSnackbar(`The product price cannot be lower than its selling price of ${format(sales.products[index].product.sellingPrice)}!`, { variant: 'error' })\n    //   };\n    // };\n\n    // Check for quantity field as well\n    if (field === 'quantity') {\n\n      if (fieldValue > sales.products[index].product.quantity) {\n        fieldValue = sales.products[index].product.quantity;\n        enqueueSnackbar(`There are only ${sales.products[index].product.quantity} units available.`, { variant: 'error' })\n      };\n\n    };\n\n    // Create a copy of the products array\n    const updatedProducts = [...sales.products];\n\n    // Access the specific product by index\n    const product = { ...updatedProducts[index] };\n\n    // Update the field with the new value\n    product[field] = fieldValue;\n\n    // Update the products array with the modified product\n    updatedProducts[index] = product;\n\n    console.log(\"new Product\", updatedProducts[index]);\n\n\n    // Update the state immutably\n    setSales(prevSales => ({\n      ...prevSales,\n      products: updatedProducts\n    }));\n  };\n\n  const handleEdit = () => {\n    setAnchorEl(null);\n    setDiscount(tempData.discount.amount);\n    setPreviouslyPaidAmount(tempData.totalAmount - tempData.remainingAmount);\n\n    const previousProducts = tempData.products.map((product) => {\n      const actualProduct = products.find((prod) => prod.name === product.name);\n      return {\n        product: actualProduct,\n        quantity: product.quantity,\n        sellingPrice: product.sellingPrice,\n        discount: product.discount\n      }\n    })\n    console.log(\"🚀 ~ previousProducts ~ previousProducts:\", previousProducts)\n    setSales(prevSales => ({\n      ...prevSales,\n      customer: tempData.customerId.name,\n      mobileNumber: customers.find((customer) => customer.mobileNumber === tempData.customerId.mobileNumber),\n      salesMan: tempData.salesManId,\n      invoiceDate: dayjs(tempData.invoiceDate),\n      invoiceDueDate: dayjs(tempData.invoiceDueDate),\n      products: previousProducts,\n      // amountToPay: tempData.remainingAmount,\n      // totalAmount: tempData.totalAmount,\n      paymentMode: tempData.payments[tempData.payments.length - 1].paymentID.paymentMode,\n      paymentStatus: tempData.paymentStatus,\n      // bank: tempData.payments[0].paymentID.bank,\n      ...(tempData?.discount?.offer && { offer: tempData.discount.offer.id }) // Conditionally add the offer object\n    }));\n    setEditSales(true);\n    setOpen(true);\n  }\n\n  const handleConfirmDelete = () => {\n\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    axios.post(endpoints.sales.delete, { id: tempData._id }, config)\n      .then((res) => {\n        if (res) {\n          enqueueSnackbar('Sales order deleted successfully!', { variant: 'success' });\n          setOpenDialog(false);\n          setTempData({});\n          fetchSales();\n          fetchSaleSummary();\n        };\n      }).catch((err) => {\n        console.log(err)\n        enqueueSnackbar(err.msg || err.error, { variant: 'error' });\n      })\n  };\n\n  const productColumns = [\n    {\n      name: 'Product Name',\n      selector: row => row?.product?.name ?? row.name,\n\n    },\n    {\n      name: 'Quantity',\n      selector: row => row.quantity,\n      cell: (row, index) => (\n        <TextField\n          autoFocus={index === (sales.products.length - 1)}\n          // disabled={editSales}\n          type='number'\n          onBlur={(e) => {\n            // Create a copy of the products array\n            const updatedProducts = [...sales.products];\n\n            // Access the specific product by index\n            const product = { ...updatedProducts[index] };\n\n            if (!row.quantity || parseInt(row.quantity, 10) <= 0) {\n              enqueueSnackbar(`Quantity cannot be empty`, { variant: 'error' });\n              product.quantity = '1';\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={(e) => handleProductChange(index, 'quantity', e.target.value)}\n          value={row.quantity}\n          size='small'\n        />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'Sell Price',\n      selector: row => row.sellingPrice,\n      cell: (row, index) => (\n        <TextField\n          type='number'\n          // disabled={editSales}\n          onBlur={() => {\n            // Create a copy of the products array\n            const updatedProducts = [...sales.products];\n\n            // Access the specific product by index\n            const product = { ...updatedProducts[index] };\n\n\n            if (!row.sellingPrice || product.product.purchasePrice > parseInt(row.sellingPrice, 10)) {\n              enqueueSnackbar(`The product price cannot be lower than its purchase price of ${format(sales.products[index].product.purchasePrice)}`, { variant: 'error' })\n              // Update the field with the new value\n              product.sellingPrice = String(product.product.purchasePrice);\n\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={(e) => handleProductChange(index, 'sellingPrice', e.target.value)}\n          value={row.sellingPrice}\n          size='small' />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'GST Value',\n      selector: row => row?.product?.gstValue ?? row.gstValue,\n      center: 'true'\n    },\n    {\n      name: 'Discount',\n      selector: row => row.discount,\n      cell: (row, index) => (\n        <TextField value={row.discount}\n          size='small'\n          disabled\n          type='number'\n          onBlur={() => {\n            if (row.discount.length === 0) {\n              // Create a copy of the products array\n              const updatedProducts = [...sales.products];\n\n              // Access the specific product by index\n              const product = { ...updatedProducts[index] };\n\n              // Update the field with the new value\n              product.discount = '0';\n\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={e => handleProductChange(index, 'discount', e.target.value)}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <PercentIcon fontSize='small' />\n              </InputAdornment>\n            ),\n          }} />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'Net Amount',\n      selector: row => {\n        const quantity = parseInt(row.quantity || 0, 10); // Corrected parsing logic\n        const sellingPrice = parseInt(row.sellingPrice || 0, 10); // Corrected parsing logic\n        const netAmount = quantity * sellingPrice;\n        return netAmount;\n      },\n      center: 'true'\n    },\n    {\n      name: 'Actions',\n      cell: (row, index) => (\n        <IconButton\n          // disabled={editSales}\n          onClick={() => handleDeleteProduct(row, index)} color='error' variant='outlined'>\n          <DeleteIcon />\n        </IconButton>\n      ),\n      center: 'true'\n    },\n  ];\n\n  const { format } = new Intl.NumberFormat('hi-In', {\n    style: 'currency',\n    currency: 'INR'\n  });\n\n  const addProductToSales = (newValue) => {\n\n    // Check if the product is already added to sales\n    if (sales.products.find((product) => product.product.name === newValue.name)) {\n      enqueueSnackbar('Product already added!', { variant: 'error' });\n      return;\n    }\n\n    // Check if product quantity is available\n    const existingProduct = products.find((product) => product.name === newValue.name);\n    if (existingProduct && existingProduct.quantity < newValue.quantity) {\n      enqueueSnackbar('Product quantity not available!', { variant: 'error' });\n      return;\n    }\n\n    // Add product to sales\n    const productToAdd = {\n      product: newValue,\n      sellingPrice: newValue.sellingPrice,\n      quantity: 1,\n      category: newValue.category,\n      discount: 0, // In percentage\n      // netAmount: newValue.product.sellingPrice * newValue.quantity\n    };\n\n    setSales((prev) => ({\n      ...prev,\n      products: [...prev.products, productToAdd]\n    }));\n\n    console.log(newValue);\n    setSaleProduct(initialSaleProduct);\n    if (autocompleteRef.current) {\n      autocompleteRef.current.blur();\n    };\n\n    // // Store the index of the last added product\n    // const lastIndex = sales.products.length - 1;\n    // setLastAddedIndex(lastIndex);\n  };\n\n  // Function to calculate the discount\n  function calculateDiscount(product) {\n    const totalAmount = parseInt(!product.sellingPrice ? 0 : product.sellingPrice, 10) * parseInt(!product.quantity ? 0 : product.quantity, 10);\n    const discountAmount = totalAmount * (parseInt(!product.discount ? 0 : product.discount, 10) / 100); // Assuming discount is in percentage\n    return discountAmount;\n  };\n\n  const handleSaveSalesOrder = () => {\n\n    const salesPayload = { ...sales };\n\n    if (typeof sales.mobileNumber === 'string' && sales.mobileNumber.length < 10) {\n      enqueueSnackbar('Mobile number must be 10 digits!', { variant: 'error' });\n      return;\n    };\n\n    if (sales.customer.length <= 1) {\n      enqueueSnackbar('Customer name must be greater than one alphabet!', { variant: 'error' });\n      return;\n    };\n\n    salesPayload.discount = {};\n    salesPayload.discount.productDiscount = productDiscount;\n    salesPayload.discount.amount = parseFloat(discount);\n    if (Object.keys(sales.offer).length > 0) {\n      salesPayload.discount.offer = {};\n      salesPayload.discount.offer.discount = offerDiscount;\n      salesPayload.discount.offer.id = sales.offer;\n    };\n\n    salesPayload.totalDiscount = productDiscount + offerDiscount + parseFloat(discount);\n    salesPayload.totalAmount = totalAmount;\n    console.log(salesPayload)\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.add, salesPayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order created successfully!', { variant: 'success' });\n        setOpen(false);\n        handleClearAllStates();\n        fetchSales();\n        fetchSaleSummary();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.err, { variant: 'error' });\n      })\n\n  };\n\n  const handleUpdateSalesOrder = () => {\n    if (totalAmount < previouslyPaidAmount) {\n      enqueueSnackbar(`Order Amount Must be greater than ${format(previouslyPaidAmount)}!`, { variant: 'error' });\n      return;\n    };\n\n    if (balanceAmount !== 0) {\n      if (sales.amountToPay === '' || parseFloat(sales.amountToPay) === 0) {\n        enqueueSnackbar(`Amount to pay cannot be empty or 0!.`, { variant: 'error' });\n        return;\n      };\n      if (parseFloat(sales.amountToPay) > (totalAmount - previouslyPaidAmount)) {\n        enqueueSnackbar(`Amount to pay cannot be greater than ${format(totalAmount - previouslyPaidAmount)}!`, { variant: 'error' });\n        return;\n      };\n    }\n\n    console.log(\"sales.amountToPay\", sales.amountToPay)\n\n    const updatePayload = { ...sales };\n    updatePayload.discount = {};\n    updatePayload.discount.productDiscount = productDiscount;\n    updatePayload.discount.amount = parseFloat(discount);\n    if (Object.keys(sales.offer).length > 0) {\n      updatePayload.discount.offer = {};\n      updatePayload.discount.offer.discount = offerDiscount;\n      updatePayload.discount.offer.id = sales.offer;\n    };\n    updatePayload.products = sales.products;\n    updatePayload.balanceAmount = balanceAmount;\n    updatePayload.totalDiscount = productDiscount + offerDiscount + parseFloat(discount);\n    updatePayload.totalAmount = totalAmount;\n    updatePayload.paymentStatus = sales.paymentStatus;\n    updatePayload.id = tempData._id;\n\n    delete updatePayload.offer;\n    delete updatePayload.invoiceDueDate;\n    delete updatePayload.salesMan;\n    delete updatePayload.customer;\n    delete updatePayload.invoiceDate;\n    delete updatePayload.mobileNumber;\n    console.log({ updatePayload });\n\n\n\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.update, updatePayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order updated successfully!', { variant: 'success' });\n        setOpen(false);\n        setTempData({});\n        handleClearAllStates();\n        fetchSales();\n        setEditSales(false);\n        fetchSaleSummary();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.err, { variant: 'error' });\n      })\n  }\n\n  const productDiscount = sales.products.reduce((total, product) => {\n    const discountAmount = calculateDiscount(product);\n    return total + discountAmount;\n  }, 0)\n\n  const netTotalAmountWithGST = sales.products.reduce((total, product) => {\n    const sellingPrice = parseInt(!product.sellingPrice ? 0 : product.sellingPrice, 10);\n    const quantity = parseInt(!product.quantity ? 0 : product.quantity, 10);\n    // const gstPercentage = parseFloat(product.product.gstValue); // Assuming gstValue is a string representing percentage\n    const netAmount = sellingPrice * quantity;\n    // const gstAmount = (netAmount * gstPercentage) / 100;\n    // const totalAmountWithGST = netAmount + gstAmount;\n    const totalAmountWithGST = netAmount;\n    return total + totalAmountWithGST;\n  }, 0);\n\n\n  let offerDiscount = 0;\n  if (Object.keys(sales.offer).length > 0) {\n    if (sales.offer.type === 'PERCENTAGE') {\n      offerDiscount = (netTotalAmountWithGST * sales.offer.typeValue) / 100;\n    } else {\n      offerDiscount = sales.offer.typeValue;\n    }\n  }\n\n  let totalAmount = netTotalAmountWithGST - (productDiscount + Number(offerDiscount)) - parseFloat(discount !== '' ? discount : 0);\n\n  // if (editSales) {\n  //   totalAmount -= previouslyPaidAmount;\n  // };\n\n  let balanceAmount = 0;\n  if (sales.amountToPay) {\n    balanceAmount = totalAmount - sales.amountToPay;\n    if (editSales) {\n      balanceAmount -= previouslyPaidAmount;\n    };\n  };\n\n\n\n\n  const filteredSales = salesList.filter((salesData) =>\n    salesData?.customerId.name?.toLowerCase().includes(searchQuery?.toLowerCase()) ||\n    salesData?.invoiceNumber?.toLowerCase().includes(searchQuery?.toLowerCase())\n  );\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Sales </Typography>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\", marginTop: \"20px\" }}>\n        <Stack direction=\"row\" spacing={1}>\n          <Chip\n            label={`Total  ${formatObj.format(salesSummary.totalSalesAmount)}`}\n            variant=\"outlined\"\n          />\n          <Chip\n            label={`Paid  ${formatObj.format(salesSummary.totalPaidAmount)}`}\n            variant=\"outlined\"\n          />\n          <Chip\n            label={`Pending  ${formatObj.format(salesSummary.pendingAmount)}`}\n            variant=\"outlined\"\n          />\n        </Stack>\n\n        <Stack>\n          <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={handleOpen}>\n            CREATE SALES ORDER\n          </Button>\n\n\n        </Stack>\n      </div >\n\n      <div style={{ marginTop: \"20px\" }}>\n        <div style={{ display: \"flex\", flexDirection: 'row', alignItems: \"center\", gap: \"10px\" }}>\n          <div style={{ display: \"flex\", marginTop: \"8px\" }}>\n            <TextField\n              placeholder='Search'\n              size='small'\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div>\n            <LocalizationProvider dateAdapter={AdapterDayjs} >\n              <DemoContainer\n                components={['SingleInputDateRangeField']}\n              >\n                <SingleInputDateRangeField\n                  size='small'\n                  label=\"Date Range\"\n                  value={value}\n                  onChange={(newValue) => setValue(newValue)}\n                />\n              </DemoContainer>\n            </LocalizationProvider>\n          </div>\n        </div>\n\n\n        <div style={{ marginTop: \"20px\" }}>\n          <DataTable\n            columns={columns}\n            data={filteredSales}\n            pagination\n            progressPending={isSalesLoading}\n          />\n        </div>\n      </div>\n\n      {/* <Button onClick={() => {\n        // window.location.href = `mailto:rsaiprasad4@gmail.com?subject=Shared Content&body=Hii hello`;\n        window.location.href = `https://wa.me/+919922466094?text=Hiii Sourav`;\n      }}>\n        Send Via Email\n      </Button> */}\n\n\n      {/* Sales Modal */}\n      <Modal\n        open={open}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\" }}>\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', gap: '15px' }}>\n              <Autocomplete\n                disabled={editSales}\n                value={sales.mobileNumber}\n                options={customers}\n                fullWidth\n                getOptionLabel={(option) => {\n                  if (typeof option === 'string') {\n                    return option;\n                  }\n                  return option.mobileNumber;\n                }}\n                selectOnFocus\n                onChange={(event, newValue) => {\n                  console.log({ newValue });\n                  console.log('event calling and changing value from options')\n                  if (newValue) {\n                    setSales((prev) => ({ ...prev, mobileNumber: newValue, customer: newValue.name }));\n                  } else {\n                    setSales((prev) => ({ ...prev, mobileNumber: null, customer: '' }));\n                  }\n                }}\n                onInputChange={(event, newInputValue) => {\n                  // Check if the input value is a new mobile number\n                  const isNewMobileNumber = !customers.some((customer) => customer.mobileNumber === newInputValue);\n                  if (isNewMobileNumber) {\n                    console.log('Mobile number new ');\n                    // If it's a new mobile number, clear the customer name\n                    setSales((prev) => ({ ...prev, mobileNumber: newInputValue, customer: '' }));\n                  } else {\n                    // If it's an existing mobile number, find and set the customer name\n                    const selectedCustomer = customers.find((customer) => customer.mobileNumber === newInputValue);\n                    setSales((prev) => ({ ...prev, mobileNumber: newInputValue, customer: selectedCustomer.name }));\n                  }\n                }}\n                onBlur={(e) => {\n                  const { mobileNumber } = sales;\n                  if (typeof mobileNumber === 'string') {\n                    if (/^\\d+$/.test(mobileNumber)) {\n                      // If all characters are digits, slice the first 10 characters\n                      setSales((prev) => ({ ...prev, mobileNumber: mobileNumber.slice(0, 10) }));\n                      // enqueueSnackbar('Mobile number must be 10 digits only!', { variant: 'error' });\n                    } else {\n                      // If input contains non-digit characters, clear the value and show an error message\n                      setSales((prev) => ({ ...prev, mobileNumber: '' }));\n                      enqueueSnackbar('Mobile number must be numerical digits only!', { variant: 'error' });\n                    }\n                  }\n                }}\n                freeSolo\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Mobile Number\" fullWidth />\n                )}\n              />\n              <TextField\n                label='Customer Name'\n                disabled={editSales}\n                value={sales.customer}\n                onBlur={(e) => {\n                  const customerName = sales.customer;\n                  if (/\\d/.test(customerName)) {\n                    // If customerName contains digits, clear the value\n                    setSales((prev) => ({ ...prev, customer: '' }));\n                    enqueueSnackbar('Customer name cannot contain digits!', { variant: 'error' });\n                  }\n                }}\n                fullWidth\n                onChange={(e) => {\n                  setSales((prev) => ({ ...prev, customer: e.target.value }));\n                }}\n              />\n\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', gap: '15px' }}>\n\n              <Autocomplete\n                value={sales.salesMan}\n                disabled={editSales}\n                options={employees}\n                getOptionLabel={(prop) => prop.name}\n                fullWidth\n                onChange={(event, newValue) => {\n                  setSales((prev) => ({ ...prev, salesMan: newValue }))\n                }}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Sales Man\" fullWidth />\n                )}\n              />\n              <LocalizationProvider dateAdapter={AdapterDayjs} >\n                <DatePicker\n\n                  label=\"Invoice Date\"\n                  value={sales.invoiceDate}\n                  onChange={(newValue) => {\n                    setSales((prev) => ({ ...prev, invoiceDate: newValue }))\n                  }}\n                  format=\"DD/MM/YYYY\"\n                  disabled={editSales}\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider>\n              {/* <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                  label=\"Invoice Due Date\"\n                  format=\"DD/MM/YYYY\"\n                  value={sales.invoiceDueDate}\n                  minDate={sales.invoiceDate}\n                  onChange={(newValue) => {\n                    setSales((prev) => ({ ...prev, invoiceDueDate: newValue }))\n                  }}\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider> */}\n            </div>\n\n          </div>\n\n\n\n          {/* Second Row */}\n          <Grid container sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: \"flex\", justifyContent: 'space-between' }} alignItems='center'>\n            <Grid item xs={12} md={12} display='flex'>\n              {/* <FormControl sx={{ width: \"35%\" }} >\n                <InputLabel id=\"demo-simple-select-label\">All Categories</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  label='All Categories'\n                  value={saleProduct.category}\n                  onChange={(e) => {\n                    setSaleProduct((prev) => ({ ...prev, category: e.target.value, product: null, quantity: null }))\n                  }}\n                  disabled={editSales}\n                >\n                  <MenuItem value='All Categories'>All Categories</MenuItem>\n                  {\n                    categories.map((catgy, index) => (\n                      <MenuItem key={index} value={catgy.name}>{catgy.name}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl> */}\n\n\n              <Autocomplete\n                options={products.filter((product) => {\n                  if (saleProduct.category && saleProduct.category !== 'All Categories') {\n                    return product.category.name === saleProduct.category;\n                  }\n                  return true; // Include all products if no category selected or if 'All Categories' is selected\n                })}\n                value={saleProduct?.product ?? null}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    setSaleProduct((prev) => ({ ...prev, product: newValue }));\n                    addProductToSales(newValue);\n                  } else {\n                    setSaleProduct((prev) => ({ ...prev, product: null }));\n                  }\n                }}\n                // disabled={editSales}\n                getOptionLabel={(option) => option?.name}\n                fullWidth\n                renderInput={(params) => (\n                  <TextField {...params} inputRef={autocompleteRef} label=\"Search Products\" fullWidth />\n                )}\n              />\n            </Grid>\n\n            {/* <Grid item xs={12} md={2}>\n              <TextField\n                label='Quantity'\n                type='number'\n                disabled={editSales}\n                onChange={(e) => setSaleProduct((prev) => ({ ...prev, quantity: e.target.value }))}\n                value={saleProduct.quantity}\n              />\n            </Grid>\n            <Grid item xs={12} md={2} >\n              <Button\n                startIcon={<AddIcon />}\n                disabled={\n                  saleProduct.product === null\n                  || saleProduct.quantity === null ||\n                  saleProduct.quantity <= 0\n                }\n                variant='contained'\n                color='primary'\n                onClick={addProductToSales}\n                fullWidth\n              >\n                ADD TO ORDER\n              </Button>\n            </Grid> */}\n          </Grid>\n\n\n          {\n            sales.products.length > 0 &&\n\n            <Grid container sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", }} alignItems='center'>\n              <Grid item xs={12}>\n                <DataTable\n                  columns={productColumns}\n                  data={sales.products}\n                />\n              </Grid>\n              <Grid item xs={12} display='flex' justifyContent='flex-end' sx={{ mt: 2 }}>\n\n                <div style={{ width: '200px' }}>\n                  <div>\n                    Voucher\n                  </div>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <TextField\n                      fullWidth\n                      size='small'\n                      type='number'\n                      label=\"Enter Discount\"\n                      disabled={Object.keys(sales.offer).length > 0}\n                      onBlur={(e) => {\n                        if (discount === '') {\n                          setDiscount(0);\n                        };\n                        if (parseFloat(discount) > netTotalAmountWithGST) {\n                          setDiscount();\n                          enqueueSnackbar('Discount cannot be greater than total amount!', { variant: 'error' });\n                        };\n                      }}\n                      value={discount}\n                      onChange={(e) => {\n                        if (Object.keys(sales.offer).length > 0) {\n                          setSales((prev) => ({ ...prev, offer: {} }))\n                        };\n                        setDiscount(e.target.value)\n                      }}\n                    />\n                  </div>\n                </div>\n\n              </Grid>\n              <ListItemText primary='OR' sx={{ display: 'flex', justifyContent: \"flex-end\", marginRight: '100px', mt: 0.5 }} />\n              {console.log(\"sales.offer\", sales.offer)}\n              <Grid item xs={12} display='flex' justifyContent='flex-end' sx={{ mt: 0.5 }}>\n                <div style={{ width: '200px' }} >\n                  {/* \n                  {\n                    !editSales && */}\n                  <div>\n                    Select Offer\n                  </div>\n                  {/* } */}\n\n                  <div style={{ paddingTop: \"5px\" }}>\n                    {\n                      Object.keys(sales?.offer).length > 0\n                        ? <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <Chip variant='contained' color='primary' label={`Offer Applied : ${sales.offer.code}`} onDelete={() => { setSales((prev) => ({ ...prev, offer: {} })) }} />\n                          <Typography variant='caption' gutterBottom >\n                            {\n                              sales.offer.type === 'PERCENTAGE' ?\n                                `${sales.offer.typeValue}% Off` :\n                                `${format(sales.offer.typeValue)} Off`\n                            }\n                          </Typography>\n                        </div>\n                        :\n                        <div style={{ paddingTop: \"5px\" }}>\n                          <FormControl fullWidth size=\"small\">\n                            <InputLabel id=\"demo-simple-select-label\">Select Offer</InputLabel>\n                            <Select\n                              disabled={discount}\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              label='Select Offer'\n                              value={sales.offer ?? ''}\n                              onChange={(e) => setSales((prev) => ({ ...prev, offer: e.target.value }))}\n                            >\n                              {/*  Add a enter discount manual field in this menu item it self to discount the user if he does not have to add offer */}\n\n                              {offers.map((offer, i) => (\n                                <MenuItem key={i} value={offer}>{offer.code}</MenuItem>\n                              ))}\n                            </Select>\n                          </FormControl>\n                        </div>\n                    }\n                  </div>\n\n\n                </div>\n              </Grid>\n            </Grid>\n          }\n\n          <Grid container display='flex' justifyContent='flex-end'>\n            <Grid item xs={12} md={6} lg={6} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", }}>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div>Product Discount</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(discount)\n                  }</div>\n                </div>\n\n                {\n                  Object.keys(sales.offer).length !== 0 ?\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                      <div>Offer Discount</div>\n                      <div>{\n                        format(offerDiscount)\n                      }</div>\n                    </div>\n                    : null\n                }\n\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div>Total Amount</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(netTotalAmountWithGST)\n                  }</div>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container display='flex' justifyContent='flex-end'>\n            <Grid item xs={12} md={6} lg={6} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: 'flex', flexDirection: 'column', gap: '10px' }}>\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }} >\n                {/* <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Mode'\n                    value={sales.paymentMode}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      common.paymentMode.map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl> */}\n                <TextField\n                  fullWidth\n                  disabled={editSales}\n                  size='small'\n                  type='number'\n                  label=\"Enter Amount\"\n                  onBlur={(e) => {\n                    console.log(\"totalAmount\",totalAmount)\n                    if (parseFloat(sales.amountToPay) > totalAmount) {\n                      enqueueSnackbar('Amount to pay cannot be greater than total amount!', { variant: 'error' });\n                      setSales((prev) => ({ ...prev, amountToPay: 0 }));\n                    };\n                  }}\n                  value={sales.amountToPay}\n                  onChange={(e) => {\n                    setSales((prev) => ({ ...prev, amountToPay: e.target.value }));\n                  }}\n                />\n\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Status</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Status'\n                    value={sales.paymentStatus}\n                    disabled={editSales}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentStatus: e.target.value }))}\n                  >\n                    {\n                      common.paymentStatus.map((paymentStatus, index) => (\n                        <MenuItem key={index} value={paymentStatus}>{paymentStatus}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }} >\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Mode'\n                    value={sales.paymentMode}\n                    disabled={editSales}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      [\n                        'CASH',\n                        'CARD',\n                        'UPI',\n                        'CHEQUE',\n                      ].map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n\n\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Bank</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Bank'\n                    value={sales.bank}\n                    disabled={\n                      editSales ||\n                      (sales.paymentMode === 'CASH')}\n                    onChange={(e) => setSales((prev) => ({ ...prev, bank: e.target.value }))}\n                  >\n                    {\n                      banks.map((bank, index) => (\n                        <MenuItem key={index} value={bank._id} >{bank.bankName}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n            </Grid>\n\n          </Grid>\n\n          <Grid container  >\n            <Grid item xs={12} md={12} lg={12} sx={{ backgroundColor: \"white\", p: \"15px\", borderRadius: \"10px\" }} display='flex' justifyContent='space-between' alignItems='center'>\n              <div style={{ display: 'flex', justifyContent: 'flex-start', gap: '20px' }}>\n\n                <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '40px' }}>\n                  <div>Total  :</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(totalAmount)\n                  }</div>\n                </div>\n                <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '40px' }}>\n                  <div>Balance  :</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(balanceAmount)\n                  }</div>\n                </div>\n\n                {\n                  editSales &&\n                  <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '40px' }}>\n                    <div>Previously Paid  :</div>\n                    <div>{\n                      sales.products.length === 0 ?\n                        format(0) :\n                        format(previouslyPaidAmount)\n                    }</div>\n                  </div>\n                }\n              </div>\n\n              <div style={{ display: 'flex', gap: '10px' }}>\n\n                {\n                  editSales ?\n                    <Button variant='contained'\n                      onClick={handleUpdateSalesOrder}\n                      color='primary' disabled={\n                        !sales.paymentStatus\n                      } >UPDATE</Button>\n\n                    :\n                    <Button variant='contained'\n                      onClick={handleSaveSalesOrder}\n                      color='primary' disabled={\n                        !sales.customer ||\n                        !sales.mobileNumber ||\n                        !sales.salesMan ||\n                        sales.products.length === 0 ||\n                        !sales.amountToPay ||\n                        !sales.paymentMode ||\n                        !sales.paymentStatus ||\n                        (\n                          sales.paymentMode !== 'CASH' && !sales.bank\n                        )\n                      } >SAVE</Button>\n                }\n\n\n\n\n                <Button variant='contained' color='error' onClick={handleClose}>CANCEL</Button>\n              </div>\n            </Grid>\n          </Grid>\n\n        </Box>\n      </Modal>\n\n\n\n\n\n      {/* RECORD PAYMENT MODAL  */}\n      <Modal id=\"paymentModal\"\n        open={recordPaymentModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={styleForRecordPayment}>\n          <Grid container sx={{ display: 'flex', flexDirection: 'column', gap: '10px' }} >\n            <Grid item xs={12}>\n              <Typography variant='h6'>Customer Details</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Name'\n                value={recordPayment.name}\n                disabled\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Balance'\n                value={recordPayment.balance}\n                disabled\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6'>Payment Details</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Amount To Pay'\n                value={recordPayment.amountToPay}\n                onBlur={\n                  () => {\n                    if (recordPayment.amountToPay > recordPayment.balance) {\n                      enqueueSnackbar('Amount to pay cannot be greater than balance!', { variant: 'error' });\n                      setRecordPayment((prev) => ({ ...prev, amountToPay: recordPayment.balance }));\n                    }\n                  }\n                }\n                onChange={(e) => setRecordPayment((prev) => ({ ...prev, amountToPay: e.target.value }))}\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12} >\n              <LocalizationProvider dateAdapter={AdapterDayjs} >\n                <DatePicker\n\n                  label=\"Payment Date\"\n                  value={recordPayment.paymentDate}\n                  maxDate={dayjs(new Date())}\n                  onChange={(newValue) => {\n                    setRecordPayment((prev) => ({ ...prev, paymentDate: newValue }))\n                  }}\n                  sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                  format=\"DD/MM/YYYY\"\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth >\n                <InputLabel id=\"record-payment-mode\">Select Payment Mode</InputLabel>\n                <Select\n                  labelId=\"record-payment-mode\"\n                  id=\"demo-simple-select\"\n                  label='Select Payment Mode'\n                  sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                  value={recordPayment.paymentMode}\n                  onChange={(e) => setRecordPayment((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                >\n                  {\n                    [\n                      'CASH',\n                      'CARD',\n                      'UPI',\n                      'CHEQUE',\n                    ].map((paymentMode, index) => (\n                      <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {\n              recordPayment.paymentMode !== 'CASH' &&\n              <Grid item xs={12}>\n                <FormControl fullWidth >\n                  <InputLabel id=\"select-bank\">Select Bank</InputLabel>\n                  <Select\n                    labelId=\"select-bank\"\n                    id=\"demo-simple-select\"\n                    label='Select Bank'\n                    value={recordPayment.bank}\n                    sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                    onChange={(e) => setRecordPayment((prev) => ({ ...prev, bank: e.target.value }))}\n                  >\n                    {\n                      banks.map((bank, index) => (\n                        <MenuItem key={index} value={bank._id} >{bank.bankName}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </Grid>\n            }\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleRecordPayment}\n                disabled={\n                  !recordPayment.amountToPay ||\n                  !recordPayment.paymentMode ||\n                  (recordPayment.paymentMode !== 'CASH' && !recordPayment.bank)\n                }\n              >\n                Update Payment\n              </Button>\n              <Button\n                variant='contained'\n                color='error'\n                onClick={() => {\n                  setRecordPaymentModal(false);\n                  setRecordPayment(initialRecordPaymentState);\n                }}\n              >\n                Cancel\n              </Button>\n\n            </Grid>\n\n          </Grid>\n        </Box>\n      </Modal>\n\n\n\n      {/* Dialog For Delete */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle>Remove</DialogTitle>\n        <DialogContent>\n          Are you sure you want to delete this sales order?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {\n            setOpenDialog(false);\n            setTempData({});\n          }}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} variant=\"contained\" color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/one/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard : Sales</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.5 11C9.43 11 11 9.43 11 7.5S9.43 4 7.5 4 4 5.57 4 7.5 5.57 11 7.5 11m0-5C8.33 6 9 6.67 9 7.5S8.33 9 7.5 9 6 8.33 6 7.5 6.67 6 7.5 6M4.0025 18.5832 18.59 3.9955l1.4142 1.4143L5.4167 19.9974zM16.5 13c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5m0 5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5\"\n}), 'Percent');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { textFieldClasses } from '@mui/material/TextField';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getChildTypeFromChildName = childName => {\n  if (childName.match(/^([A-Za-z]+)Range(Calendar|Clock)$/)) {\n    return 'multi-panel-UI-view';\n  }\n  if (childName.match(/^([A-Za-z]*)(DigitalClock)$/)) {\n    return 'Tall-UI-view';\n  }\n  if (childName.match(/^Static([A-Za-z]+)/) || childName.match(/^([A-Za-z]+)(Calendar|Clock)$/)) {\n    return 'UI-view';\n  }\n  if (childName.match(/^MultiInput([A-Za-z]+)RangeField$/) || childName.match(/^([A-Za-z]+)RangePicker$/)) {\n    return 'multi-input-range-field';\n  }\n  if (childName.match(/^SingleInput([A-Za-z]+)RangeField$/)) {\n    return 'single-input-range-field';\n  }\n  return 'single-input-field';\n};\nconst getSupportedSectionFromChildName = childName => {\n  if (childName.includes('DateTime')) {\n    return 'date-time';\n  }\n  if (childName.includes('Date')) {\n    return 'date';\n  }\n  return 'time';\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoItem(props) {\n  const {\n    label,\n    children,\n    component\n  } = props;\n  let spacing;\n  let sx;\n  if (component && getChildTypeFromChildName(component) === 'multi-input-range-field') {\n    spacing = 1.5;\n    sx = {\n      [`& .${textFieldClasses.root}`]: {\n        flexGrow: 1\n      }\n    };\n  } else {\n    spacing = 1;\n    sx = undefined;\n  }\n  return /*#__PURE__*/_jsxs(Stack, {\n    direction: \"column\",\n    alignItems: \"stretch\",\n    spacing: spacing,\n    sx: sx,\n    children: [label && /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      children: label\n    }), children]\n  });\n}\n\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoContainer(props) {\n  const {\n    children,\n    components,\n    sx: sxProp\n  } = props;\n  const childrenTypes = new Set();\n  const childrenSupportedSections = new Set();\n  components.forEach(childName => {\n    childrenTypes.add(getChildTypeFromChildName(childName));\n    childrenSupportedSections.add(getSupportedSectionFromChildName(childName));\n  });\n  const getSpacing = direction => {\n    if (direction === 'row') {\n      return childrenTypes.has('UI-view') || childrenTypes.has('Tall-UI-view') ? 3 : 2;\n    }\n    return childrenTypes.has('UI-view') ? 4 : 3;\n  };\n  let direction;\n  let spacing;\n  let sx = _extends({\n    overflow: 'auto',\n    // Add padding as overflow can hide the outline text field label.\n    pt: 1\n  }, sxProp);\n  if (components.length > 2 || childrenTypes.has('multi-input-range-field') || childrenTypes.has('single-input-range-field') || childrenTypes.has('multi-panel-UI-view') || childrenTypes.has('UI-view') || childrenSupportedSections.has('date-time')) {\n    direction = 'column';\n    spacing = getSpacing('column');\n  } else {\n    direction = {\n      xs: 'column',\n      lg: 'row'\n    };\n    spacing = {\n      xs: getSpacing('column'),\n      lg: getSpacing('row')\n    };\n  }\n  if (childrenTypes.has('UI-view')) {\n    // noop\n  } else if (childrenTypes.has('single-input-range-field')) {\n    if (!childrenSupportedSections.has('date-time')) {\n      sx = _extends({}, sx, {\n        [`& > .${textFieldClasses.root}`]: {\n          minWidth: 300\n        }\n      });\n    } else {\n      sx = _extends({}, sx, {\n        [`& > .${textFieldClasses.root}`]: {\n          minWidth: {\n            xs: 300,\n            md: 400\n          }\n        }\n      });\n    }\n  } else if (childrenSupportedSections.has('date-time')) {\n    sx = _extends({}, sx, {\n      [`& > .${textFieldClasses.root}`]: {\n        minWidth: 270\n      }\n    });\n  } else {\n    sx = _extends({}, sx, {\n      [`& > .${textFieldClasses.root}`]: {\n        minWidth: 200\n      }\n    });\n  }\n  return /*#__PURE__*/_jsx(Stack, {\n    direction: direction,\n    spacing: spacing,\n    sx: sx,\n    children: children\n  });\n}"],"names":["style","position","top","left","transform","width","bgcolor","color","borderRadius","height","overflowY","boxShadow","display","flexDirection","justifyContent","gap","p","styleForRecordPayment","initialSaleState","customer","mobileNumber","salesMan","invoiceDate","invoiceDueDate","products","offer","amountToPay","totalAmount","productDiscount","paymentMode","paymentStatus","bank","initialSaleProduct","category","product","quantity","netAmount","discount","sellingPrice","initialRecordPaymentState","salesOrderId","name","balance","paymentDate","dayjs","Date","SalesView","_saleProduct$product","_sales$offer","settings","useSettingsContext","autocompleteRef","useRef","_useState","useState","_useState2","_slicedToArray","setDiscount","_useState3","_useState4","previouslyPaidAmount","setPreviouslyPaidAmount","enqueueSnackbar","useSnackbar","_useState5","_useState6","value","setValue","_useState7","_useState8","open","setOpen","handleClearAllStates","setSales","setSaleProduct","prev","_objectSpread","_useState9","_useState10","openDialog","setOpenDialog","_useState11","_useState12","customers","setCustomers","_useState13","_useState14","employees","setEmployees","_useState15","_useState16","_useState17","_useState18","banks","setBanks","_useState19","_useState20","setProducts","_useState21","_useState22","offers","setOffers","_useState23","_useState24","sales","_useState25","_useState26","searchQuery","setSearchQuery","_useState27","_useState28","saleProduct","_useState29","_useState30","isSalesLoading","setIsSalesLoading","_useState31","_useState32","salesList","setSalesList","_useState33","totalSalesAmount","totalPaidAmount","pendingAmount","_useState34","salesSummary","setSaleSummary","_useState35","_useState36","anchorEl","setAnchorEl","openMenu","Boolean","_useState37","_useState38","tempData","setTempData","_useState39","_useState40","recordPaymentModal","setRecordPaymentModal","_useState41","_useState42","recordPayment","setRecordPayment","_useState43","_useState44","editSales","setEditSales","fetchCustomers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","data","t0","variant","stop","apply","arguments","fetchEmployeesData","_ref2","_callee2","_context2","fetchProducts","_ref3","_callee3","_context3","fetchOffers","_ref5","_callee5","_context5","status","fetchSales","_ref6","_callee6","_context6","fetchBanks","_ref7","_callee7","_context7","fetchSaleSummary","_ref8","_callee8","_context8","useEffect","columns","selector","row","customerId","sortable","salesManId","length","toFixed","payments","paymentID","invoiceNumber","amount","formatDate","updatedAt","cell","_jsxs","_Fragment","children","_jsx","Button","onClick","event","currentTarget","endIcon","ArrowDropDownIcon","Menu","id","onClose","MenuListProps","MenuItem","handleEdit","remainingAmount","_id","handleProductChange","index","field","fieldValue","updatedProducts","_toConsumableArray","console","log","prevSales","previousProducts","map","find","prod","_tempData$discount","productColumns","_row$product$name","_row$product","TextField","autoFocus","type","onBlur","e","parseInt","onChange","target","size","center","purchasePrice","format","String","_row$product$gstValue","_row$product2","gstValue","disabled","InputProps","endAdornment","InputAdornment","PercentIcon","fontSize","IconButton","newProducts","splice","handleDeleteProduct","DeleteIcon","Intl","NumberFormat","currency","reduce","total","discountAmount","calculateDiscount","netTotalAmountWithGST","offerDiscount","Object","keys","typeValue","Number","parseFloat","balanceAmount","filteredSales","filter","salesData","_salesData$customerId","_salesData$invoiceNum","toLowerCase","includes","Container","maxWidth","themeStretch","Typography","marginTop","Stack","direction","spacing","Chip","label","formatObj","startIcon","AddIcon","alignItems","placeholder","startAdornment","SearchIcon","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","SingleInputDateRangeField","newValue","DataTable","pagination","progressPending","Modal","Box","sx","backgroundColor","padding","Autocomplete","options","fullWidth","getOptionLabel","option","selectOnFocus","onInputChange","newInputValue","some","selectedCustomer","test","slice","freeSolo","renderInput","params","customerName","prop","DatePicker","slotProps","textField","Grid","container","item","xs","md","existingProduct","productToAdd","current","blur","addProductToSales","inputRef","mt","paddingTop","ListItemText","primary","marginRight","code","onDelete","gutterBottom","FormControl","InputLabel","Select","labelId","i","lg","common","bankName","updatePayload","totalDiscount","then","res","catch","err","error","salesPayload","maxDate","recordPaymentPayload","Dialog","DialogTitle","DialogContent","DialogActions","config","msg","Page","Helmet","OneView","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","_excluded","DialogTitleRoot","styled","slot","overridesResolver","props","styles","root","flex","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","_React$useContext$tit","DialogContext","titleId","_extends","component","clsx","getChildTypeFromChildName","childName","match","sxProp","childrenTypes","Set","childrenSupportedSections","forEach","add","getSupportedSectionFromChildName","getSpacing","has","overflow","pt","_defineProperty","textFieldClasses","minWidth"],"sourceRoot":""}