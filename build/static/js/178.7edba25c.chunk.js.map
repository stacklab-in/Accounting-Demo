{"version":3,"file":"static/js/178.7edba25c.chunk.js","mappings":"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","sources":["sections/reports-management/salesReport.js"],"sourcesContent":["import { Box, Button, Chip, Container, InputAdornment, Menu, MenuItem, Stack, TextField, Typography } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport { color, decryptToken, formatDate, formatObj } from 'src/utils/common';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport { useState, useEffect, useDebugValue } from 'react';\r\nimport { constants } from 'src/utils/constant';\r\nimport axios, { endpoints } from 'src/utils/axios';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\nimport DataTable from 'react-data-table-component';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport dayjs from 'dayjs';\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport * as XLSX from 'xlsx';\r\nimport JsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { saveAs } from 'file-saver';\r\n// sections\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SalesReport() {\r\n    const settings = useSettingsContext();\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [salesList, setSalesList] = useState([]);\r\n    const [tempData, setTempData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [tempList, setTempList] = useState([])\r\n\r\n    // For Actions Dropdown\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n    const fetchSales = async () => {\r\n\r\n        try {\r\n            const decryptedToken = localStorage.getItem(constants.keyUserToken);\r\n            const accessToken = decryptToken(decryptedToken);\r\n            const response = await axios.post(endpoints.sales.list, {}, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                }\r\n            });\r\n            if (response) {\r\n                setIsLoading(false);\r\n                setSalesList(response.data.data);\r\n                setTempData(response.data.data);\r\n                setTempList(response.data.data);\r\n            }\r\n        } catch (err) {\r\n            enqueueSnackbar('Failed to fetch sales orders!', { variant: 'error' });\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        fetchSales();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    const [startDate, setStartDate] = useState(dayjs().startOf('month'));\r\n    const [endDate, setEndDate] = useState(dayjs().endOf('month'));\r\n\r\n    const handleStartDateChange = (date) => {\r\n        setStartDate(date);\r\n    };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        setEndDate(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (startDate && endDate) {\r\n            const filteredSales = tempList.filter((sale) => {\r\n                const saleDate = dayjs(sale.createdAt);\r\n                console.log(startDate, endDate)\r\n                return saleDate.isBetween(startDate, endDate, null, '[]');\r\n            });\r\n            setSalesList(filteredSales);\r\n        } else {\r\n            setSalesList(tempList);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [startDate, endDate])\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Customer Name',\r\n            selector: row => row.customerId.name,\r\n            sortable: 'true',\r\n        },\r\n        {\r\n            name: 'Invoice Number',\r\n            selector: row => row.invoiceNumber,\r\n        },\r\n        {\r\n            name: 'Amount',\r\n            selector: row => row.totalAmount.toFixed(2),\r\n            sortable: 'true',\r\n        },\r\n        {\r\n            name: 'Payment Mode',\r\n            selector: row => row.payments[row.payments.length - 1].paymentID.paymentMode,\r\n            sortable: 'true',\r\n        },\r\n        {\r\n            name: 'Invoice Date',\r\n            selector: row => new Date(row.createdAt).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' }),\r\n            sortable: 'true'\r\n        },\r\n    ];\r\n\r\n    const handleDownloadPDF = () => {\r\n        setAnchorEl(null);\r\n        const doc = new JsPDF();\r\n        doc.text('Sales Report', 10, 10);\r\n    \r\n        // Get table data\r\n        // Transform data and create tableData array\r\n        const tableData = filteredSales.map(item => [\r\n            item.customerId.name || 'N/A',\r\n            item.invoiceNumber || 'N/A',\r\n            item.totalAmount.toFixed(2) || 'N/A',\r\n            item.payments[item.payments.length - 1]?.paymentID?.paymentMode || 'N/A',\r\n            item.createdAt ? formatDate(item.createdAt) : 'N/A'\r\n        ]);\r\n    \r\n        // Set column headers\r\n        const headers = ['Customer Name', 'Invoice Number', 'Amount', 'Payment Mode', 'Time'];\r\n    \r\n        // Add table to PDF\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: tableData,\r\n        });\r\n    \r\n        doc.save('sales_report.pdf');\r\n    };\r\n    \r\n\r\n\r\n    const handleDownloadExcel = () => {\r\n        setAnchorEl(null);\r\n\r\n        // Convert data to a format suitable for Excel\r\n        const excelData = filteredSales.map(item => ({\r\n            'Customer Name': item.customerId.name,\r\n            'Invoice Number': item.invoiceNumber,\r\n            'Amount': item.totalAmount.toFixed(2),\r\n            'Payment Mode': item.payments[item.payments.length - 1]?.paymentID?.paymentMode || 'N/A',\r\n            'Invoice Date': item.createdAt ? formatDate(item.createdAt) : 'N/A'\r\n        }));\r\n\r\n        // Create a new workbook\r\n        const workbook = XLSX.utils.book_new();\r\n        // Convert the data to a worksheet\r\n        const worksheet = XLSX.utils.json_to_sheet(excelData);\r\n        // Add the worksheet to the workbook\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Sales Report');\r\n\r\n        // Convert the workbook to a binary Excel file\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        // Create a Blob from the buffer\r\n        const data = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8' });\r\n        // Save the Blob as a file using file-saver\r\n        saveAs(data, 'sales_report.xlsx');\r\n    };\r\n\r\n    const filteredSales = salesList.filter((salesData) =>\r\n        salesData?.customerId.name?.toLowerCase().includes(searchQuery?.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n            <Helmet>\r\n                <title> Reports: Sales Report</title>\r\n            </Helmet>\r\n\r\n            <Typography variant=\"h4\"> Sales Report </Typography>\r\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\", marginTop: \"20px\" }}>\r\n                <Stack direction=\"row\" spacing={1}>\r\n                    <Chip\r\n                        label={`Total Amount : ${salesList.length > 0 ? formatObj.format(salesList.reduce((accumulator, currentValue) => accumulator + currentValue.totalAmount, 0)) : formatObj.format(0)}`}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Stack>\r\n\r\n                <Stack>\r\n                    <Button style={{ color: color.actionButton }} endIcon={<ArrowDropDownIcon />} variant='outlined' onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                        ACTIONS\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={openMenu}\r\n                        onClose={() => {\r\n                            setAnchorEl(null);\r\n                            setTempData({});\r\n                        }}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n\r\n                        <MenuItem onClick={() => {\r\n                        }}>Print</MenuItem>\r\n\r\n                        <MenuItem onClick={handleDownloadPDF}>Download as PDF</MenuItem>\r\n                        <MenuItem onClick={handleDownloadExcel}>Download as Excel</MenuItem>\r\n\r\n                    </Menu>\r\n                </Stack>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", marginTop: \"8px\", gap: '10px' }}>\r\n                <TextField\r\n                    placeholder='Search'\r\n                    size='small'\r\n                    value={searchQuery}\r\n                    onChange={e => setSearchQuery(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <div>\r\n                    <LocalizationProvider dateAdapter={AdapterDayjs} >\r\n                        <Box sx={{ display: 'flex', flexDirection: 'row', gap: '10px', alignItems: 'center' }}>\r\n                            <DatePicker\r\n                                label=\"From\"\r\n                                format='DD/MM/YYYY'\r\n                                value={startDate}\r\n                                slotProps={{ textField: { size: 'small' } }}\r\n                                onChange={handleStartDateChange}\r\n                                renderInput={(props) => <TextField {...props} />}\r\n                            />\r\n                            <Typography>-</Typography>\r\n                            <DatePicker\r\n                                label=\"To\"\r\n                                format='DD/MM/YYYY'\r\n                                value={endDate}\r\n                                slotProps={{ textField: { size: 'small' } }}\r\n                                onChange={handleEndDateChange}\r\n                                renderInput={(props) => <TextField {...props} />}\r\n                            />\r\n                        </Box>\r\n                    </LocalizationProvider>\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: \"20px\" }}>\r\n                <DataTable\r\n                    columns={columns}\r\n                    data={filteredSales}\r\n                    pagination\r\n                    progressPending={isLoading}\r\n                />\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n"],"names":["SalesReport","settings","useSettingsContext","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","salesList","setSalesList","_useState5","_useState6","setTempData","_useState7","_useState8","searchQuery","setSearchQuery","enqueueSnackbar","useSnackbar","_useState9","_useState10","tempList","setTempList","_useState11","_useState12","anchorEl","setAnchorEl","openMenu","Boolean","fetchSales","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","prev","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","data","t0","variant","stop","apply","arguments","useEffect","_useState13","dayjs","startOf","_useState14","startDate","setStartDate","_useState15","endOf","_useState16","endDate","setEndDate","filteredSales","filter","sale","saleDate","createdAt","console","log","isBetween","columns","name","selector","row","customerId","sortable","invoiceNumber","totalAmount","toFixed","payments","length","paymentID","paymentMode","Date","toLocaleDateString","day","month","year","salesData","_salesData$customerId","toLowerCase","includes","_jsxs","Container","maxWidth","themeStretch","children","_jsx","Helmet","Typography","style","display","flexDirection","justifyContent","marginTop","Stack","direction","spacing","Chip","label","formatObj","reduce","accumulator","currentValue","Button","color","endIcon","ArrowDropDownIcon","onClick","e","currentTarget","Menu","id","open","onClose","MenuListProps","MenuItem","doc","JsPDF","text","tableData","map","item","_item$payments","_item$payments$paymen","formatDate","autoTable","head","body","save","excelData","_item$payments2","_item$payments2$payme","workbook","XLSX","worksheet","excelBuffer","bookType","type","Blob","saveAs","gap","TextField","placeholder","size","value","onChange","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","LocalizationProvider","dateAdapter","AdapterDayjs","Box","sx","alignItems","DatePicker","format","slotProps","textField","date","renderInput","props","_objectSpread","DataTable","pagination","progressPending"],"sourceRoot":""}