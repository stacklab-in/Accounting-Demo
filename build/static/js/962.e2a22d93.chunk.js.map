{"version":3,"file":"static/js/962.e2a22d93.chunk.js","mappings":"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","sources":["sections/three/view.js","pages/dashboard/three.js"],"sourcesContent":["// @mui\nimport { useEffect, useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport DataTable from 'react-data-table-component';\nimport { Button, IconButton, InputAdornment, Menu, MenuItem, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { constants } from 'src/utils/constant';\nimport { useSnackbar } from 'src/components/snackbar';\nimport { decryptToken, color } from 'src/utils/common';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { SingleInputDateRangeField } from '@mui/x-date-pickers-pro/SingleInputDateRangeField';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\n// ----------------------------------------------------------------------\n\nexport default function ReceiptView() {\n  const settings = useSettingsContext();\n  const { enqueueSnackbar } = useSnackbar();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [value, setValue] = useState(() => [\n    dayjs('2022-04-17'),\n    dayjs('2022-04-21'),\n  ]);\n\n  const [data, setData] = useState([]);\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n  const [openDialog, setOpenDialog] = useState(false);\n\n\n  const fetchData = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.receipt.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setIsLoading(false);\n        setData(response.data.data);\n      };\n\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch records!', { variant: 'error' });\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const columns = [\n    {\n      name: 'Invoice Number',\n      selector: (row) => row.invoiceNumber,\n      sortable: true,\n    },\n    {\n      name: 'Amount Paid',\n      selector: (row) => row.amount,\n      sortable: true,\n    },\n    {\n      name: 'Payment Mode',\n      selector: (row) => row.paymentId.paymentMode,\n      sortable: true,\n    },\n    {\n      name: 'Payment Status',\n      selector: (row) => row.paymentId.paymentStatus,\n      sortable: true,\n    },\n    {\n      name: 'Party Type',\n      selector: (row) => row.partyType,\n      sortable: true,\n    },\n    {\n      name: 'Payment Date',\n      selector: (row) => new Date(row.createdAt).toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' }),\n      sortable: true,\n    },\n    {\n      name: 'Actions',\n      width: \"130px\",\n      cell: (row) => (\n        <>\n          <Button onClick={(event) => {\n            setAnchorEl(event.currentTarget);\n            setTempData(row)\n          }} style={{ color: color.actionButton }} variant='outlined' endIcon={<ArrowDropDownIcon />}>Action</Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={() => {\n              setOpenDialog(true);\n              setAnchorEl(null);\n            }}>Delete</MenuItem>\n\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n  const filteredRecords = data.filter((filteredData) => filteredData?.invoiceNumber?.toLowerCase().includes(searchQuery?.toLowerCase()));\n\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Receipts </Typography>\n      <div style={{ display: 'flex', justifyContent: 'start', alignItems: 'center', marginTop: '20px', gap: '10px' }}>\n        <TextField\n          size=\"small\"\n          onChange={(e) => setSearchQuery(e.target.value)}\n          type=\"text\"\n          placeholder=\"Search by invoice number\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <LocalizationProvider dateAdapter={AdapterDayjs} >\n          <SingleInputDateRangeField\n            size='small'\n            label=\"Date Range\"\n            value={value}\n            onChange={(newValue) => setValue(newValue)}\n          />\n        </LocalizationProvider>\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <DataTable\n          columns={columns}\n          data={filteredRecords}\n          pagination\n          progressPending={isLoading}\n        />\n      </div>\n\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ThreeView from 'src/sections/three/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Receipts</title>\n      </Helmet>\n\n      <ThreeView />\n    </>\n  );\n}\n"],"names":["ReceiptView","settings","useSettingsContext","enqueueSnackbar","useSnackbar","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","isLoading","setIsLoading","_useState5","dayjs","_useState6","value","setValue","_useState7","_useState8","data","setData","_useState9","_useState10","anchorEl","setAnchorEl","openMenu","Boolean","_useState11","_useState12","setTempData","_useState13","_useState14","setOpenDialog","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","prev","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","t0","variant","stop","apply","arguments","useEffect","columns","name","selector","row","invoiceNumber","sortable","amount","paymentId","paymentMode","paymentStatus","partyType","Date","createdAt","toLocaleDateString","day","month","year","width","cell","_jsxs","_Fragment","children","_jsx","Button","onClick","event","currentTarget","style","color","endIcon","ArrowDropDownIcon","Menu","id","open","onClose","MenuListProps","MenuItem","filteredRecords","filter","filteredData","_filteredData$invoice","toLowerCase","includes","Container","maxWidth","themeStretch","Typography","display","justifyContent","alignItems","marginTop","gap","TextField","size","onChange","e","target","type","placeholder","InputProps","startAdornment","InputAdornment","position","SearchIcon","LocalizationProvider","dateAdapter","AdapterDayjs","SingleInputDateRangeField","label","newValue","DataTable","pagination","progressPending","Page","Helmet","ThreeView"],"sourceRoot":""}