{"version":3,"file":"static/js/571.d309f872.chunk.js","mappings":"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","sources":["sections/one/view.js","pages/dashboard/one.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Percent.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\n// @mui\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { Button, Chip, Stack, Box, TextField, InputAdornment, Modal, Grid, IconButton, Autocomplete, Select, FormControl, InputLabel, MenuItem, Menu, Dialog, DialogActions, DialogTitle, DialogContent, ListItemText } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport DataTable from 'react-data-table-component';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PercentIcon from '@mui/icons-material/Percent';\nimport { color, common, decryptToken, formatDate, formatObj } from 'src/utils/common';\nimport { constants } from 'src/utils/constant';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { useSnackbar } from 'src/components/snackbar';\nimport { useAuthContext } from 'src/auth/hooks';\n\n// How i can know that dark mode\n\n// \n// ----------------------------------------------------------------------\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '75%',\n  bgcolor: color.modalbackground,\n  borderRadius: '10px',\n  height: \"90%\",\n  overflowY: 'auto',\n  boxShadow: 24,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  gap: '10px',\n  p: 2,\n};\nconst styleForRecordPayment = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '400px',\n  bgcolor: color.modalbackground,\n  borderRadius: '10px',\n  height: \"auto\",\n  boxShadow: 24,\n  p: 2,\n};\n\nconst initialSaleState = {\n  customer: '',\n  mobileNumber: '',\n  salesMan: null,\n  invoiceDate: null,\n  invoiceDueDate: null,\n  products: [],\n  offer: '',\n  amountToPay: '',\n  totalAmount: 0,\n  productDiscount: 0,\n  paymentMode: '',\n  paymentStatus: '',\n  bank: '',\n};\n\nconst initialSaleProduct = {\n  category: 'All Categories',\n  product: null,\n  quantity: '',\n  netAmount: null,\n  discount: null,\n  sellingPrice: null,\n};\n\nconst initialRecordPaymentState = {\n  salesOrderId: '',\n  name: '',\n  balance: 0,\n  amountToPay: 0,\n  paymentMode: '',\n  bank: '',\n  paymentDate: dayjs(new Date()),\n};\n\nexport default function SalesView() {\n  const settings = useSettingsContext();\n  // Create a ref for the Autocomplete component\n  const autocompleteRef = useRef(null);\n  const { user } = useAuthContext();\n  // State to store the index of the last added product\n  const [discount, setDiscount] = useState(0);\n  const [previouslyPaidAmount, setPreviouslyPaidAmount] = useState(0);\n  const { enqueueSnackbar } = useSnackbar();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setSales((prev) => ({ ...prev, invoiceDate: dayjs(new Date()) }))\n    setOpen(true);\n    setEditSales(false);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setEditSales(false);\n    handleClearAllStates();\n  };\n\n  const handleClearAllStates = () => {\n    setSales(initialSaleState);\n    setSaleProduct(initialSaleProduct);\n    setSales((prev) => ({ ...prev, customer: null }));\n    setDiscount(0);\n    setPreviouslyPaidAmount(0);\n  };\n\n  // For Delete Customer\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const [customers, setCustomers] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [banks, setBanks] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [offers, setOffers] = useState([]);\n  const [sales, setSales] = useState(initialSaleState);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [saleProduct, setSaleProduct] = useState(initialSaleProduct)\n  const [isSalesLoading, setIsSalesLoading] = useState(false)\n  const [salesList, setSalesList] = useState([])\n  const [tempList, setTempList] = useState([])\n  const [salesSummary, setSaleSummary] = useState({\n    totalSalesAmount: 0,\n    totalPaidAmount: 0,\n    pendingAmount: 0\n  })\n\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n\n\n  // RECORD PAYMENTS\n\n  const [recordPaymentModal, setRecordPaymentModal] = useState(false);\n  const [recordPayment, setRecordPayment] = useState(initialRecordPaymentState);\n  const [editSales, setEditSales] = useState(false);\n\n\n  const handleOpenRecordPaymentModal = () => {\n    setAnchorEl(null);\n    setRecordPaymentModal(true);\n    setRecordPayment((prev) => ({\n      ...prev, name: tempData.customerId.name,\n      balance: tempData.remainingAmount,\n      salesOrderId: tempData._id\n    }));\n    setTempData({});\n  }\n\n  const handleRecordPayment = () => {\n    const recordPaymentPayload = {};\n\n    recordPaymentPayload.salesOrderId = recordPayment.salesOrderId;\n    recordPaymentPayload.amountToPay = recordPayment.amountToPay;\n    recordPaymentPayload.paymentDate = recordPayment.paymentDate;\n    recordPaymentPayload.paymentMode = recordPayment.paymentMode;\n    if (recordPayment.bank.length > 0) {\n      recordPaymentPayload.bank = recordPayment.bank;\n    };\n\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.recordPayment, recordPaymentPayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order payment recorded successfully!', { variant: 'success' });\n        setRecordPaymentModal(false);\n        setRecordPayment(initialRecordPaymentState);\n        fetchSales();\n        fetchSaleSummary();\n      }).catch((err) => {\n        enqueueSnackbar(err.error, { variant: 'error' });\n      })\n\n  }\n\n  const fetchCustomers = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.customer.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setCustomers(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch customers!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchEmployeesData = async () => {\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.employee.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setEmployees(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch employees!', { variant: 'error' });\n    }\n  };\n\n  const fetchProducts = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.product.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setProducts(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch products!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchProductsCategory = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.product.category.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setCategories(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch Categories!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchOffers = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.offer.list, { status: ['LIVE'] }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setOffers(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch offers!', { variant: 'error' });\n    }\n  };\n\n\n  const fetchSales = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.sales.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setIsSalesLoading(false);\n        setSalesList(response.data.data);\n        setTempList(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch sales orders!', { variant: 'error' });\n      setIsSalesLoading(false);\n    }\n  };\n\n  const fetchBanks = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.bank.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setBanks(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch bank accounts!', { variant: 'error' });\n    }\n  };\n\n  const fetchSaleSummary = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.get(endpoints.sales.summary, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        setSaleSummary({\n          totalSalesAmount: response.data.data.totalSalesAmount,\n          totalPaidAmount: response.data.data.totalPaidAmount,\n          pendingAmount: response.data.data.pendingAmount\n        })\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch bank accounts!', { variant: 'error' });\n    }\n  };\n\n  useEffect(() => {\n    setIsSalesLoading(true);\n    fetchSales();\n    fetchSaleSummary();\n    fetchCustomers();\n    fetchEmployeesData();\n    fetchProducts();\n    // fetchProductsCategory();\n    fetchOffers();\n    fetchBanks();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n\n\n\n  const columns = [\n    {\n      name: 'Customer Name',\n      selector: row => row.customerId.name,\n      sortable: 'true',\n      width: '160px',\n    },\n    {\n      name: 'Sales Man Name',\n      selector: row => row.salesManId.name,\n      sortable: 'true',\n      width: '160px',\n    },\n    {\n      name: 'Product Name',\n      selector: row => row.products.length > 1 ? `${row.products[0].name}, & ${row.products.length - 1} more` : row.products[0].name,\n    },\n    {\n      name: 'Amount',\n      selector: row => row.totalAmount.toFixed(2),\n      sortable: 'true',\n    },\n    {\n      name: 'Payment Mode',\n      selector: row => row.payments[0].paymentID.paymentMode,\n      sortable: 'true',\n    },\n    {\n      name: 'Payment Status',\n      selector: row => row.paymentStatus,\n      sortable: 'true',\n    },\n    {\n      name: 'Invoice Number',\n      selector: row => row.invoiceNumber,\n    },\n    {\n      name: 'Voucher Amount',\n      width: \"120px\",\n      selector: row => row.discount.amount === 0 ? 'N/A' : row.discount.amount.toFixed(2),\n    },\n    {\n      name: 'Last Updated',\n      width: \"220px\",\n      selector: row => formatDate(row.updatedAt),\n      sortable: 'true'\n    },\n    {\n      name: 'Actions',\n      width: \"130px\",\n      cell: (row) => (\n        <>\n          <Button\n            disabled={!user?.permissions?.sales?.u}\n            onClick={(event) => {\n              setAnchorEl(event.currentTarget);\n              setTempData(row)\n            }} style={{ color: color.actionButton }} variant='outlined' endIcon={<ArrowDropDownIcon />}>Action</Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={handleEdit}>Edit</MenuItem>\n            <MenuItem onClick={() => { }}>Send via Email</MenuItem>\n            <MenuItem onClick={() => { }}>Send via Whatsapp</MenuItem>\n            <MenuItem onClick={() => {\n              setOpenDialog(true);\n              setAnchorEl(null);\n            }}>Delete</MenuItem>\n            {\n              tempData.remainingAmount > 0 &&\n              <MenuItem onClick={() => handleOpenRecordPaymentModal()}>Record Payment</MenuItem>\n            }\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n  const handleDeleteProduct = (row, index) => {\n    console.log('deleting product...', editSales);\n    if (editSales) {\n      setSales((prev) => ({ ...prev, offer: {} }))\n    }\n    const newProducts = [...sales.products];\n    newProducts.splice(index, 1);\n    setSales((prev) => ({ ...prev, products: newProducts }));\n  };\n\n  const handleProductChange = (index, field, fieldValue) => {\n\n    if (field === 'discount') {\n      if (fieldValue < 0) {\n        fieldValue = 0;\n        enqueueSnackbar(`Discount should be between 0 and 100 percent.`, { variant: 'error' })\n      } else if (fieldValue > 100) {\n        fieldValue = 100;\n        enqueueSnackbar(`Discount should be between 0 and 100 percent.`, { variant: 'error' })\n      }\n    };\n\n    // if (field === 'sellingPrice') {\n    //   if (fieldValue < sales.products[index].product.sellingPrice) {\n    //     fieldValue = sales.products[index].product.sellingPrice;\n    //     console.log(\"fieldValue\", fieldValue)\n    //     enqueueSnackbar(`The product price cannot be lower than its selling price of ${format(sales.products[index].product.sellingPrice)}!`, { variant: 'error' })\n    //   };\n    // };\n\n    // Check for quantity field as well\n    if (field === 'quantity') {\n\n      if (fieldValue > sales.products[index].product.quantity) {\n        fieldValue = sales.products[index].product.quantity;\n        enqueueSnackbar(`There are only ${sales.products[index].product.quantity} units available.`, { variant: 'error' })\n      };\n\n    };\n\n    // Create a copy of the products array\n    const updatedProducts = [...sales.products];\n\n    // Access the specific product by index\n    const product = { ...updatedProducts[index] };\n\n    // Update the field with the new value\n    product[field] = fieldValue;\n\n    // Update the products array with the modified product\n    updatedProducts[index] = product;\n\n    console.log(\"new Product\", updatedProducts[index]);\n\n\n    // Update the state immutably\n    setSales(prevSales => ({\n      ...prevSales,\n      products: updatedProducts\n    }));\n  };\n\n  const handleEdit = () => {\n    setAnchorEl(null);\n    setDiscount(tempData.discount.amount);\n    setPreviouslyPaidAmount(tempData.totalAmount - tempData.remainingAmount);\n\n    const previousProducts = tempData.products.map((product) => {\n      const actualProduct = products.find((prod) => prod.name === product.name);\n      return {\n        product: actualProduct,\n        quantity: product.quantity,\n        sellingPrice: product.sellingPrice,\n        discount: product.discount\n      }\n    })\n    console.log(\"🚀 ~ previousProducts ~ previousProducts:\", previousProducts)\n    setSales(prevSales => ({\n      ...prevSales,\n      customer: tempData.customerId.name,\n      mobileNumber: customers.find((customer) => customer.mobileNumber === tempData.customerId.mobileNumber),\n      salesMan: tempData.salesManId,\n      invoiceDate: dayjs(tempData.invoiceDate),\n      invoiceDueDate: dayjs(tempData.invoiceDueDate),\n      products: previousProducts,\n      // amountToPay: tempData.remainingAmount,\n      // totalAmount: tempData.totalAmount,\n      paymentMode: tempData.payments[tempData.payments.length - 1].paymentID.paymentMode,\n      paymentStatus: tempData.paymentStatus,\n      // bank: tempData.payments[0].paymentID.bank,\n      ...(tempData?.discount?.offer && { offer: tempData.discount.offer.id }) // Conditionally add the offer object\n    }));\n    setEditSales(true);\n    setOpen(true);\n  }\n\n  const handleConfirmDelete = () => {\n\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    axios.post(endpoints.sales.delete, { id: tempData._id }, config)\n      .then((res) => {\n        if (res) {\n          enqueueSnackbar('Sales order deleted successfully!', { variant: 'success' });\n          setOpenDialog(false);\n          setTempData({});\n          fetchSales();\n          fetchSaleSummary();\n        };\n      }).catch((err) => {\n        console.log(err)\n        enqueueSnackbar(err.msg || err.error, { variant: 'error' });\n      })\n  };\n\n  const productColumns = [\n    {\n      name: 'Product Name',\n      selector: row => row?.product?.name ?? row.name,\n\n    },\n    {\n      name: 'Quantity',\n      selector: row => row.quantity,\n      cell: (row, index) => (\n        <TextField\n          autoFocus={index === (sales.products.length - 1)}\n          // disabled={editSales}\n          type='number'\n          onBlur={(e) => {\n            // Create a copy of the products array\n            const updatedProducts = [...sales.products];\n\n            // Access the specific product by index\n            const product = { ...updatedProducts[index] };\n\n            if (!row.quantity || parseInt(row.quantity, 10) <= 0) {\n              enqueueSnackbar(`Quantity cannot be empty`, { variant: 'error' });\n              product.quantity = '1';\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={(e) => handleProductChange(index, 'quantity', e.target.value)}\n          value={row.quantity}\n          size='small'\n        />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'Sell Price',\n      selector: row => row.sellingPrice,\n      cell: (row, index) => (\n        <TextField\n          type='number'\n          // disabled={editSales}\n          onBlur={() => {\n            // Create a copy of the products array\n            const updatedProducts = [...sales.products];\n\n            // Access the specific product by index\n            const product = { ...updatedProducts[index] };\n\n\n            if (!row.sellingPrice || product.product.purchasePrice > parseInt(row.sellingPrice, 10)) {\n              enqueueSnackbar(`The product price cannot be lower than its purchase price of ${format(sales.products[index].product.purchasePrice)}`, { variant: 'error' })\n              // Update the field with the new value\n              product.sellingPrice = String(product.product.purchasePrice);\n\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={(e) => handleProductChange(index, 'sellingPrice', e.target.value)}\n          value={row.sellingPrice}\n          size='small' />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'GST Value',\n      selector: row => row?.product?.gstValue ?? row.gstValue,\n      center: 'true'\n    },\n    {\n      name: 'Discount',\n      selector: row => row.discount,\n      cell: (row, index) => (\n        <TextField value={row.discount}\n          size='small'\n          disabled\n          type='number'\n          onBlur={() => {\n            if (row.discount.length === 0) {\n              // Create a copy of the products array\n              const updatedProducts = [...sales.products];\n\n              // Access the specific product by index\n              const product = { ...updatedProducts[index] };\n\n              // Update the field with the new value\n              product.discount = '0';\n\n              // Update the products array with the modified product\n              updatedProducts[index] = product;\n\n              // Update the state immutably\n              setSales(prevSales => ({\n                ...prevSales,\n                products: updatedProducts\n              }));\n            }\n          }}\n          onChange={e => handleProductChange(index, 'discount', e.target.value)}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <PercentIcon fontSize='small' />\n              </InputAdornment>\n            ),\n          }} />\n      ),\n      center: 'true'\n    },\n    {\n      name: 'Net Amount',\n      selector: row => {\n        const quantity = parseInt(row.quantity || 0, 10); // Corrected parsing logic\n        const sellingPrice = parseInt(row.sellingPrice || 0, 10); // Corrected parsing logic\n        const netAmount = quantity * sellingPrice;\n        return netAmount;\n      },\n      center: 'true'\n    },\n    {\n      name: 'Actions',\n      cell: (row, index) => (\n        <IconButton\n          // disabled={editSales}\n          onClick={() => handleDeleteProduct(row, index)} color='error' variant='outlined'>\n          <DeleteIcon />\n        </IconButton>\n      ),\n      center: 'true'\n    },\n  ];\n\n  const { format } = new Intl.NumberFormat('hi-In', {\n    style: 'currency',\n    currency: 'INR'\n  });\n\n  const addProductToSales = (newValue) => {\n\n    // Check if the product is already added to sales\n    if (sales.products.find((product) => product.product.name === newValue.name)) {\n      enqueueSnackbar('Product already added!', { variant: 'error' });\n      return;\n    }\n\n    // Check if product quantity is available\n    const existingProduct = products.find((product) => product.name === newValue.name);\n    if (existingProduct && existingProduct.quantity < newValue.quantity) {\n      enqueueSnackbar('Product quantity not available!', { variant: 'error' });\n      return;\n    }\n\n    // Add product to sales\n    const productToAdd = {\n      product: newValue,\n      sellingPrice: newValue.sellingPrice,\n      quantity: 1,\n      category: newValue.category,\n      discount: 0, // In percentage\n      // netAmount: newValue.product.sellingPrice * newValue.quantity\n    };\n\n    setSales((prev) => ({\n      ...prev,\n      products: [...prev.products, productToAdd]\n    }));\n\n    console.log(newValue);\n    setSaleProduct(initialSaleProduct);\n    if (autocompleteRef.current) {\n      autocompleteRef.current.blur();\n    };\n\n    // // Store the index of the last added product\n    // const lastIndex = sales.products.length - 1;\n    // setLastAddedIndex(lastIndex);\n  };\n\n  // Function to calculate the discount\n  function calculateDiscount(product) {\n    const totalAmount = parseInt(!product.sellingPrice ? 0 : product.sellingPrice, 10) * parseInt(!product.quantity ? 0 : product.quantity, 10);\n    const discountAmount = totalAmount * (parseInt(!product.discount ? 0 : product.discount, 10) / 100); // Assuming discount is in percentage\n    return discountAmount;\n  };\n\n  const handleSaveSalesOrder = () => {\n\n    const salesPayload = { ...sales };\n\n    if (typeof sales.mobileNumber === 'string' && sales.mobileNumber.length < 10) {\n      enqueueSnackbar('Mobile number must be 10 digits!', { variant: 'error' });\n      return;\n    };\n\n    if (sales.customer.length <= 1) {\n      enqueueSnackbar('Customer name must be greater than one alphabet!', { variant: 'error' });\n      return;\n    };\n    if(parseFloat(sales.amountToPay) <= 0){\n      enqueueSnackbar('Amount to pay must be greater than 0!', { variant: 'error' });\n      return;\n    }\n\n    salesPayload.discount = {};\n    salesPayload.discount.productDiscount = productDiscount;\n    salesPayload.discount.amount = parseFloat(discount);\n    if (Object.keys(sales.offer).length > 0) {\n      salesPayload.discount.offer = {};\n      salesPayload.discount.offer.discount = offerDiscount;\n      salesPayload.discount.offer.id = sales.offer;\n    };\n\n    salesPayload.totalDiscount = productDiscount + offerDiscount + parseFloat(discount);\n    salesPayload.totalAmount = totalAmount;\n    console.log(salesPayload)\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.add, salesPayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order created successfully!', { variant: 'success' });\n        setOpen(false);\n        handleClearAllStates();\n        fetchSales();\n        fetchSaleSummary();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.err, { variant: 'error' });\n      })\n\n  };\n\n  const handleUpdateSalesOrder = () => {\n    if (totalAmount < previouslyPaidAmount) {\n      enqueueSnackbar(`Order Amount Must be greater than ${format(previouslyPaidAmount)}!`, { variant: 'error' });\n      return;\n    };\n\n    if (balanceAmount !== 0) {\n      if (sales.amountToPay === '' || parseFloat(sales.amountToPay) === 0) {\n        enqueueSnackbar(`Amount to pay cannot be empty or 0!.`, { variant: 'error' });\n        return;\n      };\n      if (parseFloat(sales.amountToPay) > (totalAmount - previouslyPaidAmount)) {\n        enqueueSnackbar(`Amount to pay cannot be greater than ${format(totalAmount - previouslyPaidAmount)}!`, { variant: 'error' });\n        return;\n      };\n    }\n\n    console.log(\"sales.amountToPay\", sales.amountToPay)\n\n    const updatePayload = { ...sales };\n    updatePayload.discount = {};\n    updatePayload.discount.productDiscount = productDiscount;\n    updatePayload.discount.amount = parseFloat(discount);\n    if (Object.keys(sales.offer).length > 0) {\n      updatePayload.discount.offer = {};\n      updatePayload.discount.offer.discount = offerDiscount;\n      updatePayload.discount.offer.id = sales.offer;\n    };\n    updatePayload.products = sales.products;\n    updatePayload.balanceAmount = balanceAmount;\n    updatePayload.totalDiscount = productDiscount + offerDiscount + parseFloat(discount);\n    updatePayload.totalAmount = totalAmount;\n    updatePayload.paymentStatus = sales.paymentStatus;\n    updatePayload.id = tempData._id;\n\n    delete updatePayload.offer;\n    delete updatePayload.invoiceDueDate;\n    delete updatePayload.salesMan;\n    delete updatePayload.customer;\n    delete updatePayload.invoiceDate;\n    delete updatePayload.mobileNumber;\n    console.log({ updatePayload });\n\n\n\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.sales.update, updatePayload,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Sales order updated successfully!', { variant: 'success' });\n        setOpen(false);\n        setTempData({});\n        handleClearAllStates();\n        fetchSales();\n        setEditSales(false);\n        fetchSaleSummary();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.err, { variant: 'error' });\n      })\n  }\n\n  const productDiscount = sales.products.reduce((total, product) => {\n    const discountAmount = calculateDiscount(product);\n    return total + discountAmount;\n  }, 0)\n\n  const netTotalAmountWithGST = sales.products.reduce((total, product) => {\n    const sellingPrice = parseInt(!product.sellingPrice ? 0 : product.sellingPrice, 10);\n    const quantity = parseInt(!product.quantity ? 0 : product.quantity, 10);\n    // const gstPercentage = parseFloat(product.product.gstValue); // Assuming gstValue is a string representing percentage\n    const netAmount = sellingPrice * quantity;\n    // const gstAmount = (netAmount * gstPercentage) / 100;\n    // const totalAmountWithGST = netAmount + gstAmount;\n    const totalAmountWithGST = netAmount;\n    return total + totalAmountWithGST;\n  }, 0);\n\n\n  let offerDiscount = 0;\n  if (Object.keys(sales.offer).length > 0) {\n    if (sales.offer.type === 'PERCENTAGE') {\n      offerDiscount = (netTotalAmountWithGST * sales.offer.typeValue) / 100;\n    } else {\n      offerDiscount = sales.offer.typeValue;\n    }\n  }\n\n  let totalAmount = netTotalAmountWithGST - (productDiscount + Number(offerDiscount)) - parseFloat(discount !== '' ? discount : 0);\n\n  // if (editSales) {\n  //   totalAmount -= previouslyPaidAmount;\n  // };\n\n  let balanceAmount = 0;\n  if (sales.amountToPay) {\n    balanceAmount = totalAmount - sales.amountToPay;\n    if (editSales) {\n      balanceAmount -= previouslyPaidAmount;\n    };\n  };\n\n  const [startDate, setStartDate] = useState(dayjs().startOf('month'));\n  const [endDate, setEndDate] = useState(dayjs().endOf('month'));\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setEndDate(date);\n  };\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      const filteredSales = tempList.filter((sale) => {\n        const saleDate = dayjs(sale.createdAt);\n        console.log(startDate, endDate)\n        return saleDate.isBetween(startDate, endDate, null, '[]');\n      });\n      setSalesList(filteredSales);\n    } else {\n      setSalesList(tempList);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startDate, endDate])\n\n\n  const filteredSales = salesList.filter((salesData) =>\n    salesData?.customerId.name?.toLowerCase().includes(searchQuery?.toLowerCase()) ||\n    salesData?.invoiceNumber?.toLowerCase().includes(searchQuery?.toLowerCase())\n  );\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Sales </Typography>\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\", marginTop: \"20px\" }}>\n        <Stack direction=\"row\" spacing={1}>\n          <Chip\n            label={`Total  ${formatObj.format(salesSummary.totalSalesAmount)}`}\n            variant=\"outlined\"\n          />\n          <Chip\n            label={`Paid  ${formatObj.format(salesSummary.totalPaidAmount)}`}\n            variant=\"outlined\"\n          />\n          <Chip\n            label={`Pending  ${formatObj.format(salesSummary.pendingAmount)}`}\n            variant=\"outlined\"\n          />\n        </Stack>\n\n        {\n          user?.permissions?.sales?.u &&\n          <Stack>\n            <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={handleOpen}>\n              CREATE SALES ORDER\n            </Button>\n          </Stack>\n        }\n      </div >\n\n      <div style={{ marginTop: \"20px\" }}>\n        <div style={{ display: \"flex\", flexDirection: 'row', alignItems: \"center\", gap: \"10px\" }}>\n          <div >\n            <TextField\n              placeholder='Search'\n              size='small'\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div>\n            <LocalizationProvider dateAdapter={AdapterDayjs} >\n              <Box sx={{ display: 'flex', flexDirection: 'row', gap: '10px', alignItems: 'center' }}>\n                <DatePicker\n                  label=\"From\"\n                  format='DD/MM/YYYY'\n                  value={startDate}\n                  slotProps={{ textField: { size: 'small' } }}\n                  onChange={handleStartDateChange}\n                  renderInput={(props) => <TextField {...props} />}\n                />\n                <Typography>-</Typography>\n                <DatePicker\n                  label=\"To\"\n                  format='DD/MM/YYYY'\n                  value={endDate}\n                  slotProps={{ textField: { size: 'small' } }}\n                  onChange={handleEndDateChange}\n                  renderInput={(props) => <TextField {...props} />}\n                />\n              </Box>\n            </LocalizationProvider>\n          </div>\n        </div>\n\n\n        <div style={{ marginTop: \"20px\" }}>\n          <DataTable\n            columns={columns}\n            data={filteredSales}\n            pagination\n            progressPending={isSalesLoading}\n          />\n        </div>\n      </div>\n\n      {/* <Button onClick={() => {\n        // window.location.href = `mailto:rsaiprasad4@gmail.com?subject=Shared Content&body=Hii hello`;\n        window.location.href = `https://wa.me/+919922466094?text=Hiii Sourav`;\n      }}>\n        Send Via Email\n      </Button> */}\n\n\n      {/* Sales Modal */}\n      <Modal\n        open={open}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\" }}>\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', gap: '15px' }}>\n              <Autocomplete\n                disabled={editSales}\n                value={sales.mobileNumber}\n                options={customers}\n                fullWidth\n                getOptionLabel={(option) => {\n                  if (typeof option === 'string') {\n                    return option;\n                  }\n                  return option.mobileNumber;\n                }}\n                selectOnFocus\n                onChange={(event, newValue) => {\n                  console.log({ newValue });\n                  console.log('event calling and changing value from options')\n                  if (newValue) {\n                    setSales((prev) => ({ ...prev, mobileNumber: newValue, customer: newValue.name }));\n                  } else {\n                    setSales((prev) => ({ ...prev, mobileNumber: null, customer: '' }));\n                  }\n                }}\n                onInputChange={(event, newInputValue) => {\n                  // Check if the input value is a new mobile number\n                  const isNewMobileNumber = !customers.some((customer) => customer.mobileNumber === newInputValue);\n                  if (isNewMobileNumber) {\n                    console.log('Mobile number new ');\n                    // If it's a new mobile number, clear the customer name\n                    setSales((prev) => ({ ...prev, mobileNumber: newInputValue, customer: '' }));\n                  } else {\n                    // If it's an existing mobile number, find and set the customer name\n                    const selectedCustomer = customers.find((customer) => customer.mobileNumber === newInputValue);\n                    setSales((prev) => ({ ...prev, mobileNumber: newInputValue, customer: selectedCustomer.name }));\n                  }\n                }}\n                onBlur={(e) => {\n                  const { mobileNumber } = sales;\n                  if (typeof mobileNumber === 'string') {\n                    if (/^\\d+$/.test(mobileNumber)) {\n                      // If all characters are digits, slice the first 10 characters\n                      setSales((prev) => ({ ...prev, mobileNumber: mobileNumber.slice(0, 10) }));\n                      // enqueueSnackbar('Mobile number must be 10 digits only!', { variant: 'error' });\n                    } else {\n                      // If input contains non-digit characters, clear the value and show an error message\n                      setSales((prev) => ({ ...prev, mobileNumber: '' }));\n                      enqueueSnackbar('Mobile number must be numerical digits only!', { variant: 'error' });\n                    }\n                  }\n                }}\n                freeSolo\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Mobile Number\" fullWidth />\n                )}\n              />\n              <TextField\n                label='Customer Name'\n                disabled={editSales}\n                value={sales.customer}\n                onBlur={(e) => {\n                  const customerName = sales.customer;\n                  if (/\\d/.test(customerName)) {\n                    // If customerName contains digits, clear the value\n                    setSales((prev) => ({ ...prev, customer: '' }));\n                    enqueueSnackbar('Customer name cannot contain digits!', { variant: 'error' });\n                  }\n                }}\n                fullWidth\n                onChange={(e) => {\n                  setSales((prev) => ({ ...prev, customer: e.target.value }));\n                }}\n              />\n\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', gap: '15px' }}>\n\n              <Autocomplete\n                value={sales.salesMan}\n                disabled={editSales}\n                options={employees}\n                getOptionLabel={(prop) => prop.name}\n                fullWidth\n                onChange={(event, newValue) => {\n                  setSales((prev) => ({ ...prev, salesMan: newValue }))\n                }}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Sales Man\" fullWidth />\n                )}\n              />\n              <LocalizationProvider dateAdapter={AdapterDayjs} >\n                <DatePicker\n\n                  label=\"Invoice Date\"\n                  value={sales.invoiceDate}\n                  onChange={(newValue) => {\n                    setSales((prev) => ({ ...prev, invoiceDate: newValue }))\n                  }}\n                  format=\"DD/MM/YYYY\"\n                  disabled={editSales}\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider>\n              {/* <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                  label=\"Invoice Due Date\"\n                  format=\"DD/MM/YYYY\"\n                  value={sales.invoiceDueDate}\n                  minDate={sales.invoiceDate}\n                  onChange={(newValue) => {\n                    setSales((prev) => ({ ...prev, invoiceDueDate: newValue }))\n                  }}\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider> */}\n            </div>\n\n          </div>\n\n\n\n          {/* Second Row */}\n          <Grid container sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: \"flex\", justifyContent: 'space-between' }} alignItems='center'>\n            <Grid item xs={12} md={12} display='flex'>\n              {/* <FormControl sx={{ width: \"35%\" }} >\n                <InputLabel id=\"demo-simple-select-label\">All Categories</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  label='All Categories'\n                  value={saleProduct.category}\n                  onChange={(e) => {\n                    setSaleProduct((prev) => ({ ...prev, category: e.target.value, product: null, quantity: null }))\n                  }}\n                  disabled={editSales}\n                >\n                  <MenuItem value='All Categories'>All Categories</MenuItem>\n                  {\n                    categories.map((catgy, index) => (\n                      <MenuItem key={index} value={catgy.name}>{catgy.name}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl> */}\n\n\n              <Autocomplete\n                options={products}\n                getOptionLabel={(option) => `${option.name} (${option.barcode.toString()})`}\n                value={saleProduct?.product ?? null}\n                onChange={(event, newValue) => {\n                  if (newValue) {\n                    setSaleProduct((prev) => ({ ...prev, product: newValue }));\n                    addProductToSales(newValue);\n                  } else {\n                    setSaleProduct((prev) => ({ ...prev, product: null }));\n                  }\n                }}\n                // disabled={editSales}\n                fullWidth\n                renderInput={(params) => (\n                  <TextField {...params} inputRef={autocompleteRef} label=\"Search Products\" fullWidth />\n                )}\n              />\n            </Grid>\n\n            {/* <Grid item xs={12} md={2}>\n              <TextField\n                label='Quantity'\n                type='number'\n                disabled={editSales}\n                onChange={(e) => setSaleProduct((prev) => ({ ...prev, quantity: e.target.value }))}\n                value={saleProduct.quantity}\n              />\n            </Grid>\n            <Grid item xs={12} md={2} >\n              <Button\n                startIcon={<AddIcon />}\n                disabled={\n                  saleProduct.product === null\n                  || saleProduct.quantity === null ||\n                  saleProduct.quantity <= 0\n                }\n                variant='contained'\n                color='primary'\n                onClick={addProductToSales}\n                fullWidth\n              >\n                ADD TO ORDER\n              </Button>\n            </Grid> */}\n          </Grid>\n\n\n          {\n            sales.products.length > 0 &&\n\n            <Grid container sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", }} alignItems='center'>\n              <Grid item xs={12}>\n                <DataTable\n                  columns={productColumns}\n                  data={sales.products}\n                />\n              </Grid>\n              <Grid item xs={12} display='flex' justifyContent='flex-end' sx={{ mt: 2 }}>\n\n                <div style={{ width: '200px' }}>\n                  <div>\n                    Voucher\n                  </div>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <TextField\n                      fullWidth\n                      size='small'\n                      type='number'\n                      label=\"Enter Discount\"\n                      disabled={Object.keys(sales.offer).length > 0}\n                      onBlur={(e) => {\n                        if (discount === '') {\n                          setDiscount(0);\n                        };\n                        if (parseFloat(discount) > netTotalAmountWithGST) {\n                          setDiscount();\n                          enqueueSnackbar('Discount cannot be greater than total amount!', { variant: 'error' });\n                        };\n                      }}\n                      value={discount}\n                      onChange={(e) => {\n                        if (Object.keys(sales.offer).length > 0) {\n                          setSales((prev) => ({ ...prev, offer: {} }))\n                        };\n                        setDiscount(e.target.value)\n                      }}\n                    />\n                  </div>\n                </div>\n\n              </Grid>\n              <ListItemText primary='OR' sx={{ display: 'flex', justifyContent: \"flex-end\", marginRight: '100px', mt: 0.5 }} />\n              {console.log(\"sales.offer\", sales.offer)}\n              <Grid item xs={12} display='flex' justifyContent='flex-end' sx={{ mt: 0.5 }}>\n                <div style={{ width: '200px' }} >\n                  {/* \n                  {\n                    !editSales && */}\n                  <div>\n                    Select Offer\n                  </div>\n                  {/* } */}\n\n                  <div style={{ paddingTop: \"5px\" }}>\n                    {\n                      Object.keys(sales?.offer).length > 0\n                        ? <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <Chip variant='contained' color='primary' label={`Offer Applied : ${sales.offer.code}`} onDelete={() => { setSales((prev) => ({ ...prev, offer: {} })) }} />\n                          <Typography variant='caption' gutterBottom >\n                            {\n                              sales.offer.type === 'PERCENTAGE' ?\n                                `${sales.offer.typeValue}% Off` :\n                                `${format(sales.offer.typeValue)} Off`\n                            }\n                          </Typography>\n                        </div>\n                        :\n                        <div style={{ paddingTop: \"5px\" }}>\n                          <FormControl fullWidth size=\"small\">\n                            <InputLabel id=\"demo-simple-select-label\">Select Offer</InputLabel>\n                            <Select\n                              disabled={discount}\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              label='Select Offer'\n                              value={sales.offer ?? ''}\n                              onChange={(e) => setSales((prev) => ({ ...prev, offer: e.target.value }))}\n                            >\n                              {/*  Add a enter discount manual field in this menu item it self to discount the user if he does not have to add offer */}\n\n                              {offers.map((offer, i) => (\n                                <MenuItem key={i} value={offer}>{offer.code}</MenuItem>\n                              ))}\n                            </Select>\n                          </FormControl>\n                        </div>\n                    }\n                  </div>\n\n\n                </div>\n              </Grid>\n            </Grid>\n          }\n\n          <Grid container display='flex' justifyContent='flex-end'>\n            <Grid item xs={12} md={6} lg={6} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", }}>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div>Product Discount</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(discount)\n                  }</div>\n                </div>\n\n                {\n                  Object.keys(sales.offer).length !== 0 ?\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                      <div>Offer Discount</div>\n                      <div>{\n                        format(offerDiscount)\n                      }</div>\n                    </div>\n                    : null\n                }\n\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <div>Total Amount</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(netTotalAmountWithGST)\n                  }</div>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container display='flex' justifyContent='flex-end'>\n            <Grid item xs={12} md={6} lg={6} sx={{ backgroundColor: \"white\", padding: \"15px\", borderRadius: \"10px\", display: 'flex', flexDirection: 'column', gap: '10px' }}>\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }} >\n                {/* <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Mode'\n                    value={sales.paymentMode}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      common.paymentMode.map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl> */}\n                <TextField\n                  fullWidth\n                  disabled={editSales}\n                  size='small'\n                  type='number'\n                  label=\"Enter Amount\"\n                  onBlur={(e) => {\n                    console.log(\"totalAmount\", totalAmount)\n                    if (parseFloat(sales.amountToPay) > totalAmount) {\n                      enqueueSnackbar('Amount to pay cannot be greater than total amount!', { variant: 'error' });\n                      setSales((prev) => ({ ...prev, amountToPay: 0 }));\n                    };\n                  }}\n                  value={sales.amountToPay}\n                  onChange={(e) => {\n                    setSales((prev) => ({ ...prev, amountToPay: e.target.value }));\n                  }}\n                />\n\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Status</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Status'\n                    value={sales.paymentStatus}\n                    disabled={editSales}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentStatus: e.target.value }))}\n                  >\n                    {\n                      common.paymentStatus.map((paymentStatus, index) => (\n                        <MenuItem key={index} value={paymentStatus}>{paymentStatus}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n              <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }} >\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Payment Mode</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Payment Mode'\n                    value={sales.paymentMode}\n                    disabled={editSales}\n                    onChange={(e) => setSales((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                  >\n                    {\n                      [\n                        'CASH',\n                        'CARD',\n                        'UPI',\n                        'CHEQUE',\n                      ].map((paymentMode, index) => (\n                        <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n\n\n                <FormControl fullWidth size=\"small\" >\n                  <InputLabel id=\"demo-simple-select-label\">Select Bank</InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    label='Select Bank'\n                    value={sales.bank}\n                    disabled={\n                      editSales ||\n                      (sales.paymentMode === 'CASH')}\n                    onChange={(e) => setSales((prev) => ({ ...prev, bank: e.target.value }))}\n                  >\n                    {\n                      banks.map((bank, index) => (\n                        <MenuItem key={index} value={bank._id} >{bank.bankName}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </div>\n            </Grid>\n\n          </Grid>\n\n          <Grid container  >\n            <Grid item xs={12} md={12} lg={12} sx={{ backgroundColor: \"white\", p: \"15px\", borderRadius: \"10px\" }} display='flex' justifyContent='space-between' alignItems='center'>\n              <div style={{ display: 'flex', justifyContent: 'flex-start', gap: '20px' }}>\n\n                <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '40px' }}>\n                  <div>Total  :</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(totalAmount)\n                  }</div>\n                </div>\n                <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '40px' }}>\n                  <div>Balance  :</div>\n                  <div>{\n                    sales.products.length === 0 ?\n                      format(0) :\n                      format(balanceAmount)\n                  }</div>\n                </div>\n\n                {\n                  editSales &&\n                  <div style={{ display: \"flex\", flexDirection: 'row', justifyContent: 'space-around', gap: '40px' }}>\n                    <div>Previously Paid  :</div>\n                    <div>{\n                      sales.products.length === 0 ?\n                        format(0) :\n                        format(previouslyPaidAmount)\n                    }</div>\n                  </div>\n                }\n              </div>\n\n              <div style={{ display: 'flex', gap: '10px' }}>\n\n                {\n                  editSales ?\n                    <Button variant='contained'\n                      onClick={handleUpdateSalesOrder}\n                      color='primary' disabled={\n                        !sales.paymentStatus\n                      } >UPDATE</Button>\n\n                    :\n                    <Button variant='contained'\n                      onClick={handleSaveSalesOrder}\n                      color='primary' disabled={\n                        !sales.customer ||\n                        !sales.mobileNumber ||\n                        !sales.salesMan ||\n                        sales.products.length === 0 ||\n                        !sales.amountToPay ||\n                        !sales.paymentMode ||\n                        !sales.paymentStatus ||\n                        (\n                          sales.paymentMode !== 'CASH' && !sales.bank\n                        )\n                      } >SAVE</Button>\n                }\n\n\n\n\n                <Button variant='contained' color='error' onClick={handleClose}>CANCEL</Button>\n              </div>\n            </Grid>\n          </Grid>\n\n        </Box>\n      </Modal>\n\n\n\n\n\n      {/* RECORD PAYMENT MODAL  */}\n      <Modal id=\"paymentModal\"\n        open={recordPaymentModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={styleForRecordPayment}>\n          <Grid container sx={{ display: 'flex', flexDirection: 'column', gap: '10px' }} >\n            <Grid item xs={12}>\n              <Typography variant='h6'>Customer Details</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Name'\n                value={recordPayment.name}\n                disabled\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Balance'\n                value={recordPayment.balance}\n                disabled\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='h6'>Payment Details</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label='Amount To Pay'\n                value={recordPayment.amountToPay}\n                onBlur={\n                  () => {\n                    if (recordPayment.amountToPay > recordPayment.balance) {\n                      enqueueSnackbar('Amount to pay cannot be greater than balance!', { variant: 'error' });\n                      setRecordPayment((prev) => ({ ...prev, amountToPay: recordPayment.balance }));\n                    }\n                  }\n                }\n                onChange={(e) => setRecordPayment((prev) => ({ ...prev, amountToPay: e.target.value }))}\n                sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12} >\n              <LocalizationProvider dateAdapter={AdapterDayjs} >\n                <DatePicker\n\n                  label=\"Payment Date\"\n                  value={recordPayment.paymentDate}\n                  maxDate={dayjs(new Date())}\n                  onChange={(newValue) => {\n                    setRecordPayment((prev) => ({ ...prev, paymentDate: newValue }))\n                  }}\n                  sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                  format=\"DD/MM/YYYY\"\n                  slotProps={{ textField: { fullWidth: true } }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth >\n                <InputLabel id=\"record-payment-mode\">Select Payment Mode</InputLabel>\n                <Select\n                  labelId=\"record-payment-mode\"\n                  id=\"demo-simple-select\"\n                  label='Select Payment Mode'\n                  sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                  value={recordPayment.paymentMode}\n                  onChange={(e) => setRecordPayment((prev) => ({ ...prev, paymentMode: e.target.value }))}\n                >\n                  {\n                    [\n                      'CASH',\n                      'CARD',\n                      'UPI',\n                      'CHEQUE',\n                    ].map((paymentMode, index) => (\n                      <MenuItem key={index} value={paymentMode}>{paymentMode}</MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n            {\n              recordPayment.paymentMode !== 'CASH' &&\n              <Grid item xs={12}>\n                <FormControl fullWidth >\n                  <InputLabel id=\"select-bank\">Select Bank</InputLabel>\n                  <Select\n                    labelId=\"select-bank\"\n                    id=\"demo-simple-select\"\n                    label='Select Bank'\n                    value={recordPayment.bank}\n                    sx={{ backgroundColor: 'white', borderRadius: '7px' }}\n                    onChange={(e) => setRecordPayment((prev) => ({ ...prev, bank: e.target.value }))}\n                  >\n                    {\n                      banks.map((bank, index) => (\n                        <MenuItem key={index} value={bank._id} >{bank.bankName}</MenuItem>\n                      ))\n                    }\n                  </Select>\n                </FormControl>\n              </Grid>\n            }\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleRecordPayment}\n                disabled={\n                  !recordPayment.amountToPay ||\n                  !recordPayment.paymentMode ||\n                  (recordPayment.paymentMode !== 'CASH' && !recordPayment.bank)\n                }\n              >\n                Update Payment\n              </Button>\n              <Button\n                variant='contained'\n                color='error'\n                onClick={() => {\n                  setRecordPaymentModal(false);\n                  setRecordPayment(initialRecordPaymentState);\n                }}\n              >\n                Cancel\n              </Button>\n\n            </Grid>\n\n          </Grid>\n        </Box>\n      </Modal>\n\n\n\n      {/* Dialog For Delete */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle>Remove</DialogTitle>\n        <DialogContent>\n          Are you sure you want to delete this sales order?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => {\n            setOpenDialog(false);\n            setTempData({});\n          }}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} variant=\"contained\" color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/one/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard : Sales</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.5 11C9.43 11 11 9.43 11 7.5S9.43 4 7.5 4 4 5.57 4 7.5 5.57 11 7.5 11m0-5C8.33 6 9 6.67 9 7.5S8.33 9 7.5 9 6 8.33 6 7.5 6.67 6 7.5 6M4.0025 18.5832 18.59 3.9955l1.4142 1.4143L5.4167 19.9974zM16.5 13c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5m0 5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5\"\n}), 'Percent');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["style","position","top","left","transform","width","bgcolor","color","borderRadius","height","overflowY","boxShadow","display","flexDirection","justifyContent","gap","p","styleForRecordPayment","initialSaleState","customer","mobileNumber","salesMan","invoiceDate","invoiceDueDate","products","offer","amountToPay","totalAmount","productDiscount","paymentMode","paymentStatus","bank","initialSaleProduct","category","product","quantity","netAmount","discount","sellingPrice","initialRecordPaymentState","salesOrderId","name","balance","paymentDate","dayjs","Date","SalesView","_user$permissions2","_user$permissions2$sa","_saleProduct$product","_sales$offer","settings","useSettingsContext","autocompleteRef","useRef","user","useAuthContext","_useState","useState","_useState2","_slicedToArray","setDiscount","_useState3","_useState4","previouslyPaidAmount","setPreviouslyPaidAmount","enqueueSnackbar","useSnackbar","_useState5","_useState6","open","setOpen","handleClearAllStates","setSales","setSaleProduct","prev","_objectSpread","_useState7","_useState8","openDialog","setOpenDialog","_useState9","_useState10","customers","setCustomers","_useState11","_useState12","employees","setEmployees","_useState13","_useState14","_useState15","_useState16","banks","setBanks","_useState17","_useState18","setProducts","_useState19","_useState20","offers","setOffers","_useState21","_useState22","sales","_useState23","_useState24","searchQuery","setSearchQuery","_useState25","_useState26","saleProduct","_useState27","_useState28","isSalesLoading","setIsSalesLoading","_useState29","_useState30","salesList","setSalesList","_useState31","_useState32","tempList","setTempList","_useState33","totalSalesAmount","totalPaidAmount","pendingAmount","_useState34","salesSummary","setSaleSummary","_useState35","_useState36","anchorEl","setAnchorEl","openMenu","Boolean","_useState37","_useState38","tempData","setTempData","_useState39","_useState40","recordPaymentModal","setRecordPaymentModal","_useState41","_useState42","recordPayment","setRecordPayment","_useState43","_useState44","editSales","setEditSales","fetchCustomers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","data","t0","variant","stop","apply","arguments","fetchEmployeesData","_ref2","_callee2","_context2","fetchProducts","_ref3","_callee3","_context3","fetchOffers","_ref5","_callee5","_context5","status","fetchSales","_ref6","_callee6","_context6","fetchBanks","_ref7","_callee7","_context7","fetchSaleSummary","_ref8","_callee8","_context8","useEffect","columns","selector","row","customerId","sortable","salesManId","length","toFixed","payments","paymentID","invoiceNumber","amount","formatDate","updatedAt","cell","_user$permissions","_user$permissions$sal","_jsxs","_Fragment","children","_jsx","Button","disabled","permissions","u","onClick","event","currentTarget","endIcon","ArrowDropDownIcon","Menu","id","onClose","MenuListProps","MenuItem","handleEdit","remainingAmount","_id","handleProductChange","index","field","fieldValue","updatedProducts","_toConsumableArray","console","log","prevSales","previousProducts","map","find","prod","_tempData$discount","productColumns","_row$product$name","_row$product","TextField","autoFocus","type","onBlur","e","parseInt","onChange","target","value","size","center","purchasePrice","format","String","_row$product$gstValue","_row$product2","gstValue","InputProps","endAdornment","InputAdornment","PercentIcon","fontSize","IconButton","newProducts","splice","handleDeleteProduct","DeleteIcon","Intl","NumberFormat","currency","reduce","total","discountAmount","calculateDiscount","netTotalAmountWithGST","offerDiscount","Object","keys","typeValue","Number","parseFloat","balanceAmount","_useState45","startOf","_useState46","startDate","setStartDate","_useState47","endOf","_useState48","endDate","setEndDate","filteredSales","filter","sale","saleDate","createdAt","isBetween","salesData","_salesData$customerId","_salesData$invoiceNum","toLowerCase","includes","Container","maxWidth","themeStretch","Typography","marginTop","Stack","direction","spacing","Chip","label","formatObj","startIcon","AddIcon","alignItems","placeholder","startAdornment","SearchIcon","LocalizationProvider","dateAdapter","AdapterDayjs","Box","sx","DatePicker","slotProps","textField","date","renderInput","props","DataTable","pagination","progressPending","Modal","backgroundColor","padding","Autocomplete","options","fullWidth","getOptionLabel","option","selectOnFocus","newValue","onInputChange","newInputValue","some","selectedCustomer","test","slice","freeSolo","params","customerName","prop","Grid","container","item","xs","md","barcode","toString","existingProduct","productToAdd","current","blur","addProductToSales","inputRef","mt","paddingTop","ListItemText","primary","marginRight","code","onDelete","gutterBottom","FormControl","InputLabel","Select","labelId","i","lg","common","bankName","updatePayload","totalDiscount","then","res","catch","err","error","salesPayload","maxDate","recordPaymentPayload","Dialog","DialogTitle","DialogContent","DialogActions","config","msg","Page","Helmet","OneView","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","_excluded","DialogTitleRoot","styled","slot","overridesResolver","styles","root","flex","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","_React$useContext$tit","DialogContext","titleId","_extends","component","clsx"],"sourceRoot":""}